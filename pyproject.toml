[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

# UV-specific configuration for ultra-fast dependency resolution
[tool.uv]
# Use the fastest available resolver
resolution-mode = "highest"
# Pre-release support for neuromorphic dependencies
prerelease = "allow"
# System packages integration for hardware SDKs
system-site-packages = false
# Prefer binary wheels for neuromorphic libraries
prefer-binary = true

[project]
name = "spikeformer-neuromorphic-kit"
version = "0.1.0"
description = "Complete toolkit for training and deploying spiking transformer networks on neuromorphic hardware"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Daniel Schmidt", email = "daniel@your-org.com"}
]
keywords = [
    "neuromorphic",
    "spiking-neural-networks",
    "transformer",
    "energy-efficient",
    "pytorch",
    "loihi",
    "spinnaker",
    "edge-ai"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.3.0",
    "tqdm>=4.62.0",
    "pyyaml>=6.0",
    "click>=8.0.0",
    "rich>=12.0.0",
    "transformers>=4.20.0",
    "datasets>=2.0.0",
    "accelerate>=0.20.0",
    "wandb>=0.15.0",
    "mlflow>=2.0.0",
    "prometheus-client>=0.14.0",
    "psutil>=5.8.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-exporter-otlp>=1.20.0",
    "opentelemetry-instrumentation>=0.41b0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.0.280",
    "pre-commit>=2.20.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autobuild>=2021.3.14",
    "jupyter>=1.0.0",
    "jupyterlab>=3.4.0",
    "notebook>=6.4.0",
    "ipywidgets>=7.7.0",
]

loihi2 = ["nxsdk>=1.0.0"]
spinnaker = ["spynnaker>=6.0.0", "spalloc>=6.0.0"]
edge = ["onnx>=1.12.0", "onnxruntime>=1.12.0", "tensorrt>=8.4.0"]

[project.scripts]
spikeformer = "spikeformer.cli:main"
spikeformer-convert = "spikeformer.cli.convert:main"
spikeformer-train = "spikeformer.cli.train:main"
spikeformer-deploy = "spikeformer.cli.deploy:main"
spikeformer-profile = "spikeformer.cli.profile:main"

[project.urls]
Homepage = "https://github.com/your-org/spikeformer-neuromorphic-kit"
Repository = "https://github.com/your-org/spikeformer-neuromorphic-kit"
Documentation = "https://docs.your-org.com/spikeformer"
"Bug Tracker" = "https://github.com/your-org/spikeformer-neuromorphic-kit/issues"

[tool.setuptools]
packages = ["spikeformer"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["spikeformer", "tests"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "transformers.*",
    "datasets.*",
    "wandb.*",
    "mlflow.*",
    "nxsdk.*",
    "spynnaker.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=spikeformer",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "hardware: marks tests requiring hardware",
    "loihi2: marks tests requiring Loihi 2 hardware",
    "spinnaker: marks tests requiring SpiNNaker hardware",
    "gpu: marks tests requiring GPU",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["spikeformer"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"