[tox]
envlist = py{39,310,311,312}, lint, typecheck, security, docs, coverage
isolated_build = true
skip_missing_interpreters = true

[gh-actions]
python =
    3.9: py39
    3.10: py310, lint, typecheck, security, docs, coverage
    3.11: py311
    3.12: py312

[testenv]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-xdist>=3.0.0
    pytest-benchmark>=4.0.0
extras = dev
commands = 
    pytest tests/unit/ tests/integration/ --cov=spikeformer --cov-report=term-missing --cov-report=xml -v {posargs}

[testenv:lint]
deps = 
    ruff>=0.0.280
    black>=22.0.0
    isort>=5.10.0
commands = 
    ruff check spikeformer/ tests/
    black --check spikeformer/ tests/
    isort --check-only spikeformer/ tests/

[testenv:typecheck]
deps = 
    mypy>=1.0.0
    types-PyYAML
    types-requests
extras = dev
commands = 
    mypy spikeformer/

[testenv:security]
deps = 
    bandit>=1.7.0
    safety>=2.0.0
    pip-audit>=2.4.0
commands = 
    bandit -r spikeformer/ -f json -o bandit-report.json
    safety check
    pip-audit

[testenv:docs]
deps = 
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
    myst-parser>=0.18.0
extras = dev
commands = 
    sphinx-build -b html docs/ docs/_build/

[testenv:coverage]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    coverage[toml]>=6.0.0
extras = dev
commands = 
    pytest tests/ --cov=spikeformer --cov-report=html --cov-report=term-missing --cov-report=xml
    coverage report --fail-under=80

[testenv:hardware]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
extras = dev,hardware
commands = 
    pytest tests/hardware/ --hardware -v {posargs}

[testenv:benchmark]
deps = 
    pytest>=7.0.0
    pytest-benchmark>=4.0.0
extras = dev
commands = 
    pytest tests/performance/ --benchmark-only -v

[testenv:build]
deps = 
    build>=0.8.0
    twine>=4.0.0
commands = 
    python -m build
    twine check dist/*

[testenv:clean]
deps = 
commands = 
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.pytest_cache', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import pathlib; [p.unlink() for p in pathlib.Path('.').rglob('*.pyc')]"
    python -c "import pathlib; [p.rmdir() for p in pathlib.Path('.').rglob('__pycache__') if p.is_dir()]"

[coverage:run]
source = spikeformer
omit = 
    */tests/*
    */test_*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod