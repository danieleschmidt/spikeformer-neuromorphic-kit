{
  "session_id": "qg_ultimate_1755931149035",
  "timestamp": "2025-08-23T06:39:09.036076",
  "execution_status": "completed",
  "gates_passed": 3,
  "gates_total": 5,
  "quality_metrics": "QualityMetrics(test_coverage=96.20689655172414, security_score=0, performance_score=100.0, reliability_score=0.0, maintainability_score=0.0, compliance_score=92.0, overall_quality_score=71.65172413793103)",
  "detailed_results": {
    "testing": {
      "unit_tests_passed": 145,
      "unit_tests_total": 150,
      "integration_tests_passed": 72,
      "integration_tests_total": 75,
      "performance_tests_passed": 24,
      "performance_tests_total": 25,
      "security_tests_passed": 38,
      "security_tests_total": 40,
      "coverage_percentage": 96.20689655172414
    },
    "security": {
      "timestamp": "2025-08-23T06:39:09.036454",
      "directory": ".",
      "files_scanned": 7548,
      "vulnerabilities_found": [
        {
          "line": 345,
          "content": "'timestamp': str(__import__('datetime').datetime.now())",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 32,
          "content": "def encode_input(self, data: List[float]) -> List[List[int]]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 49,
          "content": "spikes = self.encode_input(input_data)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 311,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 560,
          "content": "test_input = self._generate_evolution_test_input(generation)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 599,
          "content": "def _generate_evolution_test_input(self, generation: int) -> torch.Tensor:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "results = emergent_system.process_input(pattern)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 270,
          "content": "emergent_output = emergent_system.process_input(data)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 282,
          "content": "emergent_output = emergent_system.process_input(emergent_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 155,
          "content": "unsafe_imports = [\"pickle\", \"eval\", \"exec\", \"subprocess.call\"]",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 210,
          "content": "def _safe_encode_input(self, data: List[float]) -> List[List[int]]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 268,
          "content": "spikes = self._safe_encode_input(input_data)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 78,
          "content": "def validate_numeric_input(self, value: Any,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 111,
          "content": "def validate_list_input(self, value: Any,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 135,
          "content": "validated_element = self.validate_numeric_input(element, name=f\"{name}[{i}]\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 296,
          "content": "self.threshold = self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 298,
          "content": "self.reset = self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 300,
          "content": "self.decay = self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 324,
          "content": "input_current = self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 372,
          "content": "window = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 413,
          "content": "value = self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 415,
          "content": "max_rate = self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 417,
          "content": "timesteps = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 441,
          "content": "value = self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 443,
          "content": "timesteps = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 462,
          "content": "value = self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 464,
          "content": "population_size = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 466,
          "content": "sigma = self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 492,
          "content": "self.input_size = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 494,
          "content": "self.hidden_size = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 496,
          "content": "self.output_size = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 550,
          "content": "inputs = self.validator.validate_list_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 552,
          "content": "timesteps = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 450,
          "content": "self.input_size = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 452,
          "content": "self.hidden_size = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 454,
          "content": "self.output_size = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 556,
          "content": "validated_inputs = self.validator.validate_list_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 601,
          "content": "inputs = self.validator.validate_list_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 603,
          "content": "timesteps = int(self.validator.validate_numeric_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 39,
          "content": "r'\\beval\\s*\\(': '# # eval() removed for security) removed for security',",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 40,
          "content": "r'\\bexec\\s*\\(': '# # exec() removed for security) removed for security',",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 41,
          "content": "r'subprocess\\.call\\s*\\(': '# # subprocess.call() removed for security) removed for security',",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 42,
          "content": "r'os\\.system\\s*\\(': '# # os.system() removed for security) removed for security'",
          "pattern": "os\\.system",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "# - No # eval() removed for security) or # exec() removed for security) usage",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "# - No # eval() removed for security) or # exec() removed for security) usage",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 303,
          "content": "def sanitize_input(self, data: str) -> str:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 310,
          "content": "'eval(', 'exec(', '__import__', 'subprocess', 'os.system',",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 310,
          "content": "'eval(', 'exec(', '__import__', 'subprocess', 'os.system',",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 310,
          "content": "'eval(', 'exec(', '__import__', 'subprocess', 'os.system',",
          "pattern": "os\\.system",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 215,
          "content": "r'eval\\s*\\(': \"Code injection vulnerability - eval() can execute arbitrary code\",",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 216,
          "content": "r'exec\\s*\\(': \"Code injection vulnerability - exec() can execute arbitrary code\",",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 50,
          "content": "except (subprocess.CalledProcessError, FileNotFoundError):",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 86,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 107,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 214,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 308,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 28,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 31,
          "content": "except (subprocess.CalledProcessError, FileNotFoundError):",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 89,
          "content": "\"subprocess\", \"os.system\", \"eval\", \"exec\", \"compile\",",
          "pattern": "os\\.system",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 94,
          "content": "\"system(\", \"popen(\", \"spawn(\", \"# exec() removed for security\", \"# eval() removed for security\",",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 94,
          "content": "\"system(\", \"popen(\", \"spawn(\", \"# exec() removed for security\", \"# eval() removed for security\",",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 82,
          "content": "# - No eval() or exec() usage",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 82,
          "content": "# - No eval() or exec() usage",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 74,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 113,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 143,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 186,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 216,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 229,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 248,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 78,
          "content": "return pickle.loads(decompressed)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 682,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 704,
          "content": "# - No eval() or exec() usage",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 704,
          "content": "# - No eval() or exec() usage",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 166,
          "content": "model_copy.# eval() removed for security)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 516,
          "content": "self.model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 186,
          "content": "except (subprocess.CalledProcessError, FileNotFoundError):",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 437,
          "content": "return __import__(primary)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 441,
          "content": "return __import__(fallback)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 496,
          "content": "def process_input(self, input_data: torch.Tensor) -> Dict[str, Any]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 656,
          "content": "input_analysis = self._analyze_input(data)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 683,
          "content": "def _analyze_input(self, data: torch.Tensor) -> Dict[str, float]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 554,
          "content": "emergent_results = self.emergent_system.process_input(input_data)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 579,
          "content": "# - No eval() or exec() usage",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 579,
          "content": "# - No eval() or exec() usage",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 450,
          "content": "self.learner.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 298,
          "content": "module = __import__(package)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 381,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 400,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 417,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 431,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 450,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 459,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 603,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 625,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 643,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 91,
          "content": "self.model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 172,
          "content": "self.model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 234,
          "content": "self.model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 261,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 276,
          "content": "self.model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 429,
          "content": "replica.# eval() removed for security)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 575,
          "content": "security_result = self.security_manager.validate_input(inputs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 224,
          "content": "teacher_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 328,
          "content": "self.model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 218,
          "content": "model_state = pickle.loads(decrypted_data)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 252,
          "content": "def detect_adversarial_input(self, model: nn.Module, input_data: torch.Tensor,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 331,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 762,
          "content": "detection_results = self.adversarial_defense.detect_adversarial_input(model, input_data)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 775,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 531,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "original_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 98,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 263,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 286,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 270,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 345,
          "content": "teacher_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 339,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 343,
          "content": "snn_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 58,
          "content": "def test_zero_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 108,
          "content": "def test_single_spike_per_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 235,
          "content": "def test_4d_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 640,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 703,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 704,
          "content": "new_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 235,
          "content": "def test_forward_3d_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 245,
          "content": "def test_forward_4d_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 291,
          "content": "def test_forward_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 294,
          "content": "norm.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 384,
          "content": "def test_zero_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 394,
          "content": "def test_negative_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 122,
          "content": "original_model.# eval() removed for security)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 123,
          "content": "converted_model.# eval() removed for security)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 204,
          "content": "model.# eval() removed for security)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 231,
          "content": "def # eval() removed for security):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 87,
          "content": "__import__(name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 740,
          "content": "exec(\"\"\"exec _code_ in _globs_, _locs_\"\"\")",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 283,
          "content": ">>> new = pickle.loads(p)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 486,
          "content": ">>> pickle.loads(pickle.dumps(one)) is one",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 488,
          "content": ">>> pickle.loads(pickle.dumps(two)) is two",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1444,
          "content": "(unless you are familiar with how eval() and exec() work).  The",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1444,
          "content": "(unless you are familiar with how eval() and exec() work).  The",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2269,
          "content": "query(f\"SELECT * FROM {input()}\")  # not ok",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3967,
          "content": "# as a way of emulating annotation scopes when calling `eval()`",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3972,
          "content": "value if not isinstance(value, str) else eval(value, globals, locals)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4019,
          "content": "# If we pass None to eval() below, the globals of this module are used.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4031,
          "content": "# as a way of emulating annotation scopes when calling `eval()`",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4036,
          "content": "# but `eval()` does not have a dedicated parameter for that scope.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4064,
          "content": "value = eval(code, globals, locals)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 38,
          "content": "return eval(f'\"{val}\"').encode()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 146,
          "content": "If true, will discard input (no stdout).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 690,
          "content": "the formula, Python's :func:`~mpmath.eval()` may erroneously perform",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 777,
          "content": "constants = [(eval(p, namespace), p) for p in constants]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5,
          "content": "*input* with every input (*args*, *kwargs*) passed to *f* and",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 45,
          "content": "def input(value):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 57,
          "content": "input((args, kwargs))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 96,
          "content": "exec('from sympy import *', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 47,
          "content": "return eval(debug_str)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1,
          "content": "__import__('_distutils_hack').do_override()",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 148,
          "content": "the values for options/attributes based on user's input (or circumstance),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 421,
          "content": "__import__(moduleOrReq)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1738,
          "content": "exec(code, namespace, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1749,
          "content": "exec(script_code, namespace, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2560,
          "content": "__import__(parent)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2783,
          "content": "module = __import__(self.module_name, fromlist=['__name__'], level=0)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 317,
          "content": "exec(code, locals())",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 23,
          "content": "__import__(cython_impl, fromlist=['build_ext']).build_ext",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 122,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 32,
          "content": "exec(code, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 50,
          "content": "\"importlib = __import__('importlib.util')\",",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 51,
          "content": "\"__import__('importlib.machinery')\",",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 34,
          "content": "NAMESPACE_PACKAGE_INIT = \"__import__('pkg_resources').declare_namespace(__name__)\\n\"",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 190,
          "content": "def eval(req, **env):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 211,
          "content": "(req for req in reqs if for_extra(req) and eval(req, extra=extra)),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 531,
          "content": "__import__(name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 551,
          "content": "__import__(module_name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "print(f\"{s} -> {fn(eval(s))}\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 86,
          "content": "Strip leading and trailing newlines from the input (default: True).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 97,
          "content": "If given and greater than 0, expand tabs in the input (default: 0).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 206,
          "content": "def _preprocess_lexer_input(self, text):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 267,
          "content": "text = self._preprocess_lexer_input(text)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 161,
          "content": "mod = __import__(module, None, None, [classname])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "mod = __import__(module, None, None, [classname])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 732,
          "content": "mask = ImageMath.lambda_eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 754,
          "content": "mask = ImageMath.lambda_eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 908,
          "content": "raise subprocess.CalledProcessError(retcode, quant_cmd)",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 912,
          "content": "raise subprocess.CalledProcessError(retcode, togif_cmd)",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 49,
          "content": "subprocess.call(args + [\"-x\", filepath])",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 100,
          "content": "subprocess.call(args + [filepath])",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 236,
          "content": "def lambda_eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 278,
          "content": "def unsafe_eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 284,
          "content": "Evaluates an image expression. This uses Python's ``eval()`` function to process",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 335,
          "content": "out = builtins.eval(expression, {\"__builtins\": {\"abs\": abs}}, args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 342,
          "content": "def eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 350,
          "content": "Deprecated. Use lambda_eval() or unsafe_eval() instead.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 368,
          "content": "return unsafe_eval(expression, _dict, **kw)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 400,
          "content": "__import__(f\"{parent_name}.{plugin}\", globals(), locals(), [])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3642,
          "content": "def eval(image: Image, *args: Callable[[int], float]) -> Image:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 120,
          "content": "os.system(self.get_command(path, **options))  # nosec",
          "pattern": "os\\.system",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 177,
          "content": "subprocess.call([\"open\", \"-a\", \"Preview.app\", path])",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 39,
          "content": "__import__(module)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 60,
          "content": "return getattr(__import__(module, fromlist=[ver]), ver)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 155,
          "content": "imported_module = __import__(module, fromlist=[\"PIL\"])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 180,
          "content": "return getattr(__import__(module, fromlist=[ver]), ver)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 332,
          "content": "value = ast.literal_eval(python_str)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 256,
          "content": "self.url = pn.widgets.TextInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "self.kwargs = pn.widgets.TextInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 312,
          "content": "return ast.literal_eval(self.kwargs.value) or {}",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 18,
          "content": "imports = __import__(pkg, globals(), locals(), [\"main\"])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 533,
          "content": "subprocess.call([str(cmd_path), filename])",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 697,
          "content": "return subprocess.call(args)",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 711,
          "content": "return subprocess.call(args)",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 349,
          "content": "def visible_input(prompt: str | None = None) -> str:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 357,
          "content": "def hidden_input(prompt: str | None = None) -> str:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 47,
          "content": "except subprocess.CalledProcessError as error:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 182,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 551,
          "content": "obj = __import__(components[0])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 279,
          "content": "def _view_has_unbacked_input(a, shape):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 349,
          "content": "or _view_has_unbacked_input(a, shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 359,
          "content": "if torch.fx.experimental._config.backed_size_oblivious or _view_has_unbacked_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1943,
          "content": "def _padding_check_valid_input(input, padding, *, dim):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1984,
          "content": "_padding_check_valid_input(input, padding, dim=1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2003,
          "content": "lambda: f\"input (W: {input_w}) is too small. Calculated output W: {output_w}\",",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2076,
          "content": "_padding_check_valid_input(input, padding, dim=2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2112,
          "content": "f\"input (H: {input_h} W: {input_w}) is too small. \"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2183,
          "content": "_padding_check_valid_input(input, padding, dim=3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2229,
          "content": "f\"input (D: {input_d} H: {input_h} W: {input_w}) is too small. \"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 658,
          "content": "input (Tensor): the input tensor of shape `(B?, L)` where `B?` is an optional",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 784,
          "content": "input (Tensor): The input tensor. Expected to be in the format of :func:`~torch.stft`,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 855,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1017,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1525,
          "content": "input (Tensor or list of Tensors)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1561,
          "content": "input (Tensor or list of Tensors)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1599,
          "content": "input (Tensor or list of Tensors)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1726,
          "content": "input (Tensor): The input tensor. Its data type must be either a floating",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3636,
          "content": "input (Tensor): the input tensor to count non-zero elements.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 341,
          "content": "response = input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 57,
          "content": "yaml_values = yaml.load(f, Loader=YamlLoader)",
          "pattern": "yaml\\.load\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 103,
          "content": "yaml_values = yaml.load(f, Loader=YamlLoader)",
          "pattern": "yaml\\.load\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 35,
          "content": "input (Tensor): the input tensor.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 151,
          "content": "input (Tensor): the size of :attr:`input` will determine size of the output tensor.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 431,
          "content": "input (Tensor): matrix to be added",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 481,
          "content": "input (Tensor): the tensor to be added",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 521,
          "content": "input (Tensor): the tensor to be added",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 578,
          "content": "input (Tensor): matrix to be added",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 640,
          "content": "input (Tensor): a sparse matrix to be added",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 660,
          "content": "input (Tensor): a sparse matrix to be matrix multiplied",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 693,
          "content": "input (Tensor): vector to be added",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 738,
          "content": "input (Tensor): matrix to be added",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 774,
          "content": "input (Tensor): first tensor to compare",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1163,
          "content": "input (Tensor): the first input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1374,
          "content": "input (Tensor): the tensor to be added",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1423,
          "content": "input (Tensor): the input tensor of probability values for the Bernoulli distribution",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1473,
          "content": "input (Tensor): 1-d int tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1546,
          "content": "input (Tensor): the first batch of matrices to be multiplied",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1653,
          "content": "input (Tensor or Scalar): the first input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1684,
          "content": "input (Tensor or Scalar): the first input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1891,
          "content": "input (Tensor): the tensor to split",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1969,
          "content": "input (Tensor): the tensor to split",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2050,
          "content": "input (Tensor): tensor to split.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2100,
          "content": "input (Tensor): tensor to split.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2142,
          "content": "input (Tensor): tensor to split.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2217,
          "content": "input (Tensor): A 2D matrix containing multiple variables and observations, or a",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2278,
          "content": "input (Tensor): A 2D matrix containing multiple variables and observations, or a",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2612,
          "content": "input (Tensor): the input tensor :math:`A` of size :math:`(*, n, n)` where `*` is zero or more",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3082,
          "content": "input (Tensor): magnitudes.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3796,
          "content": "input (Tensor): the tensor to compute the differences on",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3888,
          "content": "input (Tensor): the dividend",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3958,
          "content": "input (Tensor): first tensor in the dot product, must be 1D.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4001,
          "content": "input (Tensor): first tensor in the dot product, must be 1D. Its conjugate is used if it's complex.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4035,
          "content": "input (Tensor): the tensor to compare",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4230,
          "content": "input (Tensor or Number): the dividend",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4282,
          "content": "input (Tensor): the dividend",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4328,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4580,
          "content": "input (Tensor): the source tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4642,
          "content": "input (Tensor): the tensor to compare",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4712,
          "content": "input (``Tensor``): the tensor that represents the values of the function",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4818,
          "content": "input (Tensor): the input matrix",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4847,
          "content": "input (Tensor): First input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4902,
          "content": "input (Tensor): 1-D input vector",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4983,
          "content": "input (Tensor): the tensor to compare",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5195,
          "content": "input (Tensor): the first input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5405,
          "content": "input (Tensor): first tensor to compare",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5631,
          "content": "input (Tensor)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5784,
          "content": "input (Tensor): the tensor to compare",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5827,
          "content": "input (Tensor): the tensor with the starting points",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6331,
          "content": "input (Tensor): the tensor to compare",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6781,
          "content": "input (Tensor):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6851,
          "content": "input (Tensor): the input tensor, either of floating point or complex dtype",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7294,
          "content": "input (Tensor):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7414,
          "content": "input (Tensor): the first matrix to be matrix multiplied",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7499,
          "content": "input (Tensor): the first tensor to be multiplied",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7669,
          "content": "input (Tensor): the input tensor containing probabilities",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7703,
          "content": "input (Tensor): matrix to be multiplied",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7890,
          "content": "input (Tensor): the tensor to narrow",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7924,
          "content": "input (Tensor): the tensor to narrow",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8011,
          "content": "input (Tensor): the tensor to compare",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8083,
          "content": "input (Tensor): the first input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8398,
          "content": "input (Tensor): tensor of shape `(*, mn, k)` where `*` is zero or more batch dimensions",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8448,
          "content": "input (Tensor): the input tensor containing the rates of the Poisson distribution",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8588,
          "content": "input (Tensor or Number): the base value(s)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8728,
          "content": "input (Tensor): the input tensor of size :math:`(*, m, n)` where `*` is zero or more",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9298,
          "content": "input (Tensor or Scalar): the dividend",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9368,
          "content": "input (Tensor): the tensor to be reshaped",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 10874,
          "content": "input (Tensor): the input tensor of size `(*, m, n)` where `*` is zero or more",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11010,
          "content": "input (Tensor): Must be at least 2-dimensional.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11043,
          "content": "input (Tensor): Must be at least 1-dimensional.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11756,
          "content": "input (Tensor): the input value(s), ``torch.float32`` tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11797,
          "content": "input (Tensor): the input value(s), in ``torch.float32``",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 12296,
          "content": "input (Tensor or Scalar): value (if :attr:`input` is a scalar) or values selected at indices",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 12364,
          "content": "input (Tensor): the input tensor of size ``(*, n, n)`` where ``*`` is zero or more",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 12701,
          "content": "input (Tensor): the tensor to unbind",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 12724,
          "content": "input (Tensor): 1D vector.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13065,
          "content": "input (Tensor): the tensor whose elements to repeat.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13090,
          "content": "input (Tensor): float tensor or list of tensors to quantize",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13127,
          "content": "input (Tensor): float tensor or list of tensors to quantize",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13156,
          "content": "input (Tensor): float tensor to quantize",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13194,
          "content": "input (Tensor): quantized tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13235,
          "content": "input (Tensor): quantized tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13266,
          "content": "input (Tensor): quantized tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13878,
          "content": "input (Tensor or Scalar): N-D tensor or a Scalar containing the search value(s).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 238,
          "content": "es = yaml.load(f, Loader=LineLoader)",
          "pattern": "yaml\\.load\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 259,
          "content": "es = yaml.load(f, Loader=LineLoader)",
          "pattern": "yaml\\.load\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 131,
          "content": "def accepts_at_least_one_tensor_input(schema: FunctionSchema) -> bool:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 161,
          "content": "if not accepts_at_least_one_tensor_input(schema):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 210,
          "content": "if not accepts_at_least_one_tensor_input(schema):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2546,
          "content": "# The canonical input (from the rest of the infra) will not contain namespace, but",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 33,
          "content": "__import__(modulename, globals(), locals(), level=0)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 59,
          "content": "__import__(f\"pip._vendor.{module_name}\", globals(), locals(), level=0)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 252,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 15,
          "content": "__import__(\"_distutils_hack\").remove_shim()",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 458,
          "content": "username = ask_input(f\"User for {netloc}: \") if self.prompting else None",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 12,
          "content": "exec(compile('''",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 46,
          "content": "exec(compile(setup_py_code, filename, \"exec\"))",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 209,
          "content": "def _check_no_input(message: str) -> None:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 220,
          "content": "_check_no_input(message)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "response = input(message)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 232,
          "content": "def ask_input(message: str) -> str:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 234,
          "content": "_check_no_input(message)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 235,
          "content": "return input(message)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 240,
          "content": "_check_no_input(message)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 163,
          "content": "# shebang, or else using os.exec() to run the entry script will",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 323,
          "content": "__import__(package)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 325,
          "content": "s = raw_input(p)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 325,
          "content": "s = raw_input(p)",
          "pattern": "raw_input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 676,
          "content": "mod = __import__(module_name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1167,
          "content": "except (OSError, subprocess.CalledProcessError):",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1214,
          "content": "except (OSError, subprocess.CalledProcessError):",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 332,
          "content": "value = ast.literal_eval(python_str)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 427,
          "content": "__import__(moduleOrReq)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1714,
          "content": "exec(code, namespace, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1725,
          "content": "exec(script_code, namespace, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2530,
          "content": "__import__(parent)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2751,
          "content": "module = __import__(self.module_name, fromlist=['__name__'], level=0)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 161,
          "content": "mod = __import__(module, None, None, [classname])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "mod = __import__(module, None, None, [classname])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 86,
          "content": "Strip leading and trailing newlines from the input (default: True).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 97,
          "content": "If given and greater than 0, expand tabs in the input (default: 0).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 206,
          "content": "def _preprocess_lexer_input(self, text):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "text = self._preprocess_lexer_input(text)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 10,
          "content": "locals()[package] = __import__(vendored_package)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2139,
          "content": "def input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2170,
          "content": "result = input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 190,
          "content": "meta_params = literal_eval(parameters)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 21,
          "content": "return __import__(\"pydoc\").pager(content)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 194,
          "content": "def get_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 211,
          "content": "return console.input(prompt, password=password, stream=stream)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 292,
          "content": "value = self.get_input(self.console, prompt, self.password, stream=stream)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 100,
          "content": "invalid = eval(python_expression, globals(), locals())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 45,
          "content": "mod = __import__(module_name, None, None, ['__all__'])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "exec(f.read(), custom_namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 38,
          "content": "mod = __import__(module_name, None, None, ['__all__'])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 91,
          "content": "this method is equivalent to running ``eval()`` on the input file. The formatter is",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 103,
          "content": "exec(f.read(), custom_namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 45,
          "content": "mod = __import__(mod, None, None, [cls])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 87,
          "content": "__import__(name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 787,
          "content": "exec (\"\"\"exec _code_ in _globs_, _locs_\"\"\")",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 47,
          "content": "exec(\"\"\"exec _code_ in _globs_, _locs_\"\"\")",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 109,
          "content": "module = __import__(name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 56,
          "content": "z = eval(z)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 64,
          "content": "loggamma_val = eval(result)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 82,
          "content": "\"\"\"Test that eval(repr(x)) == x\"\"\"",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 88,
          "content": "assert eval(repr(a)) == a",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 19,
          "content": "ans = str(eval(testline))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 25,
          "content": "assert A6 == eval(repr(A6))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 27,
          "content": "assert A6 == eval(repr(A6))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 28,
          "content": "assert A6*1j == eval(repr(A6*1j))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 55,
          "content": "To avoid syntax errors when importing this file in Python 3.5 and below, we have to use exec() - sorry for that.",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 57,
          "content": "# TODO remove exec() wrapper as soon as we drop support for Python <= 3.5",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 63,
          "content": "exec(\"assert A4 @ A5 == A4 * A5\")",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 181,
          "content": "pytest.raises((ZeroDivisionError, ValueError), lambda: eval(i))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 15,
          "content": "obj2 = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 156,
          "content": "return self.function.eval(self.arguments, assumptions)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 340,
          "content": "def eval(self, args, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 426,
          "content": "def eval(self, args, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 56,
          "content": "raise UnhandledInput(f\"LRASolver: {pred} is an unhandled predicate\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 59,
          "content": "raise UnhandledInput(f\"LRASolver: {expr} is of MatrixKind\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 61,
          "content": "raise UnhandledInput(\"LRASolver: nan\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 261,
          "content": "raise UnhandledInput(f\"LRASolver: {expr} must be real\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 264,
          "content": "raise UnhandledInput(f\"LRASolver: {expr} must be real\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 267,
          "content": "raise UnhandledInput(f\"LRASolver: {expr} is an integer\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "raise UnhandledInput(f\"LRASolver: {expr} can't be an integer\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 271,
          "content": "raise UnhandledInput(f\"LRASolver: {expr} is irational\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 90,
          "content": "...     def eval(cls, x, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 97,
          "content": "...         return MyAbs.eval(self.args[0], assumptions)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 249,
          "content": "exec(string)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 153,
          "content": ">>> exec(py_mod, namespace, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": ">>> res = eval('newton(0.5)', namespace)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 70,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 71,
          "content": "exp_arg = exp.eval(arg)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 138,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 142,
          "content": "return log.eval(arg + S.One)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 215,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 264,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 266,
          "content": "result = log.eval(arg, base=_Two)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 368,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 370,
          "content": "result = log.eval(arg, base=_Ten)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 539,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 552,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 105,
          "content": ">>> exec(py_str)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 40,
          "content": "def eval(cls, k):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 309,
          "content": "evaluated = cls.eval(*args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 340,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 347,
          "content": "The ``eval()`` method is called when the class ``cls`` is about to be",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 352,
          "content": "Examples of ``eval()`` for the function \"sign\"",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 357,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1653,
          "content": "def eval(x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 56,
          "content": "def eval(cls, p, q):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 57,
          "content": "def number_eval(p, q):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "rv = number_eval(p, q)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 224,
          "content": "rv = number_eval(p, q)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 479,
          "content": "# >>> d2 = eval(srepr(d1))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 209,
          "content": ">>> exec('from sympy.core.evalf import bitcount', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 219,
          "content": ">>> exec('from sympy.abc import O', ns)  # method 2",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 21,
          "content": "return eval(debug_str)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 87,
          "content": "This function uses __import__() to import the module.  To pass additional",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 88,
          "content": "options to __import__(), use the import_kwargs keyword argument.  For",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 90,
          "content": "to __import__.  See the docstring of __import__().",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 116,
          "content": ">>> # __import__().  The values do not matter.",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 145,
          "content": "mod = __import__(module, **import_kwargs)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "__import__(module + '.' + submod)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 78,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 96,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 107,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 108,
          "content": "return self.constant * self.substep.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 120,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 133,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 144,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 145,
          "content": "return Add(*(substep.eval() for substep in self.substeps))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 158,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 159,
          "content": "result = self.substep.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 179,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 181,
          "content": "v = self.v_step.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 182,
          "content": "return self.u * v - self.second_step.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 195,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 199,
          "content": "result.append(sign * rule.u * rule.v_step.eval())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 215,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 222,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 229,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 236,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 243,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 250,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 262,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "def eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 279,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 288,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 295,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 302,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 313,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 326,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 349,
          "content": "I0 = constant*step.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 361,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 363,
          "content": "return step.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 371,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 372,
          "content": "return self.alternatives[0].eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 381,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 391,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 407,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 408,
          "content": "return self.substep.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 424,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 425,
          "content": "return Piecewise(*[(substep.eval(), cond)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 438,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 443,
          "content": "result = self.substep.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 456,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 471,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 507,
          "content": "(self.substep.eval().subs(substitution).trigsimp(), self.restriction) # type: ignore",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 521,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 536,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 548,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 558,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 568,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 577,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 584,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 591,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 600,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 612,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 619,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 626,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 633,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 640,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 647,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 658,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 676,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 689,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 701,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 710,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 720,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 729,
          "content": "def eval(self) -> Expr:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1277,
          "content": "v = v_step.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1299,
          "content": "v = v_step.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2164,
          "content": "result = integral_steps(f, var).eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 113,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 233,
          "content": "alphaa, alphad = frac_in(-ba.eval(0)/bd.eval(0)/a.eval(0), DE.t)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 245,
          "content": "alphaa, alphad = frac_in(im(-ba.eval(sqrt(-1))/bd.eval(sqrt(-1))/a.eval(sqrt(-1))), DE.t)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 246,
          "content": "betaa, betad = frac_in(re(-ba.eval(sqrt(-1))/bd.eval(sqrt(-1))/a.eval(sqrt(-1))), DE.t)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 138,
          "content": "alphaa, alphad = frac_in(-ba.eval(0)/bd.eval(0)/a.eval(0), DE.t)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 630,
          "content": "# eval(repr(DE)) == DE, where DE is the DifferentialExtension object,",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1197,
          "content": "delta_a = delta_a*Poly((DE.t - alpha)**(n - j), DE.t) + Poly(H.eval(alpha), DE.t)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 57,
          "content": "choice = input(\"Your choice [%s,f,l,r,d,?]: \" % choices)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 105,
          "content": ">>> exec(s)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 107,
          "content": ">>> exec(int_to_Integer(s))",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "# with transformed input (but on the other hand, IPython magic",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 909,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1133,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1167,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1198,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1252,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1439,
          "content": "rv = cls.eval(a, b, c)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1445,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1508,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 72,
          "content": "exec('from sympy import *', global_dict)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 79,
          "content": "return eval(e, global_dict, local_dict)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 284,
          "content": "cls._check_input(fm)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 285,
          "content": "cls._check_input(fs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 496,
          "content": "def _check_input(cls, s):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 508,
          "content": "self._check_input(s)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 905,
          "content": "expr = eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1052,
          "content": "exec('from sympy import *', global_dict)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 249,
          "content": "namespace.update({'math': __import__('math')})",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 251,
          "content": "namespace.update({'cmath': __import__('cmath')})",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 254,
          "content": "namespace.update({'np': __import__('numpy')})",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 259,
          "content": "namespace.update({'imath': __import__(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 261,
          "content": "namespace.update({'math': __import__('math')})",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 268,
          "content": "exec(\"MYNEWLAMBDA = %s\" % eval_str, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 114,
          "content": "r = cls.eval(arg)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 121,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 137,
          "content": "The eval() method is called automatically.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1440,
          "content": "return cls.eval(bra, ket)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1443,
          "content": "def eval(cls, bra, ket):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1601,
          "content": "result = eval(list_comp)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1699,
          "content": "def eval(cls, a, b):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1710,
          "content": ">>> Commutator.eval(c1, c2)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 38,
          "content": "p = dup_sub_ground(p, dup_eval(p, K(1,2), K) * K(1<<(i-1), (1<<i)-1), K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 108,
          "content": "p = dup_sub_ground(p, dup_eval(p, K.one, K) * K((1<<(i-1))-1, (1<<i)-1), K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 141,
          "content": "p = dup_sub_ground(p, dup_eval(p, K.one, K) // K(2), K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 207,
          "content": "p = dup_sub_ground(p, dup_eval(p, K.one, K), K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 44,
          "content": "def _uniform_eval(f1, f2, *args, modules=None,",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 91,
          "content": "def _adaptive_eval(f, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 479,
          "content": "r = _uniform_eval(*f, *args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1410,
          "content": "ynew = _adaptive_eval(f, xnew)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1449,
          "content": "f_start = _adaptive_eval(f, self.start.real)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1450,
          "content": "f_end = _adaptive_eval(f, self.end.real)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1681,
          "content": "xnew = _adaptive_eval(f_x, param_new)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1682,
          "content": "ynew = _adaptive_eval(f_y, param_new)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1703,
          "content": "x_array = [_adaptive_eval(f_x, t) for t in param_array]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1704,
          "content": "y_array = [_adaptive_eval(f_y, t) for t in param_array]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1727,
          "content": "f_start_x = _adaptive_eval(f_x, self.start)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1728,
          "content": "f_start_y = _adaptive_eval(f_y, self.start)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1730,
          "content": "f_end_x = _adaptive_eval(f_x, self.end)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1731,
          "content": "f_end_y = _adaptive_eval(f_y, self.end)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2321,
          "content": "data = self._adaptive_eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2327,
          "content": "def _adaptive_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 481,
          "content": "def dup_eval(self, f, a):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 482,
          "content": "return dup_eval(self.to_dense(f), a, self.domain)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 483,
          "content": "def dmp_eval(self, f, a):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 484,
          "content": "result = dmp_eval(self.to_dense(f), a, self.ngens-1, self.domain)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1082,
          "content": "def gf_eval(self, f, a):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1083,
          "content": "return gf_eval(self.to_gf_dense(f), a, self.domain.mod, self.domain.dom)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1084,
          "content": "def gf_multi_eval(self, f, A):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1085,
          "content": "return gf_multi_eval(self.to_gf_dense(f), A, self.domain.mod, self.domain.dom)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 262,
          "content": "def dup_eval(f, a, K):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 272,
          "content": ">>> R.dup_eval(x**2 + 2*x + 3, 2)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 288,
          "content": "def dmp_eval(f, a, u, K):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 298,
          "content": ">>> R.dmp_eval(2*x*y + 3*x + y + 2, 2)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 303,
          "content": "return dup_eval(f, a, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 320,
          "content": "return dmp_eval(g, a, v, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 354,
          "content": "return dup_eval(g, A[-1], K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 361,
          "content": "return dup_eval(h, A[-u + i - 1], K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 396,
          "content": "def _rec_diff_eval(g, m, a, v, i, j, K):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 399,
          "content": "return dmp_eval(dmp_diff(g, m, v, K), a, v, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 403,
          "content": "return dmp_strip([ _rec_diff_eval(c, m, a, v, i, j, K) for c in g ], v)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 427,
          "content": "return dmp_eval(dmp_diff(f, m, u, K), a, u, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 429,
          "content": "return _rec_diff_eval(f, m, a, u, 0, j, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 991,
          "content": "return dup_strip([dup_eval(f, dup_LC(g, K), K)])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 641,
          "content": "e = dmp_eval(r, a, v, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 650,
          "content": "d = K.invert(dup_eval(D, a, K), p)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1205,
          "content": "ff = dup_eval(f, x, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1206,
          "content": "gg = dup_eval(g, x, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1330,
          "content": "ff = dmp_eval(f, x, u, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1331,
          "content": "gg = dmp_eval(g, x, u, K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1228,
          "content": "def gf_eval(f, a, p, K):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1238,
          "content": ">>> gf_eval([3, 2, 4], 2, 5, ZZ)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1252,
          "content": "def gf_multi_eval(f, A, p, K):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1262,
          "content": ">>> gf_multi_eval([3, 2, 4], [0, 1, 2, 3, 4], 5, ZZ)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1266,
          "content": "return [ gf_eval(f, a, p, K) for a in A ]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1284,
          "content": "return gf_strip([gf_eval(f, gf_LC(g, K), p, K)])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2478,
          "content": "X1 = root_zero + [i for i in range(p) if gf_eval(g, i, p, ZZ) == 0]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 401,
          "content": "exec(code, ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 61,
          "content": "_current_config[key] = eval(value)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 159,
          "content": "l0 = Poly(a, x).eval(theta)/F",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 167,
          "content": "T[1] = -Poly(b[1], x).eval(theta)/(2*F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 168,
          "content": "T[2] = Poly(b[2], x).eval(theta)/(2*d*F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 169,
          "content": "T[3] = Poly(b[3], x).eval(theta)/(2*F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 170,
          "content": "T[4] = Poly(b[4], x).eval(theta)/(2*d*F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 176,
          "content": "order = Poly(o, x).eval(theta)/(d*F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 182,
          "content": "v = Poly(c, x).eval(theta)/(2*d*self.F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 731,
          "content": "def eval(f, a, j=0):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 741,
          "content": "return f._eval(a)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 743,
          "content": "def _eval(f, a):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1483,
          "content": "def _eval(f, a):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2072,
          "content": "def _eval(f, a):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2077,
          "content": "return f.to_DMP_Python()._eval(a)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 797,
          "content": "poly = poly.eval(gen, 1)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1037,
          "content": "if not f.eval(i):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2011,
          "content": "series = eval(_convert_func[str(expr.func)])(series_inner,",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 310,
          "content": "``eval(srepr(expr) == expr``.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 245,
          "content": "if not dup_eval(f, K.zero, K):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 252,
          "content": "if not dup_eval(f, K.zero, K):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 262,
          "content": "if not dup_eval(f, K.zero, K):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 786,
          "content": "signs_inf = dup_sign_variations([ dup_eval(s, inf, K) for s in sturm ], K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 791,
          "content": "signs_sup = dup_sign_variations([ dup_eval(s, sup, K) for s in sturm ], K)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 795,
          "content": "if inf is not None and not dup_eval(f, inf, K):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1048,
          "content": "if dup_eval(f2, t, F) > 0:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1055,
          "content": "if dup_eval(f2, (s + a)/2, F) > 0:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1064,
          "content": "if dup_eval(f2, s, F) > 0:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1090,
          "content": "if dup_eval(f1, t, F) > 0:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1097,
          "content": "if dup_eval(f1, (s + a)/2, F) > 0:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1106,
          "content": "if dup_eval(f1, s, F) > 0:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1127,
          "content": "re = dup_eval(f1, s, F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1128,
          "content": "im = dup_eval(f2, s, F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1134,
          "content": "re = dup_eval(f1, t, F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1135,
          "content": "im = dup_eval(f2, t, F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1139,
          "content": "re = dup_eval(f1, (s + a)/2, F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1140,
          "content": "im = dup_eval(f2, (s + a)/2, F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1165,
          "content": "re = dup_eval(f1, a, F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1166,
          "content": "im = dup_eval(f2, a, F)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 151,
          "content": ">>> Poly(y*x**2 + x*y + 1,x).eval(2)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 607,
          "content": "return f.eval(old, new)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2419,
          "content": "def eval(self, x, a=None, auto=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2429,
          "content": ">>> Poly(x**2 + 2*x + 3, x).eval(2)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2432,
          "content": ">>> Poly(2*x*y + 3*x + y + 2, x, y).eval(x, 2)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2437,
          "content": ">>> f.eval({x: 2})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2439,
          "content": ">>> f.eval({x: 2, y: 5})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2441,
          "content": ">>> f.eval({x: 2, y: 5, z: 7})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2444,
          "content": ">>> f.eval((2, 5))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2457,
          "content": "f = f.eval(gen, value)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2467,
          "content": "f = f.eval(gen, value)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2479,
          "content": "result = f.rep.eval(a, j)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2490,
          "content": "result = f.rep.eval(a, j)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2514,
          "content": "return f.eval(values)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 43,
          "content": ">>> eval(code) == Symbol('x')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 54,
          "content": ">>> eval(code) == MatrixSymbol('x', 2, 2)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 46,
          "content": "subprocess.call(('open', temp_f.name))",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 51,
          "content": "subprocess.call(('xdg-open', temp_f.name))",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 44,
          "content": "(can be passed to the exec() function without any modifications)\"\"\"",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5,
          "content": "relation eval(srepr(expr))=expr holds in an appropriate environment.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 963,
          "content": "def eval(cls, p, x, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 761,
          "content": "Returns expression in list or else with same type as input (when False).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 465,
          "content": "def eval(cls, a, b):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 457,
          "content": "h = g.ltrim(var).eval(dict(mapping))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 74,
          "content": "def deprecate_fun_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 77,
          "content": "The Tensor.fun_eval() method is deprecated. Use",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2110,
          "content": "def fun_eval(self, *index_tuples):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2111,
          "content": "deprecate_fun_eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 246,
          "content": "# Note, we must return False everywhere, not None, as subprocess.call will",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1243,
          "content": "exec(code, gl)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1487,
          "content": "#exec('from sympy import *') in test.globs",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 165,
          "content": "mod = __import__(self.module_name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 873,
          "content": "mod = __import__(self.module_name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 163,
          "content": "module = eval(import_command)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 170,
          "content": "exec(import_command, {}, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 608,
          "content": ">>> exec('''",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 620,
          "content": ">>> exec('''",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 903,
          "content": "exec(ln, {}, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 909,
          "content": "exec(ln, {}, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 920,
          "content": "exec(c, namespace, funclocals)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "exec(\"from sympy import *\")",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 270,
          "content": "return eval(lambda_str, locals())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 17,
          "content": "__import__(mod_name, {}, {}, ['*']), func_name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 113,
          "content": "def eval(self, args, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 200,
          "content": "ret = self.function.eval(self.arguments, assumptions)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 206,
          "content": "return self.function.eval(args, assumptions)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "def eval(self, args, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 106,
          "content": "def eval(self, args, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "def eval(self, args, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 202,
          "content": "def eval(self, args, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 250,
          "content": "def eval(self, args, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 298,
          "content": "def eval(self, args, assumptions=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 81,
          "content": "exec(py_mod, namespace, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 82,
          "content": "res = eval('newton(0.5)', namespace)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 170,
          "content": "exec(v, ns, ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 325,
          "content": "exec(code)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11,
          "content": "def test_add_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 25,
          "content": "def test_addmul_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 36,
          "content": "def test_pow_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 65,
          "content": "def test_mulpow_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 64,
          "content": "mod = __import__(submodule, fromlist=names)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 140,
          "content": "def eval(cls):  # zero args",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "def eval(cls, x):  # one arg",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 158,
          "content": "def eval(cls, *x):  # star args",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 518,
          "content": "def test_extensibility_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 521,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1258,
          "content": "def test_undefined_function_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1431,
          "content": "def eval(cls, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1440,
          "content": "def eval(cls, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1453,
          "content": "def eval(self, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 678,
          "content": "def test_Float_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 57,
          "content": "exec('from sympy import *', d)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 107,
          "content": "def test_logexppow():   # no eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 549,
          "content": "exec(\"from sympy.abc import Q, C\", locals)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7,
          "content": "eval(\"var('a')\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 10,
          "content": "eval(\"var('b bb cc zz _x')\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 17,
          "content": "v = eval(\"var(['d', 'e', 'fg'])\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 30,
          "content": "v2 = eval(\"var('q')\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 31,
          "content": "v3 = eval(\"var('q p')\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 39,
          "content": "v1 = eval(\"var('x y z')\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 40,
          "content": "v2 = eval(\"var('x,y,z')\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 41,
          "content": "v3 = eval(\"var('x,y z')\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 49,
          "content": "eval(\"var('x y', real=True)\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 55,
          "content": "eval(\"var('f', cls=Function)\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 59,
          "content": "eval(\"var('g,h', cls=Function)\", ns)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 122,
          "content": "retcode = subprocess.call(command, stdout=null, shell=True,",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 262,
          "content": "def test_lambdify_matrix_multi_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 276,
          "content": "def test_lambdify_matrix_vec_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 97,
          "content": "assert pickle.loads(pickle.dumps(q)) == q",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 139,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 329,
          "content": "def _eval(self, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 341,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 344,
          "content": "return cls._eval(arg)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 422,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 566,
          "content": "def eval(cls, x, k):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 728,
          "content": "def eval(cls, x, k):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 938,
          "content": "def _eval(self, n, k):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 969,
          "content": "def eval(cls, n, k):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 983,
          "content": "res = cls._eval(n, k)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 69,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 191,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 330,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 523,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 750,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 867,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 939,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 982,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1062,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1170,
          "content": "def eval(cls, ar, period):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1278,
          "content": "def eval(self, x, period):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 189,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 392,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 644,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 857,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1005,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1012,
          "content": "t = cls._reciprocal_of.eval(arg)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1235,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1414,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1599,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1764,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1930,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2126,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 276,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 661,
          "content": "def eval(cls, arg, base=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1146,
          "content": "def eval(cls, x, k=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 27,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 546,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 549,
          "content": "def _eval(arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 576,
          "content": "real = _eval(real)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 577,
          "content": "imag = _eval(imag)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 241,
          "content": "def eval(cls, n, sym=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 310,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 379,
          "content": "def eval(cls, n, sym=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 544,
          "content": "def eval(cls, n, x=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 724,
          "content": "def eval(cls, n, k_sym=None, symbols=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 898,
          "content": "def eval(cls, n, m=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1120,
          "content": "def eval(cls, n, x=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1285,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1402,
          "content": "def eval(cls, n, x=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1549,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1640,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1707,
          "content": "def eval(cls, n, k=S.One):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1786,
          "content": "def eval(cls, n, k=S.One):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1834,
          "content": "def eval(cls, a, p):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1905,
          "content": "def eval(cls, m, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1948,
          "content": "def eval(cls, a, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2008,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2078,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2131,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2179,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2229,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2292,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3070,
          "content": "def eval(cls, n):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 901,
          "content": "def eval(cls, p, q):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 148,
          "content": "r = cls.eval(*newargs)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 157,
          "content": "def eval(cls, *_args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 121,
          "content": "def eval(cls, x, y=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 152,
          "content": "def eval(cls, arg, k=S.Zero):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 160,
          "content": "The ``eval()`` method is automatically called when the ``DiracDelta``",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 163,
          "content": "In other words, ``eval()`` method is not needed to be called explicitly,",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 496,
          "content": "def eval(cls, arg, H0=S.Half):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 504,
          "content": "The ``eval()`` method is automatically called when the ``Heaviside``",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 507,
          "content": "In other words, ``eval()`` method is not needed to be called explicitly,",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 301,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 607,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 969,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1309,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1580,
          "content": "# trigonometric functions eval() like even/odd, func(x+2*k*pi), etc.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1587,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1613,
          "content": "t = cls._reciprocal_of.eval(arg)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1974,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2174,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2402,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2654,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2866,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3076,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3290,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3552,
          "content": "def eval(cls, y, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 63,
          "content": "def eval(cls, nu, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 179,
          "content": "def eval(cls, nu, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 327,
          "content": "def eval(cls, nu, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 482,
          "content": "def eval(cls, nu, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 649,
          "content": "def eval(cls, nu, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 999,
          "content": "def eval(cls, nu, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1467,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1641,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1809,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1968,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2094,
          "content": "def eval(cls, m, a, b):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 59,
          "content": "def eval(cls, m):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 146,
          "content": "def eval(cls, z, m):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 237,
          "content": "def eval(cls, m, z=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 356,
          "content": "def eval(cls, n, m, z=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 226,
          "content": "def eval(cls, ap, bq, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 814,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1165,
          "content": "def eval(cls, a, b1, b2, c, x, y):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 121,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 292,
          "content": "def eval(cls, a, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 485,
          "content": "def eval(cls, a, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 672,
          "content": "def eval(cls, n, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 976,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1135,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1229,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1324,
          "content": "def eval(cls, x, p):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 78,
          "content": "def eval(cls, a, q, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 140,
          "content": "def eval(cls, a, q, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 202,
          "content": "def eval(cls, a, q, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 264,
          "content": "def eval(cls, a, q, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 143,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 381,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 565,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 754,
          "content": "def eval(cls, x, y):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 884,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 971,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1057,
          "content": "def eval(cls, x, y):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1181,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1380,
          "content": "def eval(cls, nu, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1389,
          "content": "# explained in lowergamma.eval().",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1603,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1735,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1770,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2333,
          "content": "def eval(cls, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2717,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 138,
          "content": "def eval(cls, n, m, theta, phi):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 326,
          "content": "def eval(cls, n, m, theta, phi):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 127,
          "content": "def eval(cls, n, a, b, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 360,
          "content": "def eval(cls, n, a, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 514,
          "content": "def eval(cls, n, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 632,
          "content": "def eval(cls, n, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 721,
          "content": "def eval(cls, n, k):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 762,
          "content": "def eval(cls, n, k):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 830,
          "content": "def eval(cls, n, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 954,
          "content": "def eval(cls, n, m, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1063,
          "content": "def eval(cls, n, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1169,
          "content": "def eval(cls, n, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1270,
          "content": "def eval(cls, n, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1392,
          "content": "def eval(cls, n, alpha, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 114,
          "content": "def eval(cls, variable, offset, exponent):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 122,
          "content": "The ``eval()`` method is automatically called when the",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 125,
          "content": "depending on the argument passed. In other words, ``eval()`` method is",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 294,
          "content": "def eval(cls, s, z):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 503,
          "content": "def eval(cls, s, a=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 632,
          "content": "def eval(cls, s, a=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 692,
          "content": "def eval(cls, s):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 744,
          "content": "def eval(cls, n, a=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 80,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 147,
          "content": "def eval(cls, i, j, delta_range=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1183,
          "content": "raises(ValueError, lambda: motzkin.eval(77.58))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1184,
          "content": "raises(ValueError, lambda: motzkin.eval(-8))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 26,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 47,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 75,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 458,
          "content": "def test_bessel_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1574,
          "content": "def test_piecewise_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 44,
          "content": "def test_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 332,
          "content": "def test_meijerg_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 24,
          "content": "def test_zeta_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 87,
          "content": "def test_dirichlet_eta_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "def test_riemann_xi_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 130,
          "content": "class UnhandledInput(Exception):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 163,
          "content": "raise UnhandledInput(\"Non-rational numbers are not handled\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 165,
          "content": "raise UnhandledInput(\"Non-rational numbers are not handled\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 276,
          "content": "raise UnhandledInput(f\"{prop} contains an imaginary component\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 278,
          "content": "raise UnhandledInput(f\"{prop} contains infinity\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 288,
          "content": "raise UnhandledInput(f\"{prop} could not be simplified\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 348,
          "content": "raise UnhandledInput(\"Nonlinearity is not handled\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 225,
          "content": "def test_pl_true_wrong_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 354,
          "content": "def test_unhandled_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 825,
          "content": "eval('c = a @ b')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 864,
          "content": "eval('c = 5 @ b')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 894,
          "content": "eval('2 @ a')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 902,
          "content": "eval('a @ 2')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 506,
          "content": "eval('2 @ a')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 514,
          "content": "eval('a @ 2')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 209,
          "content": "eval('c = a @ b')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 248,
          "content": "eval('c = 5 @ b')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "eval('c = a @ b')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 37,
          "content": "def test_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 27,
          "content": "except (subprocess.CalledProcessError, FileNotFoundError):",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 31,
          "content": "except (subprocess.CalledProcessError, FileNotFoundError):",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 140,
          "content": "exec(sympy_input, g, l)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 156,
          "content": "exec('from sympy import *', default_globals)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1900,
          "content": "def Input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 31,
          "content": "def eval(cls):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 192,
          "content": "def eval(cls, l_T_tilde, c0, c1, c2, c3):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 411,
          "content": "def eval(cls, fl_T, c0, c1, c2, c3):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 633,
          "content": "def eval(cls, l_M_tilde, c0, c1):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 847,
          "content": "def eval(cls, fl_M_pas, c0, c1):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1103,
          "content": "def eval(cls, l_M_tilde, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1407,
          "content": "def eval(cls, v_M_tilde, c0, c1, c2, c3):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1630,
          "content": "def eval(cls, fv_M, c0, c1, c2, c3):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 148,
          "content": "The input(s) for this method are tuples of the form (label, x, y).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 201,
          "content": "The input(s) for this method are the labels of the nodes to be removed.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 251,
          "content": "The input(s) of the method are tuple(s) of the form (label, start, end).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 332,
          "content": "The input(s) of this method are tuple(s) of the form (label, new_label).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 427,
          "content": "The input(s) of this method are tuple(s) of the form (label, new_label)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 476,
          "content": "The input(s) of the method are tuple(s) of the form (location, magnitude, direction).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 525,
          "content": "The input(s) of this method are tuple(s) of the form (location, magnitude, direction).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 577,
          "content": "The input(s) of this method are of the form (location, type).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 53,
          "content": "def _eval(l):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 56,
          "content": "return _eval(poly.all_roots())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 59,
          "content": "return _eval(poly.nroots())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 92,
          "content": "r = cls.eval(A, B)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "def eval(cls, a, b):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 106,
          "content": "r = cls.eval(A, B)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 113,
          "content": "def eval(cls, a, b):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 146,
          "content": "r = cls.eval(dimension)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 153,
          "content": "def eval(cls, dimension):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 329,
          "content": "r = cls.eval(args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 336,
          "content": "def eval(cls, args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 473,
          "content": "r = cls.eval(args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 480,
          "content": "def eval(cls, args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 591,
          "content": "r = cls.eval(args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 597,
          "content": "def eval(cls, args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 74,
          "content": "# Validate input (must have 0 or 1 input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 812,
          "content": "def eval(self, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 273,
          "content": "assert Commutator.eval(c1, c1) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 78,
          "content": "def eval(cls, a, b):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 45,
          "content": "exec('from sympy import *', ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 46,
          "content": "exec('from sympy.physics.quantum import *', ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 47,
          "content": "exec('from sympy.physics.quantum.cg import *', ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 48,
          "content": "exec('from sympy.physics.quantum.spin import *', ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 49,
          "content": "exec('from sympy.physics.quantum.hilbert import *', ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 50,
          "content": "exec('from sympy.physics.quantum.qubit import *', ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 51,
          "content": "exec('from sympy.physics.quantum.qexpr import *', ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 52,
          "content": "exec('from sympy.physics.quantum.gate import *', ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 53,
          "content": "exec('from sympy.physics.quantum.constants import *', ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "assert eval(string, ENV) == expr",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 85,
          "content": "assert eval(repr(kilo)) == kilo",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 86,
          "content": "assert eval(repr(kibi)) == kibi",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 759,
          "content": "N1 = pickle.loads(pickle.dumps(N))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 44,
          "content": "stride = eval(stride)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 27,
          "content": "args = eval(args[0])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1480,
          "content": "def test_complex_params_number_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1586,
          "content": "def test_force_real_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 350,
          "content": "if not dup_eval(R51_dup, candidate_root, ZZ):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 423,
          "content": "if not dup_eval(R, (a := self.round_mpf(r.real)), ZZ):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 395,
          "content": "reps = [dup_eval(_.to_list(), ogen, K) for _ in reps] + [erep]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 191,
          "content": "def test_dup_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 192,
          "content": "assert dup_eval([], 7, ZZ) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 193,
          "content": "assert dup_eval([1, 2], 0, ZZ) == 2",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 194,
          "content": "assert dup_eval([1, 2, 3], 7, ZZ) == 66",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 197,
          "content": "def test_dmp_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 198,
          "content": "assert dmp_eval([], 3, 0, ZZ) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 200,
          "content": "assert dmp_eval([[]], 3, 1, ZZ) == []",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 201,
          "content": "assert dmp_eval([[[]]], 3, 2, ZZ) == [[]]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 203,
          "content": "assert dmp_eval([[1, 2]], 0, 1, ZZ) == [1, 2]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 205,
          "content": "assert dmp_eval([[[1]]], 3, 2, ZZ) == [[1]]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 206,
          "content": "assert dmp_eval([[[1, 2]]], 3, 2, ZZ) == [[1, 2]]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 208,
          "content": "assert dmp_eval([[3, 2], [1, 2]], 3, 1, ZZ) == [10, 8]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 209,
          "content": "assert dmp_eval([[[3, 2]], [[1, 2]]], 3, 2, ZZ) == [[10, 8]]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 214,
          "content": "f_6, -2, 1, 3, ZZ) == dmp_eval(dmp_swap(f_6, 0, 1, 3, ZZ), -2, 3, ZZ)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 216,
          "content": "f_6, 7, 1, 3, ZZ) == dmp_eval(dmp_swap(f_6, 0, 1, 3, ZZ), 7, 3, ZZ)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 218,
          "content": "dmp_eval(dmp_swap(f_6, 0, 2, 3, ZZ), -2, 3, ZZ), 0, 1, 2, ZZ)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 220,
          "content": "dmp_eval(dmp_swap(f_6, 0, 2, 3, ZZ), 7, 3, ZZ), 0, 1, 2, ZZ)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 259,
          "content": "dmp_eval(dmp_diff(dmp_swap(f_6, 0, 1, 3, ZZ), 2, 3, ZZ), 7, 3, ZZ)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 262,
          "content": "dmp_eval(dmp_diff(f_6, 2, 3, ZZ), 7, 3, ZZ)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 381,
          "content": "def test_gf_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 382,
          "content": "assert gf_eval([], 4, 11, ZZ) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 383,
          "content": "assert gf_eval([], 27, 11, ZZ) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 384,
          "content": "assert gf_eval([7], 4, 11, ZZ) == 7",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 385,
          "content": "assert gf_eval([7], 27, 11, ZZ) == 7",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 387,
          "content": "assert gf_eval([1, 0, 3, 2, 4, 3, 1, 2, 0], 0, 11, ZZ) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 388,
          "content": "assert gf_eval([1, 0, 3, 2, 4, 3, 1, 2, 0], 4, 11, ZZ) == 9",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 389,
          "content": "assert gf_eval([1, 0, 3, 2, 4, 3, 1, 2, 0], 27, 11, ZZ) == 5",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 391,
          "content": "assert gf_eval([4, 0, 0, 4, 6, 0, 1, 3, 5], 0, 11, ZZ) == 5",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 392,
          "content": "assert gf_eval([4, 0, 0, 4, 6, 0, 1, 3, 5], 4, 11, ZZ) == 3",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 393,
          "content": "assert gf_eval([4, 0, 0, 4, 6, 0, 1, 3, 5], 27, 11, ZZ) == 9",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 395,
          "content": "assert gf_multi_eval([3, 2, 1], [0, 1, 2, 3], 11, ZZ) == [1, 6, 6, 1]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9,
          "content": "exec('R = vring(\"r\", QQ)', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 10,
          "content": "exec('assert r == R.gens[0]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 12,
          "content": "exec('R = vring(\"rb rbb rcc rzz _rx\", QQ)', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13,
          "content": "exec('assert rb == R.gens[0]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 14,
          "content": "exec('assert rbb == R.gens[1]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 15,
          "content": "exec('assert rcc == R.gens[2]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 16,
          "content": "exec('assert rzz == R.gens[3]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 17,
          "content": "exec('assert _rx == R.gens[4]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 19,
          "content": "exec('R = vring([\"rd\", \"re\", \"rfg\"], QQ)', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 20,
          "content": "exec('assert rd == R.gens[0]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 21,
          "content": "exec('assert re == R.gens[1]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 22,
          "content": "exec('assert rfg == R.gens[2]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 26,
          "content": "exec('F = vfield(\"f\", QQ)', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 27,
          "content": "exec('assert f == F.gens[0]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 29,
          "content": "exec('F = vfield(\"fb fbb fcc fzz _fx\", QQ)', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 30,
          "content": "exec('assert fb == F.gens[0]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 31,
          "content": "exec('assert fbb == F.gens[1]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 32,
          "content": "exec('assert fcc == F.gens[2]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 33,
          "content": "exec('assert fzz == F.gens[3]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 34,
          "content": "exec('assert _fx == F.gens[4]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 36,
          "content": "exec('F = vfield([\"fd\", \"fe\", \"ffg\"], QQ)', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 37,
          "content": "exec('assert fd == F.gens[0]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 38,
          "content": "exec('assert fe == F.gens[1]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 39,
          "content": "exec('assert ffg == F.gens[2]', ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 218,
          "content": "assert f.eval(a=1, j=0) == u",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 219,
          "content": "assert f.eval(a=1, j=1) == v",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "assert f.eval(1).eval(1) == ZZ(4)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1639,
          "content": "def test_Poly_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1640,
          "content": "assert Poly(0, x).eval(7) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1641,
          "content": "assert Poly(1, x).eval(7) == 1",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1642,
          "content": "assert Poly(x, x).eval(7) == 7",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1644,
          "content": "assert Poly(0, x).eval(0, 7) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1645,
          "content": "assert Poly(1, x).eval(0, 7) == 1",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1646,
          "content": "assert Poly(x, x).eval(0, 7) == 7",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1648,
          "content": "assert Poly(0, x).eval(x, 7) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1649,
          "content": "assert Poly(1, x).eval(x, 7) == 1",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1650,
          "content": "assert Poly(x, x).eval(x, 7) == 7",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1652,
          "content": "assert Poly(0, x).eval('x', 7) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1653,
          "content": "assert Poly(1, x).eval('x', 7) == 1",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1654,
          "content": "assert Poly(x, x).eval('x', 7) == 7",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1656,
          "content": "raises(PolynomialError, lambda: Poly(1, x).eval(1, 7))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1657,
          "content": "raises(PolynomialError, lambda: Poly(1, x).eval(y, 7))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1658,
          "content": "raises(PolynomialError, lambda: Poly(1, x).eval('y', 7))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1660,
          "content": "assert Poly(123, x, y).eval(7) == Poly(123, y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1661,
          "content": "assert Poly(2*y, x, y).eval(7) == Poly(2*y, y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1662,
          "content": "assert Poly(x*y, x, y).eval(7) == Poly(7*y, y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1664,
          "content": "assert Poly(123, x, y).eval(x, 7) == Poly(123, y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1665,
          "content": "assert Poly(2*y, x, y).eval(x, 7) == Poly(2*y, y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1666,
          "content": "assert Poly(x*y, x, y).eval(x, 7) == Poly(7*y, y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1668,
          "content": "assert Poly(123, x, y).eval(y, 7) == Poly(123, x)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1669,
          "content": "assert Poly(2*y, x, y).eval(y, 7) == Poly(14, x)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1670,
          "content": "assert Poly(x*y, x, y).eval(y, 7) == Poly(7*x, x)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1672,
          "content": "assert Poly(x*y + y, x, y).eval({x: 7}) == Poly(8*y, y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1673,
          "content": "assert Poly(x*y + y, x, y).eval({y: 7}) == Poly(7*x + 7, x)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1675,
          "content": "assert Poly(x*y + y, x, y).eval({x: 6, y: 7}) == 49",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1676,
          "content": "assert Poly(x*y + y, x, y).eval({x: 7, y: 6}) == 48",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1678,
          "content": "assert Poly(x*y + y, x, y).eval((6, 7)) == 49",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1679,
          "content": "assert Poly(x*y + y, x, y).eval([6, 7]) == 49",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1681,
          "content": "assert Poly(x + 1, domain='ZZ').eval(S.Half) == Rational(3, 2)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1682,
          "content": "assert Poly(x + 1, domain='ZZ').eval(sqrt(2)) == sqrt(2) + 1",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1684,
          "content": "raises(ValueError, lambda: Poly(x*y + y, x, y).eval((6, 7, 8)))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1685,
          "content": "raises(DomainError, lambda: Poly(x + 1, domain='ZZ').eval(S.Half, auto=False))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1692,
          "content": "assert f.eval((z + 1)/(z - 1)) == result",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1695,
          "content": "assert g.eval((z + 1)/(z - 1)) == Poly(result, y, domain='ZZ(alpha,z)')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2834,
          "content": "def test_factor_noeval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3960,
          "content": "deserialized = pickle.loads(pickle.dumps(poly))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1366,
          "content": "assert pickle.loads(pickle.dumps(dM)) == dM",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1368,
          "content": "assert pickle.loads(pickle.dumps(dM)) == dM",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 36,
          "content": "# In each case, test eval() the lambdarepr() to make sure there are a",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 43,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 52,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 60,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 69,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 79,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 89,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 102,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 128,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 141,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 153,
          "content": "eval(h + l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 158,
          "content": "# In each case, test eval() the lambdarepr() to make sure that",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3139,
          "content": "assert pickle.loads(pickle.dumps(latex)) is latex",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 30,
          "content": "# eval(srepr(expr)) == expr has to succeed in the right environment. The right",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 33,
          "content": "exec(\"from sympy import *\", ENV)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 41,
          "content": "the condition eval(srepr(expr))==expr holds.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 47,
          "content": "exec(import_stmt, ENV2)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 50,
          "content": "assert eval(string, ENV2) == expr",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 72,
          "content": "assert eval(srepr(expr)) == expr",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 184,
          "content": "assert eval(srepr(x), ENV) == x",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 206,
          "content": "assert d == eval(srepr(d))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 55,
          "content": "random_variables = [eval(tensorflow_code(i)) for i in random_matrices]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 87,
          "content": "random_variables = [eval(tensorflow_code(i)) for i in random_matrices]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "random_variables = [eval(tensorflow_code(i)) for i in random_matrices]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 132,
          "content": "tf_rvs = [eval(tensorflow_code(i)) for i in rvs]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 148,
          "content": "tf_rvs = [eval(tensorflow_code(i)) for i in rvs]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 636,
          "content": "np.testing.assert_allclose(float(e_a), e.eval())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 639,
          "content": "np.testing.assert_allclose(float(e_b), e.eval())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 169,
          "content": "def eval(cls, arg):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 298,
          "content": "def test_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 394,
          "content": "def test_garbage_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 212,
          "content": "__import__('sympy')",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 47,
          "content": "def test_s_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 151,
          "content": "a2 = pickle.loads(pickle.dumps(a1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 155,
          "content": "a2 = pickle.loads(pickle.dumps(a1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 159,
          "content": "a2 = pickle.loads(pickle.dumps(a1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 163,
          "content": "a2 = pickle.loads(pickle.dumps(a1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 862,
          "content": "assert func(a).eval(session=s) == 0.5",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 873,
          "content": "assert func(a).eval(session=s, feed_dict={a: 0}) == 0.5",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 885,
          "content": "assert func(a).eval(session=s, feed_dict={a: 0}) == 0.5",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 895,
          "content": "assert func(False, True).eval(session=s) == False",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 905,
          "content": "assert func(-1).eval(session=s) == -1",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 906,
          "content": "assert func(0).eval(session=s) == 0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 907,
          "content": "assert func(1).eval(session=s) == 1",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 917,
          "content": "assert func(-2).eval(session=s) == 4",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 927,
          "content": "assert func(-2).eval(session=s) == -2",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 937,
          "content": "assert func(1).eval(session=s) == True",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 954,
          "content": "assert func1(a).eval(session=s) == 1",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 955,
          "content": "assert func2(a).eval(session=s) == 2",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 957,
          "content": "tensorflow_result = func3(a).eval(session=s)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 961,
          "content": "tensorflow_result = func4(a).eval(session=s)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 975,
          "content": "assert fcall.eval(session=s) == 5.0",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1521,
          "content": "assert eval(lambdastr((f, fx), f/fx))(10, 5) == 2",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1523,
          "content": "eval(lambdastr((f, fx), f/fx, dummify=False)))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1524,
          "content": "assert eval(lambdastr((f, fx), f/fx, dummify=True))(10, 5) == 2",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1525,
          "content": "assert eval(lambdastr((fx, f), f/fx, dummify=True))(S(10), 5) == S.Half",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1527,
          "content": "assert eval(lambdastr(fx, 1 + fx, dummify=True))(41) == 42",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 74,
          "content": "b = pickle.loads(pickle.dumps(a, protocol))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 197,
          "content": "copiers += [lambda x: pickle.loads(pickle.dumps(x, proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 200,
          "content": "copiers += [lambda x: cloudpickle.loads(cloudpickle.dumps(x))]",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 712,
          "content": "assert pickle.loads(pickle.dumps(S.Half)) == S.Half",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 723,
          "content": "assert pickle.loads(data) == sqrt(2)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 89,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 760,
          "content": "ns_str = \"__import__('pkg_resources').declare_namespace(__name__)\\n\"",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 228,
          "content": "'script_name' is a file that will be read and run with 'exec()';",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 268,
          "content": "exec(code, g)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 845,
          "content": "__import__(module_name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 92,
          "content": "except subprocess.CalledProcessError as err:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 290,
          "content": "sys.platform == \"darwin\" and __import__('_osx_support').customize_compiler(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1215,
          "content": "(unless you are familiar with how eval() and exec() work).  The",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1215,
          "content": "(unless you are familiar with how eval() and exec() work).  The",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2105,
          "content": "query(f\"SELECT * FROM {input()}\")  # not ok",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 31,
          "content": "__import__('Cython.Compiler.Main')",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 72,
          "content": "ast.literal_eval(value)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 242,
          "content": "init = \"__import__('pkg_resources').declare_namespace(__name__)\"",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 365,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 26,
          "content": "tmpl = '__import__(\"pkg_resources\").declare_namespace(__name__)'",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 29,
          "content": "tmpl = '__path__ = __import__(\"pkgutil\").extend_path(__path__, __name__)'",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 34,
          "content": "assert ast.literal_eval(args)  # ensure it is valid Python",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 89,
          "content": "tmpl = '__import__(\"site\").addsitedir({target_str!r})'",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 624,
          "content": "return importlib.__import__(name, *args, **kwargs)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 133,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 23,
          "content": "SETUP_SCRIPT_STUB = \"__import__('setuptools').setup()\"",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 103,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 122,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 144,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 172,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 180,
          "content": "__import__('os').unlink('world.py')",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 215,
          "content": "'setup.py': \"__import__('setuptools').setup()\",",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 490,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 596,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 632,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 657,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 680,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 682,
          "content": "version=__import__('hello').__version__,",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 820,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 873,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 896,
          "content": "__import__('setuptools').setup(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 93,
          "content": "assert __import__('distutils').__spec__.origin",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 142,
          "content": "cmd = [sys.executable, \"-c\", \"__import__('setuptools').setup()\", *map(str, cmd)]",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 15,
          "content": "pickle.loads(pickle.dumps(Distribution()))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 120,
          "content": "SETUP_SCRIPT_STUB = \"__import__('setuptools').setup()\"",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 449,
          "content": "exec(finder, loc, loc)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 277,
          "content": "install_cmd_kwargs = ast.literal_eval(val)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 98,
          "content": "with pytest.raises(subprocess.CalledProcessError):",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 481,
          "content": "\"__import__('pkg_resources').declare_namespace(__name__)\"",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 54,
          "content": "def test_input(count, description, file, expected_result):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 70,
          "content": "test_input(1, \"no processing\", in_file, result1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 82,
          "content": "test_input(2, \"strip comments\", in_file, result2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 94,
          "content": "test_input(3, \"strip blanks\", in_file, result3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 100,
          "content": "test_input(4, \"default processing\", in_file, result4)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 112,
          "content": "test_input(5, \"join lines without collapsing\", in_file, result5)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 125,
          "content": "test_input(6, \"join lines with collapsing\", in_file, result6)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 95,
          "content": "subprocess.CalledProcessError, OSError, UnicodeDecodeError",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 166,
          "content": "except subprocess.CalledProcessError as exc:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1120,
          "content": "if lib_type not in eval(expected):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1294,
          "content": "__import__(module_name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1,
          "content": "__path__ = __import__('pkgutil').extend_path(__path__, __name__)  # type: ignore",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 345,
          "content": ">>> with __import__('pytest').raises(KeyboardInterrupt):",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 992,
          "content": "def polynomial_eval(coefficients, x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 999,
          "content": ">>> polynomial_eval(coefficients, x)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3723,
          "content": "self._executor = __import__(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 332,
          "content": "value = ast.literal_eval(python_str)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 39,
          "content": "__import__(\"setuptools.logging\")",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 522,
          "content": "return eval(use)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 100,
          "content": "invalid = eval(python_expression, globals(), locals())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 334,
          "content": "value = ast.literal_eval(python_str)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 98,
          "content": "\"__main__.py\": \"def exec(): print('hello')\",",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 362,
          "content": "\"setup.py\": \"__import__('setuptools').setup(include_package_data=False)\",",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 32,
          "content": "raise subprocess.CalledProcessError(r.returncode, cmd, r.stdout, r.stderr)",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 38,
          "content": "mod = __import__(module_name, None, None, ['__all__'])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 91,
          "content": "this method is equivalent to running ``eval()`` on the input file. The formatter is",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 103,
          "content": "exec(f.read(), custom_namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 282,
          "content": "relative to the input (i.e. the first line is line 1) and are",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 45,
          "content": "mod = __import__(module_name, None, None, ['__all__'])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "exec(f.read(), custom_namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 150,
          "content": "v = eval(Symbol(compl.mod))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 361,
          "content": "v = eval(Symbol(compl.mod))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 257,
          "content": "# input (tabs expanded to spaces) and the expansion tab width is != 8,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 70,
          "content": "r'DTOC|DTOR|DTOS|DTOT|EDITSOURCE|EMPTY|EOF|ERROR|EVAL(UATE)?|'",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 339,
          "content": "# Command line input (21.6)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 66,
          "content": "r'EnableWindow|EnumReg(?:Key|Value)|Exch|Exec(?:Shell|Wait)?|'",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "val = ast.literal_eval(val)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 45,
          "content": "mod = __import__(mod, None, None, [cls])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 100,
          "content": "invalid = eval(python_expression, globals(), locals())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 205,
          "content": "newitem = (dtype, ast.literal_eval(repeats))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1564,
          "content": ">>> assert eval(dtype_short_repr(dt)) == dt",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3493,
          "content": "The array can be read back with pickle.load or numpy.load.",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3508,
          "content": "pickle.loads will convert the string back to an array.",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 533,
          "content": "new = getattr(__import__(place, globals(), {}, [obj]), obj)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 553,
          "content": "def _parse_einsum_input(operands):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 573,
          "content": ">>> _parse_einsum_input(('...a,...a->...', a, b))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 576,
          "content": ">>> _parse_einsum_input((a, [Ellipsis, 0], b, [Ellipsis, 0]))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 885,
          "content": "_parse_einsum_input(operands)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1230,
          "content": "`packed` has the same number of dimensions as the input (unless `axis`",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 703,
          "content": ">>> pickle.loads(pickle.dumps(r))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 19,
          "content": "mod = __import__(module, fromlist=[name])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 632,
          "content": "return eval(f\"{l1}:{' and '.join(l2)}\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 640,
          "content": "return eval(f\"{l1}:{' or '.join(l2)}\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 644,
          "content": "return eval('lambda v,f=f:not f(v)')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 159,
          "content": "d = eval(f.read().lower(), {}, {})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 296,
          "content": "ret['size'] = repr(eval(ret['size']))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 449,
          "content": "v = eval(v, {}, {})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 163,
          "content": "using ``n/2+1`` complex points in the input (time) domain for ``n`` real",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 387,
          "content": "fin = fileinput.FileInput(ffile, openhook=openhook)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1329,
          "content": "v = eval(initexpr, {}, params)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2269,
          "content": "def myeval(e, g=None, l=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2271,
          "content": "r = eval(e, g, l)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2302,
          "content": "c = int(myeval(e, {}, {}))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2323,
          "content": "b = myeval(ee, {}, {})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2328,
          "content": "a = myeval(ee, {}, {}) - b",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2333,
          "content": "c = myeval(ee, {}, {})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2339,
          "content": "c2 = myeval(ee, {}, {})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2529,
          "content": "params[n] = param_eval(v, g_params, params, dimspec=dimspec)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2559,
          "content": "value = eval(value, {}, params)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2637,
          "content": "l = str(eval(l, {}, params))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2646,
          "content": "l = str(eval(l, {}, params))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2914,
          "content": "kindselect['kind'] = eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2964,
          "content": "def param_eval(v, g_params, params, dimspec=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2985,
          "content": "p = eval(v, g_params, params)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3016,
          "content": "item = eval(item, g_params, params)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3468,
          "content": "v = eval(v)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 536,
          "content": "See :py:func:`ast.literal_eval()` for details.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 563,
          "content": "See :py:func:`ast.literal_eval()` for details.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 658,
          "content": "d = ast.literal_eval(header)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 663,
          "content": "d = ast.literal_eval(header)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 794,
          "content": "Additional keyword arguments to pass to pickle.load. These are only",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 799,
          "content": "See :py:func:`ast.literal_eval()` for details.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 838,
          "content": "array = pickle.load(fp, **pickle_kwargs)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 927,
          "content": "See :py:func:`ast.literal_eval()` for details.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 145,
          "content": "Additional keyword arguments to pass on to pickle.load.",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 151,
          "content": "See :py:func:`ast.literal_eval()` for details.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 356,
          "content": "See :py:func:`ast.literal_eval()` for details.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 492,
          "content": "\"`allow_pickle=` keyword argument or `pickle.load()`.\")",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 494,
          "content": "return pickle.load(fid, **pickle_kwargs)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "Otherwise, output is just the array version of the input (via asarray).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 128,
          "content": "Otherwise, output is just the array version of the input (via asarray).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 156,
          "content": "Otherwise, output is just the array version of the input (via asarray).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 343,
          "content": "module = __import__(module, globals(), locals(), [])",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 578,
          "content": "def safe_eval(source):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 612,
          "content": ">>> np.safe_eval('1')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 614,
          "content": ">>> np.safe_eval('[1, 2, 3]')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 616,
          "content": ">>> np.safe_eval('{\"foo\": (\"bar\", 10.0)}')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 619,
          "content": ">>> np.safe_eval('import os')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 624,
          "content": ">>> np.safe_eval('open(\"/home/user/.ssh/id_dsa\").read()')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 642,
          "content": "return ast.literal_eval(source)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 246,
          "content": ">>> hermeval(0,hermeline(3, 2))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 248,
          "content": ">>> hermeval(1,hermeline(3, 2))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 304,
          "content": ">>> hermeval((-1, 0, 1), coef)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 307,
          "content": ">>> hermeval((-1j, 1j), coef)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 791,
          "content": "tmp[0] += k[i] - hermeval(lbnd, tmp)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 797,
          "content": "def hermeval(x, c, tensor=True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 857,
          "content": ">>> hermeval(1, coef)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 859,
          "content": ">>> hermeval([[1,2],[3,4]], coef)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1088,
          "content": "``hermeval(x, c)`` are the same up to roundoff. This equivalence is",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1357,
          "content": ">>> y = hermeval(x, [1, 2, 3]) + err",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 45,
          "content": "assert_(pickle.loads(pickle.dumps(np._NoValue,",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 407,
          "content": "eval(module_name)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 542,
          "content": "core_submodule = __import__(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 19,
          "content": "res = pickle.loads(pickle.dumps(error))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 84,
          "content": "exc2 = pickle.loads(pickle.dumps(exc))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 340,
          "content": "assert_equal(eval(repr(a), vars(np)), a)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 341,
          "content": "assert_equal(eval(repr(a[0]), {'np': np}), a[0])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 308,
          "content": "res = pickle.loads(s)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 177,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 74,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1229,
          "content": "def test_path_type_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 354,
          "content": "self.assert_deprecated(lambda: safe_eval(\"None\"))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 851,
          "content": "assert_equal(pickle.loads(pickle.dumps(dt, protocol=proto)), dt)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 853,
          "content": "assert_equal(pickle.loads(pickle.dumps(dt, protocol=proto)), dt)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 855,
          "content": "assert_equal(pickle.loads(pickle.dumps(scalar, protocol=proto)),",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 858,
          "content": "assert_equal(pickle.loads(pickle.dumps(delta, protocol=proto)),",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 865,
          "content": "assert_equal(pickle.loads(pkl), np.dtype('<M8[7D]'))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 869,
          "content": "assert_equal(pickle.loads(pkl), np.dtype('<M8[W]'))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 873,
          "content": "assert_equal(pickle.loads(pkl), np.dtype('>M8[us]'))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2512,
          "content": "def test_corecursive_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1065,
          "content": "assert_equal(np.dtype(eval(str(dt))), dt)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1366,
          "content": "pickled = pickle.loads(buf)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1428,
          "content": "roundtrip_DType = pickle.loads(pickle.dumps(DType, proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1439,
          "content": "roundtrip_dt = pickle.loads(pickle.dumps(dt, proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 74,
          "content": "except subprocess.CalledProcessError as p:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "roundtripped = pickle.loads(",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2824,
          "content": "def test_iter_writemasked_badinput():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 170,
          "content": "recordarr_r = eval(\"np.\" + repr(recordarr), {'np': np})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 171,
          "content": "recarr_r = eval(\"np.\" + repr(recarr), {'np': np})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 173,
          "content": "recordview_r = eval(\"np.\" + repr(recordview), {'np': np, 'numpy': np})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 414,
          "content": "assert_equal(a, pickle.loads(pickle.dumps(a, protocol=proto)))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 415,
          "content": "assert_equal(a[0], pickle.loads(pickle.dumps(a[0],",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 421,
          "content": "assert_equal(a, pickle.loads(pickle.dumps(a, protocol=proto)))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 422,
          "content": "assert_equal(a[0], pickle.loads(pickle.dumps(a[0],",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 429,
          "content": "pa = pickle.loads(pickle.dumps(a[0], protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 453,
          "content": "unpickled = pickle.loads(dump)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4037,
          "content": "def test_single_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4044,
          "content": "def test_scalar_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4110,
          "content": "def test_non_array_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 52,
          "content": "b = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 363,
          "content": "dt_ = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 489,
          "content": "result = pickle.loads(data, encoding='bytes')",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 833,
          "content": "new = pickle.loads(pickle.dumps(el, protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1069,
          "content": "y = pickle.loads(pickle.dumps(x, protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1082,
          "content": "xp = pickle.load(f, encoding='latin1')",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1275,
          "content": "assert_(pickle.loads(",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1277,
          "content": "assert_(pickle.loads(",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1907,
          "content": "data = pickle.loads(blob)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1919,
          "content": "data = pickle.loads(pickle.dumps(data, protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1931,
          "content": "result = pickle.loads(data, encoding='latin1')",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1934,
          "content": "assert_raises(Exception, pickle.loads, data, encoding='koi8-r')",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1957,
          "content": "result = pickle.loads(data, encoding='latin1')",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1966,
          "content": "result = pickle.loads(data, encoding='koi8-r')",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1972,
          "content": "ValueError, pickle.loads, data, encoding='koi8-r'",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2212,
          "content": "assert_equal(pickle.loads(",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2436,
          "content": "assert_equal(pickle.loads(dumped), arr)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2567,
          "content": "result = pickle.loads(test_data, encoding='bytes')",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 189,
          "content": "vals = pickle.loads(pickle.dumps(a, v))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1549,
          "content": "assert_array_equal(eval(repr(xx), {\"np\": np, \"array\": np.array}), xx)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1701,
          "content": "scalar = pickle.loads(pickle.dumps(scalar))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1855,
          "content": "assert_equal(zs, pickle.loads(zs.dumps()))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1862,
          "content": "zs2 = pickle.loads(p)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1871,
          "content": "pk_load = pickle.loads(pk_dmp)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1882,
          "content": "array_from_buffer = pickle.loads(bytes_string, buffers=buffers)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3939,
          "content": "MyType = eval(\"type('MyType', (base,), class_namespace)\",",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4404,
          "content": "depickled_arr_with_object = pickle.loads(",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4406,
          "content": "depickled_arr_without_object = pickle.loads(",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4427,
          "content": "depickled_f_contiguous_array = pickle.loads(bytes_string,",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4446,
          "content": "depickled_transposed_contiguous_array = pickle.loads(bytes_string,",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4459,
          "content": "assert_equal(x, pickle.loads(c_contiguous_dumped))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4461,
          "content": "assert_equal(x, pickle.loads(f_contiguous_dumped))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4463,
          "content": "assert_equal(x, pickle.loads(transposed_contiguous_dumped))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4465,
          "content": "assert_equal(x, pickle.loads(no_contiguous_dumped))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4476,
          "content": "depickled_non_contiguous_array = pickle.loads(",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4496,
          "content": "a, pickle.loads(pickle.dumps(a, protocol=proto)),",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4505,
          "content": "return pickle.loads(obj, encoding='latin1')",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4559,
          "content": "new = pickle.loads(pickle.dumps(original_byte_reversed))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6314,
          "content": "def test_dtype_from_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8312,
          "content": "res = pickle.loads(pickle_obj)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 628,
          "content": "#            val2 = eval(val_repr)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 654,
          "content": "val2 = t(eval(val_repr))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 152,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 200,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 244,
          "content": "func = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 510,
          "content": "func = eval(intrin[:3])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 640,
          "content": "func = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 701,
          "content": "npyv_load_tillz, npyv_load_till = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 721,
          "content": "npyv_store_till = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 741,
          "content": "npyv_loadn = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 767,
          "content": "npyv_loadn_tillz, npyv_loadn_till = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 804,
          "content": "npyv_storen = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 843,
          "content": "npyv_storen_till = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 895,
          "content": "intrin = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1102,
          "content": "func = eval(intrin)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 366,
          "content": "res = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 71,
          "content": "inval = np.array(str_to_float(data_subset['input'].astype(str), data_subset['type'].astype(str)), dtype=eval(datatype))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 72,
          "content": "outval = np.array(str_to_float(data_subset['output'].astype(str), data_subset['type'].astype(str)), dtype=eval(datatype))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 204,
          "content": "assert_(pickle.loads(pickle.dumps(np.sin,",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 209,
          "content": "res = pickle.loads(pickle.dumps(_rational_tests.test_add,",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 216,
          "content": "assert_(pickle.loads(astring) is np.cos)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 226,
          "content": "obj = pickle.loads(pickle.dumps(_pickleable_module_global.ufunc))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 501,
          "content": "int64_2 = pickle.loads(pickle.dumps(int64))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2723,
          "content": "def test_reduce_output_does_not_broadcast_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 513,
          "content": "a, b, divisors = eval(ex_val)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 577,
          "content": "a = eval(ex_val)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 80,
          "content": "def test_input(self, length):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "def test_array_input(self, length):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 123,
          "content": "def test_2d_array_input(self, length):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 143,
          "content": "subroutine {fprefix}_input(c, o)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 177,
          "content": "subroutine {fprefix}_array_input(c, o)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 187,
          "content": "subroutine {fprefix}_2d_array_input(c, o)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 246,
          "content": "def test_input(self, dtype):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 291,
          "content": "def test_array_input(self, dtype):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 317,
          "content": "def test_2d_array_input(self, dtype):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 263,
          "content": "class TestEval(util.F2PyTest):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 372,
          "content": "ret = crackfortran.param_eval(v, g_params, params, dimspec=dimspec)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 382,
          "content": "ret = crackfortran.param_eval(v, g_params, params, dimspec=dimspec)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 401,
          "content": "ret = crackfortran.param_eval(v, g_params, params, dimspec=None)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 847,
          "content": "def test_npd_f77exec():",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 855,
          "content": "def test_npd_f90exec():",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "def _get_input(self, intent=\"in\"):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 86,
          "content": "for s in self._get_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 93,
          "content": "for s in self._get_input(intent=\"inout\"):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 56,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 584,
          "content": "def test_fft_with_integer_or_bool_input(data, fft):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1275,
          "content": "def test_object_input(mode):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 414,
          "content": "def test_repeated_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 536,
          "content": "def test_error_small_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2009,
          "content": "def test_bad_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2726,
          "content": "def test_single_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2730,
          "content": "def test_no_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 123,
          "content": "def test_dtype_from_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 523,
          "content": "def test_dtype_from_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 293,
          "content": "mrec_ = pickle.loads(_)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 621,
          "content": "y = pickle.loads(s)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 733,
          "content": "a_pickled = pickle.loads(pickle.dumps(a, protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 748,
          "content": "a_pickled = pickle.loads(pickle.dumps(a, protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 757,
          "content": "mc_pickled = pickle.loads(pickle.dumps(mc, protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 767,
          "content": "a_pickled = pickle.loads(pickle.dumps(a, protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 777,
          "content": "test = pickle.loads(pickle.dumps(b, protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5547,
          "content": "res = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 111,
          "content": "self._dataiter[index] = self._original._validate_input(value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 126,
          "content": "def _validate_input(self, value):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 134,
          "content": "super().__setitem__(item, self._validate_input(value))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 89,
          "content": "a_pickled = pickle.loads(pickle.dumps(a, protocol=proto))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 84,
          "content": "val1 = herme.hermeval(self.x, pol1)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 88,
          "content": "val2 = herme.hermeval(self.x, pol2)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 90,
          "content": "val3 = herme.hermeval(self.x, pol3)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 125,
          "content": "def test_hermeval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 127,
          "content": "assert_equal(herme.hermeval([], [1]).size, 0)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 135,
          "content": "res = herme.hermeval(x, [0] * i + [1])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 142,
          "content": "assert_equal(herme.hermeval(x, [1]).shape, dims)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 143,
          "content": "assert_equal(herme.hermeval(x, [1, 0]).shape, dims)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 144,
          "content": "assert_equal(herme.hermeval(x, [1, 0, 0]).shape, dims)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 242,
          "content": "assert_almost_equal(herme.hermeval(-1, hermeint), i)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 363,
          "content": "assert_almost_equal(v[..., i], herme.hermeval(x, coef))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 371,
          "content": "assert_almost_equal(v[..., i], herme.hermeval(x, coef))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 428,
          "content": "assert_almost_equal(herme.hermeval(x, coef3), y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 431,
          "content": "assert_almost_equal(herme.hermeval(x, coef3), y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 435,
          "content": "assert_almost_equal(herme.hermeval(x, coef4), y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 438,
          "content": "assert_almost_equal(herme.hermeval(x, coef4), y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 442,
          "content": "assert_almost_equal(herme.hermeval(x, coef4), y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 471,
          "content": "assert_almost_equal(herme.hermeval(x, coef1), y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 473,
          "content": "assert_almost_equal(herme.hermeval(x, coef2), y)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 519,
          "content": "res = herme.hermeval(roots, pol)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "y = pickle.loads(pickle.dumps(x))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 22,
          "content": "def test_trimseq_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 28,
          "content": "def test_symbol_bad_input(self, bad_input, exception):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 303,
          "content": "reloaded = pickle.loads(bitgen_pkl)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 311,
          "content": "aa = pickle.loads(pickle.dumps(ss))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 321,
          "content": "bg_plk = pickle.loads(pickle.dumps(bit_generator))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 327,
          "content": "bg_plk = pickle.loads(pickle.dumps(bit_generator))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 555,
          "content": "sfc = pickle.load(gz)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2776,
          "content": "rg_plk = pickle.loads(pickle.dumps(rg))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2782,
          "content": "rg_plk = pickle.loads(pickle.dumps(rg))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2798,
          "content": "rg = pickle.load(gz)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 268,
          "content": "rs_unpick = pickle.loads(pickle.dumps(self.random_state))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 437,
          "content": "unpick = pickle.loads(pick)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 443,
          "content": "unpick = pickle.loads(pick)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1297,
          "content": "exec(astr, dict)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1583,
          "content": "exec(code, globs, locs)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 299,
          "content": "#        wait = input(\"press Enter to continue\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 275,
          "content": "edgedata = dict(literal_eval(edgedata_str.strip()))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 107,
          "content": "return literal_eval(rep)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 295,
          "content": "edgedata = literal_eval(data)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 83,
          "content": "exec(s, {}, locls)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 651,
          "content": "if self._will_call_mutate_input(args, kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 699,
          "content": "if self._will_call_mutate_input(args, kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1034,
          "content": "def _will_call_mutate_input(self, args, kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1626,
          "content": "\"networkx\" in self.backends and self._will_call_mutate_input(args, kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 692,
          "content": "input (\"a\", \"b\") implies the mapping function will take 2 arguments",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 912,
          "content": "exec(compiled, globl, locl)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 244,
          "content": "edgedata = dict(literal_eval(\" \".join(d)))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 25,
          "content": "def test_string_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 31,
          "content": "def test_non_integer_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 36,
          "content": "def test_negative_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 73,
          "content": "def test_tree_all_pairs_lca_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 151,
          "content": "def test_empty_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 56,
          "content": "G = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 469,
          "content": "G = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 180,
          "content": "G = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 28,
          "content": "assert ghj.nodes[n] == eval(graph).nodes[int(node)]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 23,
          "content": "assert gh.nodes[n] == eval(graph).nodes[int(node)]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 229,
          "content": "def test_data_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 16,
          "content": "pview = pickle.loads(pickle.dumps(view, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 19,
          "content": "pview = pickle.loads(pickle.dumps(view))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 73,
          "content": "pview = pickle.loads(pickle.dumps(view, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 153,
          "content": "pview = pickle.loads(pickle.dumps(view, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 211,
          "content": "pview = pickle.loads(pickle.dumps(view, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 18,
          "content": "prv = pickle.loads(pickle.dumps(rv, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 65,
          "content": "prv = pickle.loads(pickle.dumps(rv, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 118,
          "content": "pdv = pickle.loads(pickle.dumps(dv, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 157,
          "content": "puv = pickle.loads(pickle.dumps(uv, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 206,
          "content": "H = pickle.loads(pickle.dumps(G, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 197,
          "content": "def test_data_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 203,
          "content": "def test_data_multigraph_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 252,
          "content": "def test_non_multigraph_input(self, dod, mgi, edges):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 610,
          "content": "pg = pickle.loads(pickle.dumps(G, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 612,
          "content": "pg = pickle.loads(pickle.dumps(G))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 615,
          "content": "def test_data_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "def test_view_pygraphviz_no_added_attrs_to_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 22,
          "content": "pnv = pickle.loads(pickle.dumps(nv, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 93,
          "content": "pnv = pickle.loads(pickle.dumps(nv, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 278,
          "content": "pev = pickle.loads(pickle.dumps(ev, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 568,
          "content": "pev = pickle.loads(pickle.dumps(ev, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1023,
          "content": "pdeg = pickle.loads(pickle.dumps(deg, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1412,
          "content": "pickle.loads(pickle.dumps(G, -1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 124,
          "content": "def test_planar_layout_non_planar_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 128,
          "content": "def test_smoke_planar_layout_embedding_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 463,
          "content": "def test_smoke_seed_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 562,
          "content": "def test_bipartite_layout_default_nodes_raises_non_bipartite_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 114,
          "content": "def test_margulis_gabber_galil_graph_badinput(graph_type):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 122,
          "content": "def test_chordal_cycle_graph_badinput(graph_type):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 129,
          "content": "def test_paley_graph_badinput():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 136,
          "content": "def test_maybe_regular_expander_badinput():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "def test_is_regular_expander_badinput():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 157,
          "content": "def test_random_regular_expander_badinput():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 68,
          "content": "def test_wrong_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 78,
          "content": "def test_node_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 119,
          "content": "def test_node_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 441,
          "content": "data.append(literal_eval(\"{2.3j, 1 - 2.3j, ()}\"))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 28,
          "content": "assert pickle.loads(pickled) is func.__wrapped__",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 34,
          "content": "assert pickle.loads(pickled) is func",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 37,
          "content": "assert pickle.loads(pickle.dumps(nx.inverse_line_graph)) is nx.inverse_line_graph",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 47,
          "content": "cfg2 = pickle.loads(pickle.dumps(cfg))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 102,
          "content": "cfg2 = pickle.loads(pickle.dumps(cfg))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 64,
          "content": "loaded = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 36,
          "content": "os.system(f'icacls \"{protected_path}\" /deny Everyone:(W)')",
          "pattern": "os\\.system",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 55,
          "content": "os.system(f'icacls \"{protected_path}\" /remove:d Everyone')",
          "pattern": "os\\.system",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1100,
          "content": "fdID = safeEval(attrs[\"fdSelectIndex\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1267,
          "content": "blendList = [eval(val) for val in blendList]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1718,
          "content": "code = safeEval(attrs[\"code\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1883,
          "content": "fmt = safeEval(attrs[\"format\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2026,
          "content": "return (attrs[\"Registry\"], attrs[\"Order\"], safeEval(attrs[\"Supplement\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2498,
          "content": "# to make deepcopy() and pickle.load() work, we need to signal with",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1032,
          "content": "\"\"\"Maps value from axis mapping's input (user) to output (design).\"\"\"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1040,
          "content": "\"\"\"Maps value from axis mapping's output (design) to input (user).\"\"\"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 499,
          "content": "table.achVendID = safeEval(\"'''\" + self.os2_[\"vendor\"] + \"'''\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 100,
          "content": "\"\"\"Turn input (e.g. string) into proper type. Only when reading from file.\"\"\"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 152,
          "content": "def starteexec(self):",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 159,
          "content": "def stopeexec(self):",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 241,
          "content": "funcs = [(name, eval(f)) for name, f in zip(sys.argv[2::2], sys.argv[3::2])]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 270,
          "content": "def ps_exec(self):",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 341,
          "content": "def ps_eexec(self):",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 343,
          "content": "f.starteexec()",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 348,
          "content": "f.stopeexec()",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 106,
          "content": "sfntVersion = safeEval('\"' + sfntVersion + '\"')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 122,
          "content": "elif \"ERROR\" in attrs or (\"raw\" in attrs and safeEval(attrs[\"raw\"])):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 158,
          "content": "eexec_portion = self.encode_eexec(eexec_dict)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 168,
          "content": "def encode_eexec(self, eexec_dict):",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 881,
          "content": "__import__(\"fontTools.ttLib.tables.\" + pyTag)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 25,
          "content": "__import__(\"fs\")",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 50,
          "content": "vars(self)[name] = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 108,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 165,
          "content": "setattr(self, name, safeEval(value))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 114,
          "content": "self.ulVersion = safeEval(attrs[\"version\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "self.usNumSigs = safeEval(attrs[\"numSigs\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 116,
          "content": "self.usFlag = safeEval(attrs[\"flag\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 155,
          "content": "self.ulFormat = safeEval(attrs[\"format\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 156,
          "content": "self.usReserved1 = safeEval(attrs.get(\"reserved1\", \"0\"))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 157,
          "content": "self.usReserved2 = safeEval(attrs.get(\"reserved2\", \"0\"))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 268,
          "content": "labelIndex = safeEval(elementAttr[\"index\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "nameID = safeEval(elementAttr[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 276,
          "content": "value = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 174,
          "content": "self.version = safeEval(attrs[\"version\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 178,
          "content": "strikeIndex = safeEval(attrs[\"index\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 186,
          "content": "imageFormat = safeEval(name[len(_bitmapGlyphSubclassPrefix) :])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 227,
          "content": "vars(self)[name] = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 331,
          "content": "bitDepth = safeEval(attrs[\"bitDepth\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 333,
          "content": "metrics.width = safeEval(attrs[\"width\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 334,
          "content": "metrics.height = safeEval(attrs[\"height\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 377,
          "content": "bitDepth = safeEval(attrs[\"bitDepth\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 379,
          "content": "metrics.width = safeEval(attrs[\"width\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 380,
          "content": "metrics.height = safeEval(attrs[\"height\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 475,
          "content": "return safeEval(self.__class__.__name__[len(_bitmapGlyphSubclassPrefix) :])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 130,
          "content": "self.version = float(safeEval(attrs[\"version\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 134,
          "content": "fobj.flags = int(safeEval(attrs[\"flags\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 135,
          "content": "fobj.label = int(safeEval(attrs[\"label\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 136,
          "content": "fobj.default = int(safeEval(attrs.get(\"default\", \"0\")))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 145,
          "content": "fobj.settings[int(safeEval(a[\"value\"]))] = int(safeEval(a[\"label\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 51,
          "content": "value = safeEval(value)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 254,
          "content": "self.version = safeEval(attrs[\"version\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 258,
          "content": "strikeIndex = safeEval(attrs[\"index\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 296,
          "content": "indexFormat = safeEval(name[len(_indexSubTableSubclassPrefix) :])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 342,
          "content": "vars(self)[name] = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 364,
          "content": "vars(self)[name] = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 432,
          "content": "self.imageFormat = safeEval(attrs[\"imageFormat\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 433,
          "content": "self.firstGlyphIndex = safeEval(attrs[\"firstGlyphIndex\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 434,
          "content": "self.lastGlyphIndex = safeEval(attrs[\"lastGlyphIndex\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 569,
          "content": "self.imageSize = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 133,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 56,
          "content": "setattr(self, name, safeEval(value))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 148,
          "content": "setattr(self, name, safeEval(value))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 202,
          "content": "self.version = float(safeEval(attrs[\"version\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 203,
          "content": "self.scheme = int(safeEval(attrs[\"compressionScheme\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 215,
          "content": "k = int(safeEval(attrs[\"index\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 216,
          "content": "v = int(safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 58,
          "content": "self.yPels[attrs[\"name\"]] = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 211,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 243,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 286,
          "content": "uString = uString + chr(eval(\"0x\" + valStr))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 328,
          "content": "setattr(self, name, safeEval(value))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 76,
          "content": "self.numAttribs = int(safeEval(attrs[\"number\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 66,
          "content": "METAMD5List = eval(self.METAMD5)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "setattr(self, name, safeEval(value))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 42,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 253,
          "content": "setattr(self, name, safeEval(\"'''\" + attrs[\"value\"] + \"'''\"))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 255,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 81,
          "content": "self.version = float(safeEval(attrs[\"version\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 91,
          "content": "(grUtils.tag2num(a[\"fid\"]), int(safeEval(a[\"val\"])))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 316,
          "content": "setattr(self, k, int(safeEval(attrs[k])))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 415,
          "content": "self.scheme = int(safeEval(attrs[\"compressionScheme\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 416,
          "content": "self.version = float(safeEval(attrs[\"version\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 417,
          "content": "self.compilerVersion = int(safeEval(attrs[\"compilerVersion\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 607,
          "content": "self.ruleVersion = float(safeEval(attrs.get(\"ruleVersion\", \"0\")))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 772,
          "content": "l[attrs[\"glyph\"]] = int(safeEval(attrs[\"index\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 186,
          "content": "compressed = bool(safeEval(attrs.get(\"compressed\", \"0\")))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 60,
          "content": "self.glyphGrouping[attrs[\"name\"]] = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 206,
          "content": "self.version = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 220,
          "content": "\"bCharSet\": safeEval(attrs[\"bCharSet\"]),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "\"xRatio\": safeEval(attrs[\"xRatio\"]),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 222,
          "content": "\"yStartRatio\": safeEval(attrs[\"yStartRatio\"]),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 223,
          "content": "\"yEndRatio\": safeEval(attrs[\"yEndRatio\"]),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 224,
          "content": "\"groupIndex\": safeEval(attrs[\"groupIndex\"]),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 245,
          "content": "yPelHeight = safeEval(attrs[\"yPelHeight\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 246,
          "content": "yMax = safeEval(attrs[\"yMax\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 247,
          "content": "yMin = safeEval(attrs[\"yMin\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 119,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 165,
          "content": "setattr(self, name, safeEval(value))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 121,
          "content": "point = safeEval(attrs[\"pt\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 122,
          "content": "x = safeEval(attrs[\"x\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 123,
          "content": "y = safeEval(attrs[\"y\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 126,
          "content": "cvt = safeEval(attrs[\"cvt\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 127,
          "content": "value = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 124,
          "content": "self.majorVersion = safeEval(attrs[\"major\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 125,
          "content": "self.minorVersion = safeEval(attrs[\"minor\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 40,
          "content": "index = safeEval(attrs[\"index\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 41,
          "content": "value = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 175,
          "content": "str2fl(value, 16) if tag.endswith(\"Value\") else safeEval(value),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 251,
          "content": "self.subfamilyNameID = safeEval(attrs[\"subfamilyNameID\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 252,
          "content": "self.flags = safeEval(attrs.get(\"flags\", \"0\"))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 254,
          "content": "self.postscriptNameID = safeEval(attrs[\"postscriptNameID\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 61,
          "content": "self.gaspRange[safeEval(attrs[\"rangeMaxPPEM\"])] = safeEval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 238,
          "content": "self.tableVersion = safeEval(attrs[\"version\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 244,
          "content": "format = safeEval(name[12:])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 246,
          "content": "table.platformID = safeEval(attrs[\"platformID\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 247,
          "content": "table.platEncID = safeEval(attrs[\"platEncID\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 419,
          "content": "self.language = safeEval(attrs[\"language\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 429,
          "content": "cmap[safeEval(attrs[\"code\"])] = attrs[\"name\"]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 772,
          "content": "self.language = safeEval(attrs[\"language\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 783,
          "content": "cmap[safeEval(attrs[\"code\"])] = attrs[\"name\"]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1055,
          "content": "self.language = safeEval(attrs[\"language\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1066,
          "content": "cmap[safeEval(attrsMap[\"code\"])] = attrsMap[\"name\"]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1122,
          "content": "self.language = safeEval(attrs[\"language\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1133,
          "content": "cmap[safeEval(attrs[\"code\"])] = attrs[\"name\"]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1290,
          "content": "self.format = safeEval(attrs[\"format\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1291,
          "content": "self.reserved = safeEval(attrs[\"reserved\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1292,
          "content": "self.length = safeEval(attrs[\"length\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1293,
          "content": "self.language = safeEval(attrs[\"language\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1294,
          "content": "self.nGroups = safeEval(attrs[\"nGroups\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1305,
          "content": "cmap[safeEval(attrs[\"code\"])] = attrs[\"name\"]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1456,
          "content": "uvs = safeEval(attrs[\"uvs\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1457,
          "content": "uv = safeEval(attrs[\"uv\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 260,
          "content": "self.version = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 262,
          "content": "self.reserved = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 129,
          "content": "value = safeEval(value)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 123,
          "content": "glyphName = safeEval('\"\"\"' + glyphName + '\"\"\"')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 147,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 153,
          "content": "safeEval(attrs[self.advanceName]),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "safeEval(attrs[self.sideBearingName]),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 98,
          "content": "self.version = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 104,
          "content": "format = safeEval(attrs[\"format\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 236,
          "content": "self.coverage = safeEval(attrs[\"coverage\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 237,
          "content": "subtableFormat = safeEval(attrs[\"format\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 240,
          "content": "self.tupleIndex = safeEval(attrs[\"tupleIndex\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 254,
          "content": "self.kernTable[(attrs[\"l\"], attrs[\"r\"])] = safeEval(attrs[\"v\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 71,
          "content": "value = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 147,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 276,
          "content": "setattr(glyph, attr, safeEval(attrs.get(attr, \"0\")))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 795,
          "content": "coordinates.append((safeEval(attrs[\"x\"]), safeEval(attrs[\"y\"])))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 796,
          "content": "flag = bool(safeEval(attrs[\"on\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 797,
          "content": "if \"overlap\" in attrs and bool(safeEval(attrs[\"overlap\"])):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 799,
          "content": "if \"cubic\" in attrs and bool(safeEval(attrs[\"cubic\"])):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1916,
          "content": "self.firstPt = safeEval(attrs[\"firstPt\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1917,
          "content": "self.secondPt = safeEval(attrs[\"secondPt\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1919,
          "content": "self.x = safeEval(attrs[\"x\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1920,
          "content": "self.y = safeEval(attrs[\"y\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1934,
          "content": "self.flags = safeEval(attrs[\"flags\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 621,
          "content": "self.nameID = safeEval(attrs[\"nameID\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 622,
          "content": "self.platformID = safeEval(attrs[\"platformID\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 623,
          "content": "self.platEncID = safeEval(attrs[\"platEncID\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 624,
          "content": "self.langID = safeEval(attrs[\"langID\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 627,
          "content": "if self.encodingIsUnicodeCompatible() or safeEval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 109,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 263,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 130,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 118,
          "content": "self.version = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 120,
          "content": "self.format = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 292,
          "content": "self.nameIndex = safeEval(attrs[\"nameIndex\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 300,
          "content": "self[size] = safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 951,
          "content": "if conv.aux and not eval(conv.aux, None, self.__dict__):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 989,
          "content": "if conv.aux and not eval(conv.aux, None, table):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1093,
          "content": "if conv.aux and not eval(conv.aux, None, table):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1135,
          "content": "if conv.aux and not eval(conv.aux, None, vars(self)):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 80,
          "content": "converterClass = eval(tp, tableNamespace, converterMapping)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 623,
          "content": "if \"empty\" in attrs and safeEval(attrs[\"empty\"]):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1217,
          "content": "covFlags = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1232,
          "content": "m.Reserved = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1234,
          "content": "m.SubFeatureFlags = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1534,
          "content": "table.GlyphClasses[glyph] = safeEval(value)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1554,
          "content": "glyphClass = safeEval(eltAttrs[\"onGlyphClass\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1564,
          "content": "ligComponents.append(safeEval(eltAttrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1595,
          "content": "result[safeEval(eAttrs[\"cid\"])] = eAttrs[\"glyph\"].strip()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1642,
          "content": "result[eAttrs[\"glyph\"]] = safeEval(eAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1706,
          "content": "return safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1805,
          "content": "return safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1819,
          "content": "return safeEval(attrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 141,
          "content": "glyphname = safeEval(\"'''\" + attrs[\"glyphname\"] + \"'''\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 140,
          "content": "setattr(self, name, safeEval(attrs[\"value\"]))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 143,
          "content": "myFormat = safeEval(\"'''\" + attrs[\"graphicType\"] + \"'''\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 147,
          "content": "myGlyphName = safeEval(\"'''\" + attrs[\"glyphname\"] + \"'''\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "myGlyphName = safeEval(\"'''\" + attrs[\"name\"] + \"'''\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 155,
          "content": "myOffsetX = safeEval(attrs[\"originOffsetX\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 159,
          "content": "myOffsetY = safeEval(attrs[\"originOffsetY\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 350,
          "content": "self.conditionIndex = safeEval(v)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 352,
          "content": "self.axisIndicesIndex = safeEval(v)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 354,
          "content": "self.axisValues = tuple(str2fl(v, 14) for v in safeEval(v))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 355,
          "content": "if safeEval(attrs.get(\"resetUnspecifiedAxes\", \"0\")):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 358,
          "content": "self.axisValuesVarIndex = safeEval(v)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 360,
          "content": "self.transformVarIndex = safeEval(v)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 365,
          "content": "safeEval(v),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 546,
          "content": "self.NewState = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 548,
          "content": "self.Verb = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 550,
          "content": "self.ReservedFlags = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 609,
          "content": "self.NewState = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 614,
          "content": "self.ReservedFlags = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 616,
          "content": "self.MarkIndex = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 618,
          "content": "self.CurrentIndex = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 747,
          "content": "self.NewState = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 752,
          "content": "self.ReservedFlags = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 758,
          "content": "action.GlyphIndexDelta = safeEval(eltAttrs[\"GlyphIndexDelta\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 869,
          "content": "self.NewState = safeEval(eltAttrs[\"value\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1097,
          "content": "index = safeEval(attrs[\"index\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1098,
          "content": "outer = safeEval(attrs.get(\"outer\", \"0xFFFF\"))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1099,
          "content": "inner = safeEval(attrs.get(\"inner\", \"0xFFFF\"))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1153,
          "content": "outer = safeEval(attrs[\"outer\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1154,
          "content": "inner = safeEval(attrs[\"inner\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1725,
          "content": "if conv.aux and not eval(conv.aux, None, vars(self)):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1908,
          "content": "clipBox.Format = safeEval(attrs[\"Format\"])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 306,
          "content": "layout = eval(layout, dict(NVMMASharedLayout=NVMMASharedLayout))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "exec(code, clean_globals)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1328,
          "content": "return self._compile_and_exec(transformed_ast)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1358,
          "content": "def _compile_and_exec(self, transformed_ast):",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1365,
          "content": "exec(compiled_code, fn_globals, local_namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 458,
          "content": "exec(func_body, func_namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 429,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 160,
          "content": "exec(s, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 227,
          "content": "x = pre_func_eval(work)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 250,
          "content": "post_func_eval(x, f, work)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 166,
          "content": "exec(code, evaldict)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 80,
          "content": "ascent = array(pickle.load(f))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 440,
          "content": "def pre_func_eval(work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 486,
          "content": "def post_func_eval(x, f, work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 400,
          "content": "def pre_func_eval(work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 414,
          "content": "def post_func_eval(x, fj, work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 16,
          "content": "def prepare_input(x, y, axis, dydx=None):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 144,
          "content": "x, dx, y, axis, dydx = prepare_input(x, y, axis, dydx)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 240,
          "content": "x, _, y, axis, _ = prepare_input(x, y, axis)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 497,
          "content": "x, dx, y, axis, _ = prepare_input(x, y, axis)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 737,
          "content": "x, dx, y, axis, _ = prepare_input(x, y, axis)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 238,
          "content": "x, y, w, bbox, self.ext = self.validate_input(x, y, w, bbox, k, s, ext,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 252,
          "content": "def validate_input(x, y, w, bbox, k, s, ext, check_finite):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 753,
          "content": "x, y, w, bbox, self.ext = self.validate_input(x, y, w, bbox, k, None,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 901,
          "content": "x, y, w, bbox, self.ext = self.validate_input(x, y, w, bbox, k, None,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1309,
          "content": "def _validate_input(x, y, z, w, kx, ky, eps):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1428,
          "content": "x, y, z, w = self._validate_input(x, y, z, w, kx, ky, eps)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1512,
          "content": "x, y, z, w = self._validate_input(x, y, z, w, kx, ky, eps)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1232,
          "content": "(input+s)(x) = min {input(y) - s(x-y), for y in E}",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1350,
          "content": "(input+s)(x) = max {input(y) + s(x-y), for y in E}",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 242,
          "content": "def pre_func_eval(work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 260,
          "content": "def post_func_eval(x, f, work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 648,
          "content": "def pre_func_eval(work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 664,
          "content": "def post_func_eval(x, f, work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "def pre_func_eval(work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 159,
          "content": "def post_func_eval(x, f, work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 427,
          "content": "def pre_func_eval(work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 464,
          "content": "def post_func_eval(x, f, work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1621,
          "content": "exec(wrapper, ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 323,
          "content": "def eval(x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4155,
          "content": "__import__(mod_name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 343,
          "content": ">>> filtered = cspline1d_eval(cspline1d(sig), time)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 397,
          "content": ">>> filtered = qspline1d_eval(qspline1d(sig), time)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 527,
          "content": "def cspline1d_eval(cj, newx, dx=1.0, x0=0):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 570,
          "content": ">>> filtered = cspline1d_eval(cspline1d(sig), time)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 593,
          "content": "res[cond1] = cspline1d_eval(cj, -newx[cond1])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 594,
          "content": "res[cond2] = cspline1d_eval(cj, 2 * (N - 1) - newx[cond2])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 608,
          "content": "def qspline1d_eval(cj, newx, dx=1.0, x0=0):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 653,
          "content": ">>> filtered = qspline1d_eval(qspline1d(sig), time)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 676,
          "content": "res[cond1] = qspline1d_eval(cj, -newx[cond1])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 677,
          "content": "res[cond2] = qspline1d_eval(cj, 2 * (N - 1) - newx[cond2])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 60,
          "content": "\"\"\"Same as `upcast` but taking dtype.char as input (faster).\"\"\"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 266,
          "content": "Based on input (integer) arrays `a`, determine a suitable index data",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 191,
          "content": "def _validate_cdist_input(XA, XB, mA, mB, n, metric_info, **kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 260,
          "content": "def _validate_pdist_input(X, m, n, metric_info, **kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1755,
          "content": "XA, XB, typ, kwargs = _validate_cdist_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1780,
          "content": "X, typ, kwargs = _validate_pdist_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2328,
          "content": "X, typ, kwargs = _validate_pdist_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2343,
          "content": "X, typ, kwargs = _validate_pdist_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3126,
          "content": "XA, XB, typ, kwargs = _validate_cdist_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3139,
          "content": "XA, XB, typ, kwargs = _validate_cdist_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 682,
          "content": "# Reshape to have output (`result`) match input (`values`) shape",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 325,
          "content": "def pre_func_eval(work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 329,
          "content": "def post_func_eval(n, ab, work):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 368,
          "content": "exec('del ' + obj)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 744,
          "content": "exec(self._parse_arg_template, ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3450,
          "content": "def sk1_eval(c, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3462,
          "content": "def ku1_eval(c, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1482,
          "content": "def _dirichlet_check_input(alpha, x):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1697,
          "content": "x = _dirichlet_check_input(alpha, x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1718,
          "content": "x = _dirichlet_check_input(alpha, x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 393,
          "content": "def _validate_qmc_input(qmc_engine, d, seed):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 898,
          "content": "qmc_engine, d = _validate_qmc_input(qmc_engine, d, self.random_state)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 80,
          "content": "def n_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 560,
          "content": "def n_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 886,
          "content": "x_best, fun_best, _ = self.best_eval(penalty)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 947,
          "content": "def n_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1192,
          "content": "def best_eval(self, penalty):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 650,
          "content": "fun_val, cub_val, ceq_val = _eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 697,
          "content": "fun_val, cub_val, ceq_val = _eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 840,
          "content": "fun_val, cub_val, ceq_val = _eval(pb, framework, step, options)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1422,
          "content": "def _eval(pb, framework, step, options):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1446,
          "content": "x, fun, maxcv = pb.best_eval(penalty)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 59,
          "content": "obj = pickle.loads(s)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 10,
          "content": "__import__(__package__ + '.linalg')",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11,
          "content": "__import__(__package__ + '.fft')",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 22,
          "content": "__import__(__package__ + \".linalg\")",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 24,
          "content": "__import__(__package__ + \".fft\")",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6,
          "content": "exec('from cupy.fft import *', _n)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6,
          "content": "exec('from cupy.linalg import *', _n)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 12,
          "content": "exec(f\"{n} = torch.{n}\")",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 19,
          "content": "__import__(__package__ + '.linalg')",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 20,
          "content": "__import__(__package__ + '.fft')",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11,
          "content": "__import__(__package__ + '.linalg')",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 12,
          "content": "__import__(__package__ + '.fft')",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 22,
          "content": "exec('from dask.array.linalg import *', _n)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6,
          "content": "exec('from dask.array.fft import *', _n)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 461,
          "content": "pickle.loads : Standard unpickle function.",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 501,
          "content": "def test_real_input(func, dtype, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 310,
          "content": "def test_complex_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 375,
          "content": "def test_complex_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 322,
          "content": "def test_complex_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 847,
          "content": "def test_complex_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 143,
          "content": "def test_num_eval(quadrature):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 460,
          "content": "def test_flexible_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 493,
          "content": "def test_spalde_scalar_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 678,
          "content": "def test_t_eval():",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 54,
          "content": "def test_tri_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 172,
          "content": "ip2 = pickle.loads(pickle.dumps(ip))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 339,
          "content": "def test_tri_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 411,
          "content": "ip2 = pickle.loads(pickle.dumps(ip))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 68,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 359,
          "content": "def test_array_like_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 481,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 497,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 541,
          "content": "def test_array_like_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 651,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 695,
          "content": "def test_array_like_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 734,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 738,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 822,
          "content": "def test_array_like_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 861,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 865,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 915,
          "content": "def test_array_like_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1045,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1094,
          "content": "def test_array_like_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1106,
          "content": "def test_not_increasing_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1197,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1323,
          "content": "def test_array_like_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 264,
          "content": "def test_broadcastable_input(self, interpolator):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 123,
          "content": "def test_rndm_naive_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 131,
          "content": "y_n = [_naive_eval(x, t, c, k) for x in xx]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 862,
          "content": "def _naive_eval(x, t, c, k):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1322,
          "content": "b1 = np.vectorize(lambda x: _naive_eval(x, t, c, k))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1479,
          "content": "def test_sliced_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1499,
          "content": "def test_list_input(self, k):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1816,
          "content": "def test_sliced_input(self, method):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2086,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3240,
          "content": "def test_list_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 480,
          "content": "def test_int_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 788,
          "content": "def test_periodic_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 418,
          "content": "yitp2 = pickle.loads(pickle.dumps(interp))(xitp)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 837,
          "content": "def test_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1379,
          "content": "def test_derivative_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2262,
          "content": "v2 = _ppoly2d_eval(c, (x, y), xi, yi)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2268,
          "content": "v2 = _ppoly2d_eval(c, (x, y), xi, yi, nu=nu)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2288,
          "content": "v2 = _ppoly3d_eval(c, (x, y, z), xi, yi, zi, nu=nu)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2308,
          "content": "v2 = _ppoly4d_eval(c, (x, y, z, u), xi, yi, zi, ui)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2512,
          "content": "def _ppoly2d_eval(c, xs, xnew, ynew, nu=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2548,
          "content": "def _ppoly3d_eval(c, xs, xnew, ynew, znew, nu=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2588,
          "content": "def _ppoly4d_eval(c, xs, xnew, ynew, znew, unew, nu=None):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 74,
          "content": "def test_list_input(self, method):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 767,
          "content": "def test_list_input(self, method):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1011,
          "content": "def test_matrix_input(self, method):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 187,
          "content": "def input(self, s):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 240,
          "content": "self.tokenizer.t.input(s)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 19,
          "content": "def test_bandwidth_non2d_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 77,
          "content": "def test_issymmetric_ishermitian_invalid_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1191,
          "content": "def test_sample_compatible_dtype_input(self, typ):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1196,
          "content": "def test_incompatible_dtype_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 412,
          "content": "def test_nd_input(self, include_B, left, right, homogeneous_eigvals, dtype):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1573,
          "content": "def test_integer_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 772,
          "content": "def test_small_empty_matrix_input(self, func, dt, shape):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 782,
          "content": "def test_2x2_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 791,
          "content": "def test_nx2x2_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 708,
          "content": "def test_correlate_complex_input(self, dtype_input, dtype_kernel,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 725,
          "content": "def test_correlate1d_complex_input(self, dtype_input, dtype_kernel,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 576,
          "content": "pickle.loads(obj_pickle)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 585,
          "content": "pickle.loads(obj_pickle)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 589,
          "content": "pickle.loads(obj_pickle)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 598,
          "content": "pickle.loads(obj_pickle)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 607,
          "content": "pickle.loads(obj_pickle)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 260,
          "content": "def test_best_solution_retrieval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 183,
          "content": "bounds2 = eval(repr(Bounds(*args)))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 440,
          "content": "def test_2D_singleton_RHS_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 131,
          "content": "def test_empty_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 138,
          "content": "def test_0_rank_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 157,
          "content": "def test_cspline1d_eval(self, xp):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 158,
          "content": "r = signal.cspline1d_eval(xp.asarray([0., 0], dtype=xp.float64),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 162,
          "content": "r = signal.cspline1d_eval(xp.asarray([1., 0, 1], dtype=xp.float64),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 182,
          "content": "signal.cspline1d_eval(cj, xp.asarray(newx), dx=dx, x0=x[0]), newy",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 187,
          "content": "signal.cspline1d_eval(xp.asarray([], dtype=xp.float64),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 191,
          "content": "def test_qspline1d_eval(self, xp):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 192,
          "content": "xp_assert_close(signal.qspline1d_eval(xp.asarray([0., 0]), xp.asarray([0.])),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 195,
          "content": "xp_assert_equal(signal.qspline1d_eval(xp.asarray([1., 0, 1]), xp.asarray([])),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 214,
          "content": "r = signal.qspline1d_eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "signal.qspline1d_eval(xp.asarray([], dtype=xp.float64),",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 679,
          "content": "def test_complex_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 407,
          "content": "def test_symiir1_integer_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 419,
          "content": "def test_symiir2_integer_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 55,
          "content": "def test_trivial_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 91,
          "content": "def test_real_integer_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 125,
          "content": "def test_trivial_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 173,
          "content": "def test_real_integer_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1969,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2098,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2225,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2364,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4217,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4658,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 257,
          "content": "def test_convolve_method_large_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1204,
          "content": "def test_longdtype_input(self, dtype, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1716,
          "content": "y2 = signal.cspline1d_eval(cj, x2, dx=dx, x0=x[0])",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1734,
          "content": "ynew = signal.cspline1d_eval(cy, xnew)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2308,
          "content": "def test_scalar_input(self, a, b, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2383,
          "content": "def test_lfilter_notimplemented_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2837,
          "content": "def test_complex_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 127,
          "content": "def test_valid_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 311,
          "content": "def test_output_len_long_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 155,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 398,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 779,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 941,
          "content": "def test_identical_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 952,
          "content": "def test_phase_shifted_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1386,
          "content": "def test_list_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 395,
          "content": "# no exception if sparse arrays are not input (spmatrix inferred)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 435,
          "content": "# no exception if sparse arrays are not input (spmatrix inferred)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2255,
          "content": "sploaded = pickle.loads(pickle.dumps(datsp, protocol=protocol))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13,
          "content": "def test_raises_on_dense_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 20,
          "content": "def test_raises_on_csc_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 27,
          "content": "def test_raises_on_floating_point_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 34,
          "content": "def test_raises_on_non_square_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 44,
          "content": "mat = eval(mat, dict(np=np, sparse=sparse))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 300,
          "content": "d[L] = eval(L)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 302,
          "content": "d[L] = eval(L)(np.eye(n, dtype=mat.dtype))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 387,
          "content": "def test_masked_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 13,
          "content": "def test_maximum_bipartite_matching_raises_on_dense_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 397,
          "content": "B = pickle.loads(s)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 535,
          "content": "def test_matrix_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "# appropriate for singular input (which yields the warning)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 374,
          "content": "def test_gssv_badinput(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 445,
          "content": "cdist(X1, X2, metric=eval(metric), **kwargs)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 452,
          "content": "cdist(X1, X2, metric=eval(metric), *args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 559,
          "content": "y2 = cdist(X1, X2, metric=eval(metric), **kwargs)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 569,
          "content": "cdist(X1, X2, metric=eval(metric), **kwargs)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 754,
          "content": "pdist(X1, metric=eval(metric), **kwargs)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 761,
          "content": "pdist(X1, metric=eval(metric), *args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1393,
          "content": "y2 = pdist(X, metric=eval(metric), **kwargs)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1403,
          "content": "pdist(X, metric=eval(metric), **kwargs)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2082,
          "content": "def test_modifies_input(metric):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2136,
          "content": "for m in [metric, eval(metric), \"test_\" + metric]:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2225,
          "content": "def test_immutable_input(metric):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2316,
          "content": "def test_non_01_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 364,
          "content": "def test_degenerate_input(self, start, t):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 855,
          "content": "T2 = pickle.loads(tmp)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 869,
          "content": "T2 = pickle.loads(tmp)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1335,
          "content": "def test_kdtree_empty_input(kdtree_type, balanced_tree, compact_nodes):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 268,
          "content": "def test_incremental_volume_area_random_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1264,
          "content": "def test_2d_add_halfspace_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1276,
          "content": "def test_1d_add_halfspace_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 251,
          "content": "def test_as_matrix_from_square_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 279,
          "content": "def test_as_matrix_from_generic_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 535,
          "content": "def test_as_rotvec_single_1d_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 545,
          "content": "def test_as_rotvec_single_2d_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 660,
          "content": "def test_as_mrp_single_1d_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 670,
          "content": "def test_as_mrp_single_2d_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1601,
          "content": "def test_align_vectors_invalid_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2118,
          "content": "unpickled = pickle.loads(pkl)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2229,
          "content": "def test_from_davenport_invalid_input(xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 183,
          "content": "def eval(cls, n, rho, v):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 203,
          "content": "def eval(cls, m, rho, beta):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 171,
          "content": "def test_xp_invalid_input(self, arg):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 280,
          "content": "p = eval(pstr)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 194,
          "content": "roundtrip = pickle.loads(pickle.dumps(func))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 150,
          "content": "def _nolan_round_difficult_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 188,
          "content": "x0, alpha, beta = _nolan_round_difficult_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 316,
          "content": "x0, alpha, beta = _nolan_round_difficult_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 303,
          "content": "unpickled = pickle.loads(s)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 316,
          "content": "unpickled = pickle.loads(pkl)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 326,
          "content": "unpickled_fit_function = pickle.loads(pickled_fit_function)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "def test_feval(self, xp):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 764,
          "content": "unpickled_hypotest = pickle.loads(pickled_hypotest)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1373,
          "content": "def test_array_like_input(dtype):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 570,
          "content": "def test__pmf_float_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 89,
          "content": "ref = eval(f'(a {left_comparison} x) & (x {right_comparison} b)')",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 974,
          "content": "dist3 = pickle.loads(pickle.dumps(dist1))",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2047,
          "content": "new_dist = eval(repr(dist))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 371,
          "content": "def test_kde_integer_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 136,
          "content": "def test_invalid_input(self, x):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1337,
          "content": "def test_too_small_input(self, args):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1343,
          "content": "def test_invalid_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1349,
          "content": "def test_list_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1410,
          "content": "def test_same_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 801,
          "content": "def test_mode_modifies_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1123,
          "content": "def test_maskedarray_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1132,
          "content": "def test_nd_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4080,
          "content": "def test_bad_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5399,
          "content": "def test_entropy_array_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6876,
          "content": "unpickled = pickle.loads(s)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9241,
          "content": "def test_infinite_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 92,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 120,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 209,
          "content": "def test_nan_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 855,
          "content": "def test_1d_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1820,
          "content": "def test_empty_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1829,
          "content": "def test_nan_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1863,
          "content": "def test_empty_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1873,
          "content": "def test_nan_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2019,
          "content": "def test_2d_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2020,
          "content": "# Note: boxcox_llf() was already working with 2-D input (sort of), so",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2448,
          "content": "def test_2d_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2591,
          "content": "def test_nonfinite_input(self, x):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2818,
          "content": "def test_circmean_accuracy_tiny_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2839,
          "content": "def test_circmean_accuracy_huge_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3131,
          "content": "def test_directional_stats_list_ndarray_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1231,
          "content": "def test_bad_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1368,
          "content": "def test_array_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3723,
          "content": "unpickled = pickle.loads(s)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3820,
          "content": "def test_unnormalized_input(self, method):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 258,
          "content": "rng2 = pickle.loads(obj)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "exec(custom_rearrange_callable_code)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 434,
          "content": "def test_constant_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 446,
          "content": "def test_near_constant_input(self, xp, dtype):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 449,
          "content": "# Near constant input (but not constant):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 529,
          "content": "def test_length_two_constant_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2379,
          "content": "def test_empty_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2384,
          "content": "def test_nan_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2962,
          "content": "def test_degenerate_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3117,
          "content": "def test_zscore_empty_input(self, x, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3696,
          "content": "# `skew` must return a scalar for 1-dim input (only for NumPy arrays)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7277,
          "content": "def test_1d_numeric_array_like_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7282,
          "content": "def test_raises_error_non_numeric_input(self, xp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7852,
          "content": "def test_constant_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7972,
          "content": "def test_constant_input(self, a, b, expected):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3262,
          "content": "def rnn_tanh_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3293,
          "content": "def rnn_relu_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4361,
          "content": "lambda: f\"size mismatch, got input ({self.size(0)}x{self.size(1)}), vec ({vec.size(0)})\",",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 261,
          "content": "except (FileNotFoundError, subprocess.CalledProcessError):",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 141,
          "content": "return pickle.loads(self.content)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 331,
          "content": "guards_state = pickle.loads(guarded_code.guards_state)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 357,
          "content": "return pickle.loads(self.content)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 405,
          "content": "cache_entry = pickle.load(dynamo_path)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 407,
          "content": "backend_content = pickle.load(backend_path)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 715,
          "content": "_CODE_STATE = pickle.loads(content)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 753,
          "content": "_CODE_STATE = pickle.loads(payload)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 40,
          "content": "result = pickle.loads(self.content)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1343,
          "content": "exec(pycode, globals_for_guard_fn, out)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1364,
          "content": "return eval(name, self.scope, closure_vars)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1915,
          "content": "def DUPLICATE_INPUT(self, guard, source_b):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3349,
          "content": "tensor_id = id(eval(tensor_source, global_scope, scope))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3420,
          "content": "fail_reason = eval(part, global_scope, scope)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3567,
          "content": "eval(guard, guard_manager.global_scope, local_scope)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 599,
          "content": "self.backward_state_proxy = self.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 684,
          "content": "def synthetic_graph_input(self, fn, args):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2431,
          "content": "maybe_new_arg = self.maybe_lift_tracked_freevar_to_input(arg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2609,
          "content": "def create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2719,
          "content": "def lift_tracked_freevar_to_input(self, proxy):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2750,
          "content": "self.parent.lift_tracked_freevar_to_input(proxy)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2753,
          "content": "new_proxy = self.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2759,
          "content": "def maybe_lift_tracked_freevar_to_input(self, arg):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2773,
          "content": "self.maybe_lift_tracked_freevar_to_input(sub_arg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2781,
          "content": "return self.lift_tracked_freevar_to_input(arg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2917,
          "content": "ph = self.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2943,
          "content": "ph = self.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 146,
          "content": "exec(code, {\"__name__\": \"__main__\", \"__compile_source__\": code})",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1626,
          "content": "value = __import__(",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 323,
          "content": "def extract_input(node: torch.fx.Node) -> Optional[FakeTensor]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 349,
          "content": "extract_input(node)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 252,
          "content": "irv_parent_name, irv_name = node.input().debugName(), node.output().debugName()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 286,
          "content": "# Reference map stores the input (i.e., src) and output (i.e., dest) IR of a",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 357,
          "content": "input_name = node.input().debugName()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 762,
          "content": "input_type = node.input().type()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 876,
          "content": "inp = self.get_fx_value_by_ir_value(node.input())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1585,
          "content": "input_name = node.input().debugName()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2042,
          "content": "def clone_input(x, *, dtype=None):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2054,
          "content": "y.grad = clone_input(x.grad, dtype=dtype)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2105,
          "content": "result.grad = clone_input(x.grad, dtype=dtype)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2125,
          "content": "res[key] = clone_input(value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2131,
          "content": "res[i] = clone_input(res[i])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2314,
          "content": "fn = eval(f\"lambda {','.join(vars)}: ({','.join(rotated)})\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 301,
          "content": "input(s) specified by ``argnums``. This operator can be nested to",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 94,
          "content": "f = torch.jit.freeze(f.eval())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 193,
          "content": "f = torch.jit.freeze(f.eval())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 313,
          "content": "inputs_meta = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 219,
          "content": "# Instead, we return the updated version of the input (a view), and mutate the input's metadata outside of the graph",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 344,
          "content": "# # That means the forward() only has 1 input (base),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 378,
          "content": "# is at the front, convert it into an input (because it can be live",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 145,
          "content": "def _validate_input(cfn, lxs, d, r, cm):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 183,
          "content": "_validate_input(combine_fn, leaves_xs_orig, dim, reverse, combine_mode)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 364,
          "content": "clone_input(x) if isinstance(x, torch.Tensor) else x",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 155,
          "content": "def _validate_input(pred, true_fn, false_fn, operands):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 175,
          "content": "_validate_input(pred, true_fn, false_fn, operands)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 146,
          "content": "def _validate_input(cond_fn, body_fn, carried_inputs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 162,
          "content": "_validate_input(cond_fn, body_fn, carried_inputs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 186,
          "content": "def _validate_input(cfn, lxs, linit, d, r):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 218,
          "content": "_validate_input(combine_fn, leaves_xs_orig, leaves_init, dim, reverse)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 367,
          "content": "sample_inits = [clone_input(x_init) for x_init in init]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 370,
          "content": "clone_input(x) if isinstance(x, torch.Tensor) else x",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1033,
          "content": "exec(code, namespace)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "return pickle.load(read_pipe)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 210,
          "content": "return _WireProtocolPickledInput(GraphPickler.dumps(self))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 472,
          "content": "input = _WireProtocolInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 647,
          "content": "#         input = compile_fx._WireProtocolPickledInput(f.read())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1660,
          "content": "def static_input(x: torch.Tensor) -> torch.Tensor:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1704,
          "content": "else static_input(x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 288,
          "content": "config_data[key] = eval(value)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1024,
          "content": "yield pickle.loads(content), content",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1038,
          "content": "yield pickle.loads(content), content",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2426,
          "content": "\"is mounted with noexec (e.g., by default Docker mounts tmp file systems \"",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3808,
          "content": "except subprocess.CalledProcessError as error:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3968,
          "content": "except subprocess.CalledProcessError as error:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 382,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1699,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 861,
          "content": "args, kwargs = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 37,
          "content": "def construct_input(inp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 43,
          "content": "inps = [construct_input(arg) for arg in args]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1682,
          "content": "recording_inputs.append(static_input(inp))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 710,
          "content": "state = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 874,
          "content": "def add_symbol_graph_input(self, symbol: sympy.Expr) -> None:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1367,
          "content": "result = [ir.ExternKernel.realize_input(x) for x in result]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1377,
          "content": "result_correct_strides.append(ir.ExternKernel.copy_input(r))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 143,
          "content": "b = [bias if bias is None else ir.ExternKernel.realize_input(bias) for bias in b]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 342,
          "content": "b = ir.ExternKernel.realize_input(b)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 405,
          "content": "b = ir.ExternKernel.realize_input(b)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 725,
          "content": "ir.InputsKernel.unwrap_storage_for_input(w_zp),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 745,
          "content": "ir.InputsKernel.unwrap_storage_for_input(w_zp),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 933,
          "content": "ir.InputsKernel.unwrap_storage_for_input(x_scale),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 939,
          "content": "ir.InputsKernel.unwrap_storage_for_input(x_zp),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1029,
          "content": "ir.InputsKernel.unwrap_storage_for_input(w_zp),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1062,
          "content": "ir.InputsKernel.unwrap_storage_for_input(x_zp),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1067,
          "content": "ir.InputsKernel.unwrap_storage_for_input(w_zp),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 822,
          "content": "x = cls.require_stride1(cls.realize_input(x))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 823,
          "content": "orig_w = cls.require_stride1(cls.realize_input(orig_w))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 866,
          "content": "x = cls.require_contiguous(cls.realize_input(x))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 867,
          "content": "w = cls.require_contiguous(cls.realize_input(w))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 875,
          "content": "B = cls.require_contiguous(cls.realize_input(B))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 919,
          "content": "x = cls.require_contiguous(cls.realize_input(x))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 920,
          "content": "y = cls.require_contiguous(cls.realize_input(y))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 921,
          "content": "w = cls.require_contiguous(cls.realize_input(w))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 929,
          "content": "B = cls.require_contiguous(cls.realize_input(B))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1185,
          "content": "x = cls.require_stride1(cls.realize_input(x))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1189,
          "content": "w0 = cls.require_stride1(cls.realize_input(w0))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1190,
          "content": "w1 = cls.require_stride1(cls.realize_input(w1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1191,
          "content": "w2 = cls.require_stride1(cls.realize_input(w2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1192,
          "content": "w3 = cls.require_stride1(cls.realize_input(w3))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1193,
          "content": "hx = cls.require_stride1(cls.realize_input(hx))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1195,
          "content": "cx = cls.require_stride1(cls.realize_input(cx))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 785,
          "content": "exec(code.getvalue(), ctx)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 268,
          "content": "def construct_input(inp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 276,
          "content": "inps = [construct_input(arg) for arg in args]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1617,
          "content": "def should_lower_cat_input(x) -> bool:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1625,
          "content": "return should_lower_cat_input(unwrap_tensor(x))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1675,
          "content": "any(should_lower_cat_input(inp) for inp in inputs) and pointwise_uses",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1681,
          "content": "should_lower_cat_input(inp) for inp in inputs",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2542,
          "content": "ir.ExternKernel.realize_input(arg), meta_stride_expr",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2551,
          "content": "ir.ExternKernel.realize_input(arg), meta_stride_expr",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2594,
          "content": "ir.ExternKernel.realize_input(arg), meta_stride_expr",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2603,
          "content": "ir.ExternKernel.realize_input(arg), meta_stride_expr",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2613,
          "content": "ir.ExternKernel.realize_input(arg), meta_stride_expr",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4883,
          "content": "def unwrap_storage_for_input(cls, x: IRNode) -> IRNode:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4889,
          "content": "x = ExternKernel.realize_input(x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4895,
          "content": "return cls.unwrap_storage_for_input(x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4906,
          "content": "x = [InputsKernel.unwrap_storage_for_input(i) for i in x]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4908,
          "content": "x = InputsKernel.unwrap_storage_for_input(x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5254,
          "content": "def copy_input(x):  # type: ignore[no-untyped-def]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5307,
          "content": "tensor_args = [cls.realize_input(x) for x in tensor_args]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5456,
          "content": "def realize_input(cls, x):  # type: ignore[no-untyped-def]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5468,
          "content": "return cls.realize_input(x.data)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5471,
          "content": "data=cls.realize_input(x.data), layout=x.get_layout()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5486,
          "content": "return cls.copy_input(x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5496,
          "content": "return cls.copy_input(x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5635,
          "content": "x = cls.copy_input(x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6369,
          "content": "t = InputsKernel.unwrap_storage_for_input(self.realize_input(v))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6501,
          "content": "inputs = [cls.realize_input(t) for t in [dst, src]]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6631,
          "content": "tensors = [self.realize_input(t) for t in [x, index, src]]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6634,
          "content": "tensors = [self.realize_input(t) for t in [x, index]]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6683,
          "content": "tensors = [self.realize_input(x) for x in [x, values, *valid_indices]]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6720,
          "content": "[cls.realize_input(x)],",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7704,
          "content": "operands = [cls.realize_input(x) for x in operands]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7813,
          "content": "predicate = cls.realize_input(predicate)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7814,
          "content": "operands = [cls.realize_input(x) for x in operands]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7989,
          "content": "carried_inputs = [cls.realize_input(x) for x in carried_inputs]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7991,
          "content": "additional_inputs = [cls.realize_input(x) for x in additional_inputs]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 111,
          "content": "graph = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 241,
          "content": "var = self._add_kernel_input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 275,
          "content": "buf_name = self._add_kernel_input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 281,
          "content": "def _add_kernel_input(self, name: str):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 283,
          "content": "return self.kernel.args.input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 582,
          "content": "self.args.input(input_node.get_name())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 618,
          "content": "self.args.input(input_node.get_name())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 750,
          "content": "def load_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1839,
          "content": "tile_vals = eval(tile)  # type: ignore[arg-type]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2972,
          "content": "tile_vals = eval(tile)  # type: ignore[arg-type]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3146,
          "content": "return ir.ExternKernel.require_stride1(ir.ExternKernel.realize_input(args[0]))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 382,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 161,
          "content": "def eval(cls, value: sympy.Expr) -> Optional[sympy.Expr]:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 629,
          "content": "exec(",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 73,
          "content": "return eval(annotation_type, pf_globals, pf_locals)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 53,
          "content": "r = clone_input(r, dtype=dtype)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 91,
          "content": "def _resize_fft_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 135,
          "content": "input = _resize_fft_input(input, dims=dims, sizes=(last_dim_size // 2 + 1,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 166,
          "content": "input = _resize_fft_input(input, dims, (n,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 193,
          "content": "input = _resize_fft_input(input, dims, (n,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 354,
          "content": "x = _resize_fft_input(input, dim, shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 399,
          "content": "input = _resize_fft_input(input, dim, shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 419,
          "content": "input = _resize_fft_input(input, dim, shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 478,
          "content": "input = _resize_fft_input(input, dim, shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 495,
          "content": "input = _resize_fft_input(input, dim, shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6695,
          "content": "# given that it does not reshape the input (it just copies the result into it)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 142,
          "content": "model = Net().eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 160,
          "content": "model = TestModel(input_size, num_classes).eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 300,
          "content": "get_numerical_jacobian_wrt_specific_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 388,
          "content": "def _compute_numerical_jvps_wrt_specific_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 429,
          "content": "def _prepare_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 469,
          "content": "def get_numerical_jacobian_wrt_specific_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 489,
          "content": "jacobian_cols[d_idx] = _compute_numerical_jvps_wrt_specific_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 623,
          "content": "_prepare_input(a, input_to_perturb if i == input_idx else None, fast_mode)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 661,
          "content": "def _get_numerical_jvp_wrt_specific_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 671,
          "content": "return _compute_numerical_jvps_wrt_specific_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 682,
          "content": "all_Ju = _get_numerical_jvp_wrt_specific_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 994,
          "content": "jvps = _get_numerical_jvp_wrt_specific_input(func, inp_idx, all_inputs, u, eps)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1422,
          "content": "def _real_and_imag_input(fn, complex_inp_indices, tupled_inputs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1514,
          "content": "real_fn, imag_fn = _real_and_imag_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 706,
          "content": "data = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 257,
          "content": "allow_unused_input (bool): If False, specifying inputs that were not used when computing outputs",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 862,
          "content": "previous = torch._C._distributed_c10d._allow_inflight_collective_as_graph_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 865,
          "content": "torch._C._distributed_c10d._set_allow_inflight_collective_as_graph_input(value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 868,
          "content": "torch._C._distributed_c10d._set_allow_inflight_collective_as_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4368,
          "content": "input (Tensor): Input tensor to be reduced and scattered. Its size",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4472,
          "content": "input (Tensor): Input tensor that is of size output tensor size times world size",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4508,
          "content": "input (Tensor): Input tensor to scatter.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 358,
          "content": "eval(path, {\"L\": {\"self\": Path()}})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 53,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 100,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 150,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 203,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 263,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 315,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 371,
          "content": "input (Tensor): the real input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 442,
          "content": "input (Tensor): the input tensor representing a half-Hermitian signal",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 506,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 587,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 655,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 735,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 825,
          "content": "input (Tensor): the input tensor representing a half-Hermitian signal",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 894,
          "content": "input (Tensor): the real input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 950,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1017,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1108,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1180,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1355,
          "content": "input (Tensor): the tensor in FFT order",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1422,
          "content": "input (Tensor): the tensor in FFT order",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1410,
          "content": "def _eval(self, mode: bool = True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1411,
          "content": "raise NotImplementedError(\"Calling eval() is not supported yet.\")",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1066,
          "content": "self.parent.remap_input(self.seen_nodes[input.name])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1120,
          "content": "def remap_input(self, x):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1124,
          "content": "self.print(f\"remap_input({x})\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1136,
          "content": "self.parent_call_module.insert_arg(0, self.parent.remap_input(x))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1160,
          "content": "f\"Could not run remap_input() on op type: {x.op} for node {x}\"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1475,
          "content": "return mf.remap_input(node.args[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 822,
          "content": "old_input (Node): The old input node to be replaced.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 823,
          "content": "new_input (Node): The new input node to replace ``old_input``.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 93,
          "content": "return eval(ts_type.annotation_str, _type_eval_globals)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 95,
          "content": "exec(compile(src, key, \"exec\"), globals)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 56,
          "content": "scripted_module = torch.jit.script(MyModule(2, 3).eval())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 77,
          "content": "scripted_module = torch.jit.script(MyModule2().eval())",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 112,
          "content": "\"Please call .eval() on your module before freezing.\"",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 166,
          "content": "frozen_mod = torch.jit.freeze(torch.jit.script(mod.eval()), optimize=False)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 215,
          "content": "frozen_mod = torch.jit.optimize_for_inference(torch.jit.script(mod.eval()))",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 230,
          "content": "mod = freeze(mod.eval(), preserved_attrs=other_methods)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 784,
          "content": "def conv_transpose2d_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1349,
          "content": "\"aten::conv_transpose2d.input(Tensor input, Tensor weight, Tensor? bias=None, int[2] stride=1, int[2] padding=0, int[2] output_padding=0, int groups=1, int[2] dilation=1) -> Tensor\",",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 593,
          "content": "exec(ignore_func_str, g)  # noqa: P204",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9,
          "content": "exec(code, glob, loc)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 209,
          "content": "return eval(bytecode, glob, loc)  # type: ignore[arg-type] # noqa: P204",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 155,
          "content": "def clone_input(a):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 166,
          "content": "v.grad = clone_input(v.grad)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 499,
          "content": "\"Did you forget call .eval() on your model? Nodes:\\n\"",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 51,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 121,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 188,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 253,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 310,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 367,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 424,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 490,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 563,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 633,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 701,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 762,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 831,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 890,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 947,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1012,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1081,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1148,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 35,
          "content": "input (Tensor): the first input tensor.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 150,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1514,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 21,
          "content": "return pickle.loads(buf)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 212,
          "content": "original_trace = pickle.load(fh)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8,
          "content": "def conv1d_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 38,
          "content": ">>> F.grad.conv1d_input(input.shape, weight, grad_output)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 106,
          "content": "def conv2d_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 136,
          "content": ">>> F.grad.conv2d_input(input.shape, weight, grad_output)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 204,
          "content": "def conv3d_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 234,
          "content": ">>> F.grad.conv3d_input(input.shape, weight, grad_output)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 511,
          "content": "def to_slice_input(list_or_value, default_value=None):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 543,
          "content": "axes = to_slice_input(axes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 544,
          "content": "starts = to_slice_input(starts, default_value=0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 545,
          "content": "ends = to_slice_input(ends, default_value=_constants.INT64_MAX)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 548,
          "content": "steps = to_slice_input(steps, default_value=1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1730,
          "content": "input (Tensor): input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2080,
          "content": "input (Tensor): input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2118,
          "content": "input (Tensor): input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2232,
          "content": "input (Tensor): input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2460,
          "content": "input (LongTensor): Tensor containing indices into the embedding matrix",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2571,
          "content": "input (LongTensor): Tensor containing bags of indices into the embedding matrix",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2671,
          "content": "f\"then it must have the same shape as the input ({input.shape})\"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2986,
          "content": "f\"Expected 3D or higher dimensionality                          input (got {dim} dimensions)\"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3228,
          "content": "in the input (heteroscedastic), or a single one (homoscedastic),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3394,
          "content": "input (Tensor) : Predicted unnormalized logits;",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3618,
          "content": "input (Tensor): Predicted values.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3684,
          "content": "input (Tensor): Predicted values.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3761,
          "content": "input (Tensor): Predicted values.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3832,
          "content": "input (Tensor): Predicted values.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3958,
          "content": "input (Tensor): Predicted values.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4001,
          "content": "input (Tensor): Predicted values.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4042,
          "content": "input (Tensor): Predicted values.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4084,
          "content": "input (Tensor): Predicted values.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4193,
          "content": "input (Tensor): Predicted values.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4247,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4271,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4295,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4340,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4424,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4560,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4845,
          "content": "input (Tensor): input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4914,
          "content": "input (Tensor): input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5007,
          "content": "input (Tensor): input of shape :math:`(N, C, H_\\text{in}, W_\\text{in})` (4-D case)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5251,
          "content": "input (Tensor): N-dimensional tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1707,
          "content": "def _maybe_cast_reduce_op_input(g: jit_utils.GraphContext, self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1730,
          "content": "self = _maybe_cast_reduce_op_input(g, self)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1080,
          "content": "def _get_im2col_padded_input(g: jit_utils.GraphContext, input, padding_h, padding_w):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1126,
          "content": "padded_input = _get_im2col_padded_input(g, input, padding_h, padding_w)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 392,
          "content": "self = symbolic_helper._maybe_cast_reduce_op_input(g, self)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 670,
          "content": "# input (trip_count, cond)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 442,
          "content": "def compare_onnx_pytorch_model_with_input(input_args, input_kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 460,
          "content": "compare_onnx_pytorch_model_with_input(input_args, input_kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 464,
          "content": "compare_onnx_pytorch_model_with_input(test_input_args, {})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 739,
          "content": "val_keep_init_as_ip = utils._decide_keep_init_as_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 865,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1445,
          "content": "graph.eraseInput(i)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1464,
          "content": "new_input = graph.addInput()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1487,
          "content": "new_input = graph.addInput()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1500,
          "content": "graph.eraseInput(0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1845,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 729,
          "content": "def _decide_keep_init_as_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 740,
          "content": "is ONNX, then do not keep initializers as input (val_keep_init_as_ip=False). For all other",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 741,
          "content": "export types keep initializers as input (val_keep_init_as_ip=True).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 744,
          "content": "part of graph input (only ONNX IR v3 is allowed), i.e. val_keep_init_as_ip=True.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 760,
          "content": "return True  # i.e. True == initializers are part of graph input (ONNX IR v3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1435,
          "content": "val_keep_init_as_ip = _decide_keep_init_as_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1576,
          "content": "identity_node.addInput(node)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1578,
          "content": "graph.return_node().replaceInput(i, identity_node.output())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 575,
          "content": "tensor_list.node().addInput(t)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6581,
          "content": "device = jit_utils.get_device_from_value(device_value.node().input())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 207,
          "content": "max_eval (int, optional): maximal number of function evaluations per optimization",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 401,
          "content": "exec(code, ns)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 586,
          "content": "def __import__(self, name, globals=None, locals=None, fromlist=(), level=0):",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 121,
          "content": "B_padded = A._pad_dense_input(B)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 128,
          "content": "A_padded = B._pad_dense_input(A)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 151,
          "content": "A_padded = B_t._pad_dense_input(A)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 168,
          "content": "input (Tensor): a sparse CSR matrix of shape `(m, n)` to be added and used to compute",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 216,
          "content": "input (Tensor): the input sparse tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 290,
          "content": "input (Tensor): input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 312,
          "content": "input (Tensor): a sparse CSR matrix of shape `(n, n)` representing the",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 331,
          "content": "input (Tensor): input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 279,
          "content": "def _pad_dense_input(cls, dense_input: torch.Tensor) -> torch.Tensor:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 85,
          "content": "input (Tensor): the input tensor.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 121,
          "content": "input (Tensor): the tensor to compute the digamma function on",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 476,
          "content": "input (Number or Tensor) : Multiplier",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 523,
          "content": "input (Number or Tensor) : Multiplier",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 563,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 811,
          "content": "input (Tensor): input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 843,
          "content": "input (Tensor): input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 871,
          "content": "input (Tensor): the input tensor corresponding to `x`.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 913,
          "content": "input (Tensor): the tensor to compute the multivariate log-gamma function",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 963,
          "content": "input (Tensor): the first non-negative input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1014,
          "content": "input (Tensor): the first non-negative input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 618,
          "content": "config = pickle.loads(maybe_pickled_config)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 113,
          "content": "fake_frame = eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 106,
          "content": "\"message\": f\"Operator {op_name} exists, remember to call eval() before \"",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 111,
          "content": "\"message\": f\"Operator {op_name} exists, remember to call eval() before \"",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 84,
          "content": "...     bench.add_input(input[0], x2=input[1])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 107,
          "content": "by calling add_input() method.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 111,
          "content": "def add_input(self, *args, **kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 119,
          "content": "self._benchmark.add_input(*args, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 407,
          "content": "except subprocess.CalledProcessError:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1822,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2603,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 15,
          "content": "def openxla_eval(model, fake_tensor_inputs):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 182,
          "content": "m.set_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 345,
          "content": "gm.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 457,
          "content": "mod.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 458,
          "content": "opt_mod.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1090,
          "content": "sym_node_proxy = self.tx.output.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1292,
          "content": "proxy = self.tx.output.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1337,
          "content": "proxy = self.tx.output.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1560,
          "content": "tensor_list_proxy = self.tx.output.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1639,
          "content": "def mark_static_input(self, value: torch.Tensor, guard: bool):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1751,
          "content": "self.mark_static_input(p, guard=freezing)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1761,
          "content": "self.mark_static_input(b, guard=freezing)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1885,
          "content": "self.mark_static_input(value, guard=is_parameter_freezing())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2035,
          "content": "tensor_proxy = self.tx.output.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2154,
          "content": "proxy = self.tx.output.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2285,
          "content": "proxy = self.tx.output.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2383,
          "content": "proxy = self.tx.output.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2464,
          "content": "proxy = self.tx.output.root_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2530,
          "content": "def _clone_input(value, fake_mode):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2543,
          "content": "value = clone_input(value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2572,
          "content": "proxy.tracer.real_value_cache[proxy.node] = _clone_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2678,
          "content": "proxy.tracer.real_value_cache[proxy.node] = _clone_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2933,
          "content": "example_value = _clone_input(example_value, tx.fake_mode)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 421,
          "content": "tracer.create_graph_input(arg_name, a.python_type(), example_value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 430,
          "content": "new_proxy = tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 457,
          "content": "tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 470,
          "content": "tracer.create_graph_input(arg_name, a.python_type(), example_value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 479,
          "content": "new_proxy = tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1274,
          "content": "proxy = tx.output.current_tracer.create_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 300,
          "content": "# eval(\"super(L['mod'].model.model.encoder.embed_positions.forward__class__,",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 302,
          "content": "# Which is incorrect, and violates the invariant that all sources should be eval()-able against the scope.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 303,
          "content": "_input_associated_real_value = eval(self.source.name(), scope)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 539,
          "content": "_input_associated_real_value = eval(self.source.name(), scope)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1493,
          "content": "placeholder = tx.output.synthetic_graph_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 26,
          "content": "case = __import__(case_name, globals(), locals(), [], 1)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 496,
          "content": "graph_input = self.serialize_input(val)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 517,
          "content": "self.graph_state.outputs = [self.serialize_input(node_args)]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 520,
          "content": "self.graph_state.outputs = [self.serialize_input(arg) for arg in node_args]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 736,
          "content": "arg=self.serialize_input(arg),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 768,
          "content": "arg=self.serialize_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 778,
          "content": "arg=self.serialize_input(args[i], schema_arg.type),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 795,
          "content": "name=\"\", arg=self.serialize_input(a), kind=ArgumentKind.POSITIONAL",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 803,
          "content": "arg=self.serialize_input(a),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 837,
          "content": "def serialize_input(self, arg, arg_type: Optional[Any] = None) -> Argument:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1269,
          "content": "return self.serialize_input(x.value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1937,
          "content": "placeholder_node.meta[\"val\"] = self.deserialize_input(input_)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2135,
          "content": "value=self.deserialize_constant_input(i.constant_input.value),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2220,
          "content": "# e.g.., `exec('from torch.utils._sympy.functions import *', ...)`",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2327,
          "content": "return tuple(self.deserialize_input(input.arg) for input in inputs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2333,
          "content": "input.name: self.deserialize_input(input.arg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2376,
          "content": "kwargs[input_.name] = self.deserialize_input(input_.arg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2378,
          "content": "args.append(self.deserialize_input(input_.arg))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2381,
          "content": "def deserialize_input(self, inp: Argument) -> Any:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2457,
          "content": "def deserialize_constant_input(self, inp: ConstantValue) -> Any:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2739,
          "content": "name=x.as_custom_obj.name, value=self.deserialize_input(x)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2742,
          "content": "return ep.ConstantArgument(name=\"\", value=self.deserialize_input(x))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3086,
          "content": "def add_input(a):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3318,
          "content": "def rank_input(inp) -> tuple[int, Optional[str], int]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3377,
          "content": "def replace_input(spec):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3483,
          "content": "replace_input(spec)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6,
          "content": "class OptionalInput(torch.nn.Module):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 20,
          "content": "model = OptionalInput()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 147,
          "content": "def get_knapsack_memory_input(self) -> list[float]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 157,
          "content": "def get_knapsack_runtime_input(self) -> list[float]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 276,
          "content": "vmin=min(self.get_knapsack_memory_input()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 277,
          "content": "vmax=max(self.get_knapsack_memory_input()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 204,
          "content": "self._graph_info_provider.get_knapsack_memory_input(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 205,
          "content": "self._graph_info_provider.get_knapsack_runtime_input(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 962,
          "content": "entry = pickle.loads(self.content)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 502,
          "content": "# to detect if we are returning an input (since the inputs storage is different)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 629,
          "content": "#    operationthe was run on the input (base tensor).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 134,
          "content": "def describe_input(i, aot_config):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 73,
          "content": "# (3) **is** a forward input (special case of \"alias_of_input\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "maybe_to_fresh_input(i, t, meta) for i, t in enumerate(args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1037,
          "content": "f\"{describe_input(i, aot_config)} would be a duplicate of \"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1038,
          "content": "f\"{describe_input(self.add_dupe_map[i], aot_config)}\",",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1558,
          "content": "# - for every updated_input generated by the fw that does *not* alias an input (aka only data-mutations)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2426,
          "content": "f\"{describe_input(i, aot_config)} would not require grad\",",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 225,
          "content": "def maybe_to_fresh_input(idx, t, meta):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1432,
          "content": "def input(self, name: str) -> str:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 302,
          "content": "template_buffer = ir.InputsKernel.unwrap_storage_for_input(output)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 325,
          "content": "ir.InputsKernel.unwrap_storage_for_input(W_packed_constant)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1040,
          "content": "template_buffer = ir.InputsKernel.unwrap_storage_for_input(output)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1067,
          "content": "template_buffer.inputs[1] = ir.InputsKernel.unwrap_storage_for_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1272,
          "content": "W = ir.ExternKernel.realize_input(W)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2071,
          "content": "var = self.args.input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2693,
          "content": "var = self.args.input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3440,
          "content": "var = self.args.input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 147,
          "content": "else self.args.input(node.get_name())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 342,
          "content": "def input(name):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 345,
          "content": "return original_input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1132,
          "content": "# as a global variable passed when calling exec(code, mod.__dict__, mod.__dict__).",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1754,
          "content": "# input (outer_input) into another at::Tensor to be used as a subgraph input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 476,
          "content": "var = self.args.input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1106,
          "content": "var = self.args.input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 96,
          "content": "return pickle.loads(data)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1481,
          "content": "var = V.kernel.args.input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2192,
          "content": "var = self.args.input(name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2397,
          "content": "boundaries_ptr = self.args.input(boundaries[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2401,
          "content": "sorter_ptr = self.args.input(sorter[0]) if sorter else \"None\"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 17,
          "content": "def efficient_conv_bn_eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1591,
          "content": "exec(tuning_code, scope)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1829,
          "content": "def add_fake_input(name, shape, stride, device, dtype):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1837,
          "content": "def add_expr_input(name, val):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1840,
          "content": "def add_torchbind_input(name, value):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1845,
          "content": "output.writeline(f\"{name} = pickle.loads({pickle.dumps(value)!r})\")",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1863,
          "content": "add_fake_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1873,
          "content": "add_torchbind_input(name, torchbind_obj)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1888,
          "content": "add_torchbind_input(name, value.get_real_obj())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1894,
          "content": "add_expr_input(name, V.graph.sizevars.size_hint(value, fallback=42))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1896,
          "content": "add_expr_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1909,
          "content": "add_fake_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 501,
          "content": "fused_conv = fuse_conv_bn_eval(conv, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 610,
          "content": "def get_input(self) -> torch.fx.Node:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 635,
          "content": "def get_input(self) -> torch.fx.Node:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 729,
          "content": "input = normalized.get_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 798,
          "content": "input_A_node = normalized.get_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "def is_preferred_layout_as_bmm_input(sizes, strides):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 167,
          "content": "if not is_preferred_layout_as_bmm_input(sizes, strides):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 472,
          "content": "query = ir.ExternKernel.realize_input(query)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 735,
          "content": "user_inputs_list.append(self.get_non_cat_node_input(split_node, user))  # type: ignore[arg-type]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 752,
          "content": "def get_non_cat_node_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 90,
          "content": "# early exit due to zero-size input(s)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 134,
          "content": "{{load_input(\"A\", \"a\", (\"idx_m\", \"idx_n\"), mask=None if EVEN_K else \"a_mask\", indent_width=8)}}",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 138,
          "content": "{{load_input(\"B\", \"b\", (\"idx_m\", \"idx_n\"), mask=None if EVEN_K else \"b_mask\", indent_width=8)}}",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 166,
          "content": "# early exit due to zero-size input(s)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 210,
          "content": "{{load_input(\"A\", \"a\", (\"idx_m\", \"idx_n\"), mask=None if EVEN_K else \"a_mask\", indent_width=8)}}",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 214,
          "content": "{{load_input(\"B\", \"b\", (\"idx_m\", \"idx_n\"), mask=None if EVEN_K else \"b_mask\", indent_width=8)}}",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 245,
          "content": "# early exit due to zero-size input(s)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 423,
          "content": "# early exit due to zero-size input(s)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 33,
          "content": "# early exit due to zero-size input(s)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 31,
          "content": "exec(code, mod.__dict__, mod.__dict__)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1240,
          "content": "exec(launcher_code, scope)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2876,
          "content": "exec(line, scope)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2877,
          "content": "exec(f\"grid_0 = {self.x_grid}\", scope)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2878,
          "content": "exec(f\"grid_1 = {self.y_grid}\", scope)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2879,
          "content": "exec(f\"grid_2 = {self.z_grid}\", scope)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 58,
          "content": "lambda: f\"{fn_name}: the dtype of the input ({x_dtype}) should be convertible \"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 756,
          "content": "# input (1 batch size, C classes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 759,
          "content": "# input (N batch size, C classes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 764,
          "content": "# input (N batch size, C classes, K)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 837,
          "content": "# Input (N batch-size, C classes, k-dimensions)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11,
          "content": "m = torch.nn.Sequential(torch.nn.Conv2d(1, 1, 1)).eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 178,
          "content": ">>> m = M().eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 184,
          "content": ">>> m = M().eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 61,
          "content": "return nn.utils.fuse_conv_bn_eval(conv, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 113,
          "content": "fused_conv = nn.utils.fusion.fuse_conv_bn_eval(conv, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 150,
          "content": "return nn.utils.fusion.fuse_linear_bn_eval(linear, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 178,
          "content": "return nn.utils.fusion.fuse_conv_bn_eval(convt, bn, transpose=True)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 472,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 564,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "m = Model().eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 313,
          "content": "float_model = M().eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 317,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 131,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 284,
          "content": "float_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 290,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 337,
          "content": "float_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 343,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 411,
          "content": "float_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 68,
          "content": "float_model = M().eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 72,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 146,
          "content": "float_model = M().eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 415,
          "content": "input (Tensor): the input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 457,
          "content": "input (Tensor): Quantized input of type `torch.quint8`",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 700,
          "content": "input (Tensor): quantized input tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 746,
          "content": "input (Tensor): quantized input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 770,
          "content": "input (Tensor): quantized input",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 587,
          "content": "observed.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 186,
          "content": "observed.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 238,
          "content": "def check_input(self, input: Tensor, batch_sizes: Optional[Tensor]) -> None:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 276,
          "content": "self.check_input(input, batch_sizes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 641,
          "content": "self.check_input(input, batch_sizes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 822,
          "content": "self.check_input(input, batch_sizes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1015,
          "content": "def check_forward_input(self, input):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1229,
          "content": "self.check_forward_input(input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1294,
          "content": "self.check_forward_input(input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1344,
          "content": "self.check_forward_input(input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 531,
          "content": "self.check_input(input, batch_sizes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 37,
          "content": "node_to_use_for_fqn = get_normalized_nth_input(node, gm, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 111,
          "content": "new_graph.output(map_arg(get_normalized_nth_input(node, gm, 0), load_arg))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 129,
          "content": "node_arg = get_normalized_nth_input(node, gm, node_arg_idx)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 422,
          "content": "get_normalized_nth_input(node_a, gm_a, 0), gm_a, gm_b, graph_c",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 433,
          "content": "get_normalized_nth_input(node_a, gm_a, 0), gm_a, gm_b, graph_c",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 441,
          "content": "(arg_copy, get_normalized_nth_input(node_a, gm_a, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 468,
          "content": "cur_node = get_normalized_nth_input(cur_node, gm_a, 0)  # type: ignore[assignment]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 546,
          "content": "cur_node = get_normalized_nth_input(cur_node, gm_a, 0)  # type: ignore[assignment]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 883,
          "content": "prev_node_b = get_normalized_nth_input(node_b, gm_b, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 950,
          "content": "# node_a's input (dequant, etc)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 952,
          "content": "prev_node_c = get_normalized_nth_input(node_c, gm_b, 0)  # type: ignore[possibly-undefined]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 956,
          "content": "prev_node_c = get_normalized_nth_input(node_c, gm_b, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 959,
          "content": "get_normalized_nth_input(arg, gm_b, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1043,
          "content": "node_c_second_non_param_arg = get_normalized_nth_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1072,
          "content": "while get_normalized_nth_input(cur_node, gm_b, 0) != input_logger:  # type: ignore[possibly-undefined]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1073,
          "content": "cur_node = get_normalized_nth_input(cur_node, gm_b, 0)  # type: ignore[assignment]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 637,
          "content": "prev_node = get_normalized_nth_input(first_node, mt, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "first_arg = get_normalized_nth_input(node, gm, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 88,
          "content": "first_arg = get_normalized_nth_input(node, gm, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 117,
          "content": "prev_node = get_normalized_nth_input(node, gm, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 132,
          "content": "prev_node = get_normalized_nth_input(node, gm, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 141,
          "content": "cur_node_dtype_target = get_normalized_nth_input(node, gm, 1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "first_arg = get_normalized_nth_input(node, gm, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 173,
          "content": "prev_node = get_normalized_nth_input(node, gm, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 181,
          "content": "scale_node = get_normalized_nth_input(node, gm, scale_arg_idx)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 182,
          "content": "zp_node = get_normalized_nth_input(node, gm, zp_arg_idx)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 508,
          "content": "def get_normalized_nth_input(node: Node, gm: GraphModule, idx: int) -> Node:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 54,
          "content": "self.sparsified = deepcopy(pl_module.model).eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 105,
          "content": "fused_linear = nn.utils.fusion.fuse_linear_bn_eval(linear, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 163,
          "content": "fused_conv = nn.utils.fusion.fuse_conv_bn_eval(conv, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 246,
          "content": "fused_conv = nn.utils.fusion.fuse_conv_bn_eval(conv, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 347,
          "content": "fused_conv = nn.utils.fusion.fuse_conv_bn_eval(conv, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 440,
          "content": "fused_conv = nn.utils.fusion.fuse_conv_bn_eval(conv, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "input (torch.Tensor): original float32 or bfloat16 Tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 247,
          "content": "input (torch.Tensor): Tensor with dtype matching `dtype` argument,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 442,
          "content": "input (torch.Tensor): floating point input Tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 494,
          "content": "input (torch.Tensor): floating point input Tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 586,
          "content": "input (torch.Tensor): original float32 or bfloat16 Tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 666,
          "content": "input (torch.Tensor): Tensor with dtype matching `dtype` argument,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 755,
          "content": "input (torch.Tensor): original float32/float16 Tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 815,
          "content": "input (torch.Tensor): original float32/float16 Tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 912,
          "content": "input (torch.Tensor): original float32 or bfloat16 Tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 971,
          "content": "input (torch.Tensor): quantized Tensor (uint8, int8 etc.)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1066,
          "content": "input (torch.Tensor): original float32 or bfloat16 Tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1115,
          "content": "input (torch.Tensor): quantized Tensor (uint8/int8 etc.)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 378,
          "content": "input (torch.Tensor): original float32, float16 or bfloat16 Tensor",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 537,
          "content": "input (torch.Tensor): quantized tensor, should match the dtype `dtype` argument",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 45,
          "content": "however, calling `model.train()` or `model.eval()` does not automatically switch",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 63,
          "content": "def dropout_eval(x):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 103,
          "content": "however, calling `model.train()` or `model.eval()` does not automatically switch",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 128,
          "content": "def bn_eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 180,
          "content": "def _move_exported_model_to_eval(model: torch.fx.GraphModule):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 184,
          "content": "This is equivalent to model.eval() but only for certain special ops like dropout, batchnorm.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 216,
          "content": "def _allow_exported_model_train_eval(model: torch.fx.GraphModule):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 218,
          "content": "Allow users to call `model.train()` and `model.eval()` on an exported model,",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 222,
          "content": "Note: This does not achieve the same effect as what `model.train()` and `model.eval()`",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 233,
          "content": "_move_exported_model_to_eval(self)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 235,
          "content": "def _eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 236,
          "content": "_move_exported_model_to_eval(self)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 594,
          "content": "Disallow calling `model.train()` or `model.eval()` on the given GraphModule.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 598,
          "content": "Calling train() or eval() is not supported for exported models.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 601,
          "content": "If you cannot replace the calls to `model.train()` and `model.eval()`, you may override",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 602,
          "content": "the behavior for these methods by calling `torch.ao.quantization.allow_exported_model_train_eval(model)`,",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 611,
          "content": "def _eval(self, mode: bool = True):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 119,
          "content": "self._annotate_output_share_observer_as_input(input_node, node)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 108,
          "content": ">>>     example_input = get_callibration_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1353,
          "content": "def _annotate_output_share_observer_as_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1418,
          "content": "self._annotate_output_share_observer_as_input(input_node, node)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 423,
          "content": "def add_tensor_operand_for_input(self, arg_idx, jitval, tensor):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 716,
          "content": "op_id = self.add_tensor_operand_for_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1617,
          "content": "self._handle_conv_pool_flexible_input(out_id, image, args, False)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2170,
          "content": "self._handle_conv_pool_flexible_input(out_id, jit_image, args, transpose)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2175,
          "content": "def _handle_conv_pool_flexible_input(self, out_id, jit_image, args, transpose):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1498,
          "content": "def _low_contention_reduce_scatter_with_symm_mem_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1600,
          "content": "return _low_contention_reduce_scatter_with_symm_mem_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "stats = pickle.load(f)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 882,
          "content": "metadata = pickle.load(metadata_file)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 885,
          "content": "_get_param_to_param_id_from_optim_input(model, optim_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 941,
          "content": "def _get_param_id_to_param_from_optim_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 968,
          "content": "optim_input (Optional[Union[List[Dict[str, Any]],",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1122,
          "content": "def _get_param_to_param_id_from_optim_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1132,
          "content": "param_id_to_param = _get_param_id_to_param_from_optim_input(model, optim_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1929,
          "content": "_get_param_id_to_param_from_optim_input(model, optim_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 456,
          "content": "input (Any): Unused; expected by the hook signature.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 527,
          "content": "return _root_cast_forward_input(state, module, args, kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 532,
          "content": "# exiting eval() mode.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 602,
          "content": "return _root_cast_forward_input(state, module, args, kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 606,
          "content": "def _root_cast_forward_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 757,
          "content": "# (i.e. model.eval() + full precision in eval was configured), don't downcast gradient.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 88,
          "content": "# Env var toggling whether when model is in .eval() mode, should we run in fp32",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1217,
          "content": "def _warn_optim_input(optim_input, *, stacklevel: int = 1):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1227,
          "content": "def _is_using_optim_input(optim_input, optim) -> bool:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1272,
          "content": "FullyShardedDataParallel._warn_optim_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1275,
          "content": "using_optim_input = FullyShardedDataParallel._is_using_optim_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1328,
          "content": "FullyShardedDataParallel._warn_optim_input(optim_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1329,
          "content": "using_optim_input = FullyShardedDataParallel._is_using_optim_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1405,
          "content": "optim_input (Optional[Union[List[Dict[str, Any]], Iterable[torch.nn.Parameter]]]):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1524,
          "content": "optim_input (Optional[Union[List[Dict[str, Any]], Iterable[torch.nn.Parameter]]]):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1643,
          "content": "optim_input (Optional[Union[List[Dict[str, Any]], Iterable[torch.nn.Parameter]]]):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1720,
          "content": "FullyShardedDataParallel._warn_optim_input(optim_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1721,
          "content": "using_optim_input = FullyShardedDataParallel._is_using_optim_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1751,
          "content": "_get_param_id_to_param_from_optim_input(model, optim_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1775,
          "content": "_get_param_to_param_id_from_optim_input(model, optim_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 188,
          "content": "input (Tensor): Input tensor to scatter.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 143,
          "content": "def stage_backward_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 349,
          "content": "def set_local_fwd_input(self, prev_stage_outputs: Any, mb_index: int) -> None:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 387,
          "content": "def set_local_bwd_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 613,
          "content": "return lambda: stage_backward_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 701,
          "content": "self._validate_fwd_input(args, kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 889,
          "content": "def _validate_fwd_input(self, args, kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1789,
          "content": "stage_index_to_stage[stage_idx + 1].set_local_fwd_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1824,
          "content": "stage_index_to_stage[stage_idx - 1].set_local_bwd_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1849,
          "content": "stage_index_to_stage[stage_idx - 1].set_local_bwd_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 59,
          "content": "#  input(torch.Tensor) -> Module A -> Module B -> Module C -> output (torch.Tensor)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 64,
          "content": "#  input(torch.Tensor) -> Module A",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 65,
          "content": "#       -> DTensor input (from_local) -> Sharded Module B -> DTensor output",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 79,
          "content": "input (4 x 6) with the local shard (16 x 5) ((16 x 2) for the last).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 261,
          "content": "gather_inp = _all_gather_base_input(input, pg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 282,
          "content": "def _all_gather_base_input(input, pg):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 83,
          "content": "apply each input (4 x 6) with the local shard (16 x 5) ((16 x 2) for the last).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 287,
          "content": ") = _all_gather_embedding_bag_input(input, per_sample_weights, offsets, pg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 357,
          "content": "gather_inp = _all_gather_base_input(input, pg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 363,
          "content": ") = _all_gather_embedding_bag_input(input, per_sample_weights, offsets, pg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 439,
          "content": "def _all_gather_embedding_bag_input(input, per_sample_weights, offsets, pg):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 76,
          "content": "os.system(\"echo system stdouts are also redirected\")",
          "pattern": "os\\.system",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 443,
          "content": "self._state = pickle.loads(state_bits)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 435,
          "content": "def eval(self) -> Self:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 436,
          "content": "return self.module_rref.rpc_sync().eval()  # type: ignore[operator, union-attr]",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 957,
          "content": "# and normalized input (x_hat) should have the same sharding",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 427,
          "content": "class PrepareModuleInput(ParallelStyle):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 465,
          "content": ">>>         \"attn\": PrepareModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 725,
          "content": "use_local_input (bool, optional):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 778,
          "content": "self.prepare_module_input = PrepareModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 42,
          "content": "input (:class:`DTensor`):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 107,
          "content": "fused_layer = fuse_conv_bn_eval(first_layer, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 109,
          "content": "fused_layer = fuse_linear_bn_eval(first_layer, bn)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 146,
          "content": "return eval(f\"lambda {argnames}: fn({argnames})\", {\"fn\": fn})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 48,
          "content": "exec(code, globals_dict)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 145,
          "content": "def reduce_acc_nodes_non_tensor_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 197,
          "content": "self.reduce_acc_nodes_non_tensor_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 558,
          "content": "split_mod.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5646,
          "content": "#    if we have an input (2, 3), we must show s0*2 == 2 and s1 == 3.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6023,
          "content": "return eval(code, SYMPY_INTERP, args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6033,
          "content": "return eval(code, SYMPY_INTERP, args)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6041,
          "content": "return eval(code, SYMPY_INTERP, {\"L\": dict(zip(arg_names, args))})",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 35,
          "content": "def _validate_sdpa_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 26,
          "content": "def _validate_sdpa_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 724,
          "content": "_validate_sdpa_input(query, key, value, attn_mask, dropout_p, is_causal, scale)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 229,
          "content": "_validate_sdpa_input(query, key, value, None, dropout_p, is_causal, scale)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 677,
          "content": "# To keep mutation in the graph, AOTD manually calls copy_ on the input (NJT).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1588,
          "content": "f\"permute(): number of dimensions in the tensor input ({inp_dim}) \"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1717,
          "content": ")  # mask elements outside of the ragged dimension and expand to the same shape as padded input (3D dense tensor)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1298,
          "content": "_validate_sdpa_input(query, key, value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 285,
          "content": "input (Tensor): a minibatch of examples",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 306,
          "content": "input (Tensor): a minibatch of examples",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1006,
          "content": "- training is disabled (using ``.eval()``)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 341,
          "content": "raise ValueError(f\"expected 2D or 3D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 375,
          "content": "raise ValueError(f\"expected 2D or 3D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 452,
          "content": "raise ValueError(f\"expected 4D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 486,
          "content": "raise ValueError(f\"expected 4D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 563,
          "content": "raise ValueError(f\"expected 5D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 597,
          "content": "raise ValueError(f\"expected 5D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 672,
          "content": "synchronization is disabled when ``model.eval()`` is set or if",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 722,
          "content": "raise ValueError(f\"expected at least 2D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 772,
          "content": "# Don't sync batchnorm stats in inference mode (model.eval()).",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 561,
          "content": "\\sum_{k = 0}^{C_{in} - 1} weight(C_{out_j}, k) \\star input(N_i, k)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1138,
          "content": "input (Tensor): The input tensor.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 61,
          "content": "derive the shapes of their parameters from the first input(s)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 43,
          "content": "def _handle_no_batch_input(self, input):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 122,
          "content": "return self._handle_no_batch_input(input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 201,
          "content": "raise ValueError(f\"expected 2D or 3D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 238,
          "content": "raise ValueError(f\"expected 2D or 3D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 245,
          "content": "over a 4D input (a mini-batch of 2D inputs",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 317,
          "content": "raise ValueError(f\"expected 3D or 4D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 355,
          "content": "raise ValueError(f\"expected 3D or 4D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 362,
          "content": "over a 5D input (a mini-batch of 3D inputs with additional channel dimension) as described in the paper",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 433,
          "content": "raise ValueError(f\"expected 4D or 5D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 471,
          "content": "raise ValueError(f\"expected 4D or 5D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 106,
          "content": "the last 2 dimensions of the input (i.e. ``input.mean((-2, -1))``).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 95,
          "content": "raise ValueError(f\"expected 2D or 3D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 155,
          "content": "raise ValueError(f\"expected 3D or 4D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 205,
          "content": "raise ValueError(f\"expected 4D or 5D input (got {input.dim()}D input)\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 296,
          "content": "log_input (bool, optional): if ``True`` the loss is computed as",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 438,
          "content": "input (Tensor): Tensor containing bags of indices into the embedding matrix.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2889,
          "content": "def eval(self) -> Self:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2900,
          "content": "`.eval()` and several similar mechanisms that may be confused with it.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 117,
          "content": ">>> # Notice that values in top left corner are the same with the small input (except at boundary)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 300,
          "content": "def check_input(self, input: Tensor, batch_sizes: Optional[Tensor]) -> None:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 364,
          "content": "self.check_input(input, batch_sizes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1002,
          "content": "self.check_input(input, batch_sizes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 89,
          "content": "input(N_i, C_j, stride \\times k + m)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 685,
          "content": "input(N_i, C_j, stride[0] \\times h + m, stride[1] \\times w + n)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 671,
          "content": "d_model: the number of expected features in the input (required).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 704,
          "content": "- training is disabled (using ``.eval()``)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 979,
          "content": "d_model: the number of expected features in the input (required).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 20,
          "content": "def fuse_conv_bn_eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 109,
          "content": "def fuse_linear_bn_eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 295,
          "content": "input (Tensor): padded batch of variable length sequences.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 597,
          "content": "def eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 37,
          "content": "package = __import__(package_name)",
          "pattern": "__import__\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 253,
          "content": "# and inputs are also set to be dynamic in add_input().",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 488,
          "content": "# NOTE: add_input() intends to create nodes with shape/type",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 496,
          "content": "output = onnxscript_graph.add_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 504,
          "content": "output = onnxscript_graph.add_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 511,
          "content": "output = onnxscript_graph.add_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 83,
          "content": "yield SampleInput(make_arg(1, low=0.8, high=2), args=())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 143,
          "content": "yield SampleInput(make_arg(4, low=0.9, high=2), args=(make_arg(3, 4, low=0.9, high=2),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 147,
          "content": "yield SampleInput(make_arg(4, low=0.9, high=2), args=(), kwargs={\"scalar\": 3.14})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 281,
          "content": "yield SampleInput(make_arg(3, 5), args=(1,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 289,
          "content": "yield SampleInput(tensor, args=(ind, ind_inv, dim))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 417,
          "content": "yield SampleInput(make_arg(3, 5), args=(2,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 472,
          "content": "yield SampleInput(make_arg(3, 5))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1139,
          "content": "tracked_input = get_tracked_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1150,
          "content": "clear_tracked_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 109,
          "content": "def get_input(self, device) -> tuple[torch.Tensor, ...]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 300,
          "content": "self.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 302,
          "content": "def get_input(self, device):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 440,
          "content": "def get_input(self, device):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 646,
          "content": "def get_input(self, device):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 647,
          "content": "return self.module.get_input(device)  # type: ignore[operator]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1262,
          "content": "input = model.module.get_input(torch.device(DEVICE_TYPE))  # type: ignore[operator, union-attr]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 324,
          "content": "# Caused by sample input at index 23: SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 92,
          "content": "#    and the way to do so is to add a `cpp_var_map` entry: `cpp_var_map={'i': '_get_input()', 't': t}`.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 93,
          "content": "#    (Note that for `i`, since we want it to take the Python input value, we pass '_get_input()' string as value",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 183,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 198,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 214,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 232,
          "content": "cpp_var_map={'i': '_get_input()', 't': t, 'weights': weights},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 251,
          "content": "cpp_var_map={'i': '_get_input()', 't': t, 'weights': weights},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 287,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 305,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 321,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 337,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 354,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 370,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 386,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 403,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 419,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 434,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 448,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 464,
          "content": "cpp_var_map={'i': '_get_input()', 'target': target},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 480,
          "content": "cpp_var_map={'i': '_get_input()', 'target': target},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 497,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 515,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 537,
          "content": "cpp_var_map={'i': '_get_input()', 't': t, 'weight': weight},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 560,
          "content": "cpp_var_map={'i': '_get_input()', 't': t, 'weight': weight},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 583,
          "content": "cpp_var_map={'i': '_get_input()', 't': t, 'weight': weight},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 600,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 618,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 640,
          "content": "cpp_var_map={'i': '_get_input()', 't': t, 'weight': weight},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 657,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 675,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 697,
          "content": "cpp_var_map={'i': '_get_input()', 't': t, 'weight': weight},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 713,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 730,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 747,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 764,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 781,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 798,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 815,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 833,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 851,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 869,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 886,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 903,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 920,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 940,
          "content": "cpp_var_map={'i': '_get_input()', 't': t, 'weights': weights},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 958,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 976,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 994,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1012,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1031,
          "content": "cpp_var_map={'i': '_get_input()', 't': t},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1053,
          "content": "cpp_var_map={'i': '_get_input()', 't': t, 'weights': weights},",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3244,
          "content": "def _zero_grad_input(self, input):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3251,
          "content": "self._zero_grad_input(i)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3278,
          "content": "self._zero_grad_input(input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3398,
          "content": "def _get_input(self, unpack=True):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3428,
          "content": "input = self._get_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3481,
          "content": "test_case._zero_grad_input(input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3499,
          "content": "test_case._zero_grad_input(i)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3515,
          "content": "cpu_input = self._get_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3531,
          "content": "test_case._zero_grad_input(cpu_input_tuple)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3532,
          "content": "test_case._zero_grad_input(gpu_input_tuple)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3605,
          "content": "def _get_input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3606,
          "content": "input = TestBase._get_input(self, False)  # type: ignore[arg-type]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3843,
          "content": "input = self._get_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3890,
          "content": "cpu_input = self._get_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3909,
          "content": "cpu_input = self._get_input()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3959,
          "content": "def _test_module_empty_input(test_case, module, inp, check_size=True, inference=False):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 251,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 252,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 260,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 261,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 270,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 278,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 279,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 287,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 288,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 296,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 297,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 342,
          "content": "OptimizerInput(params=None, kwargs={\"capturable\": True}, desc=\"capturable\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 343,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 348,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 356,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 357,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 0.01}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 358,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 361,
          "content": "OptimizerInput(params=None, kwargs={\"maximize\": True}, desc=\"maximize\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 362,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 367,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 377,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 378,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 392,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 393,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 398,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 403,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 408,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 422,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 423,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 431,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 432,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 440,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 441,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 449,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 450,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 465,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 466,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 469,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 474,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 0.1}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 475,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 480,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 485,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 497,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 498,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 514,
          "content": "OptimizerInput(params=None, kwargs={\"capturable\": True}, desc=\"capturable\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 515,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 520,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 525,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 535,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 547,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 554,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 555,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 0.01}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 556,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 559,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 564,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 592,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 593,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 601,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 602,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 610,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 611,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 619,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 620,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 628,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 629,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 637,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 638,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 654,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 655,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 663,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 664,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 678,
          "content": "OptimizerInput(params=None, kwargs={\"capturable\": True}, desc=\"capturable\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 679,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 684,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 689,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 694,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 707,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 708,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 0.1}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 709,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 712,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 717,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 729,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 730,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 752,
          "content": "OptimizerInput(params=None, kwargs={\"capturable\": True}, desc=\"capturable\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 753,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 758,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 763,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 768,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 780,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 781,
          "content": "OptimizerInput(params=None, kwargs={\"lambd\": 0.1}, desc=\"non-default lambd\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 782,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 0.02}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 783,
          "content": "OptimizerInput(params=None, kwargs={\"t0\": 100}, desc=\"t0\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 784,
          "content": "OptimizerInput(params=None, kwargs={\"maximize\": True}, desc=\"maximize\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 785,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 788,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 800,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 801,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 815,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 816,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 0.01}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 817,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 820,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 823,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 838,
          "content": "OptimizerInput(params=None, kwargs={\"capturable\": True}, desc=\"capturable\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 839,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 844,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 854,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 867,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 868,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 1e-3}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 869,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 874,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 881,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 886,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 895,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 907,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 908,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 916,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 917,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 932,
          "content": "OptimizerInput(params=None, kwargs={\"capturable\": True}, desc=\"capturable\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 933,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 941,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 950,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 962,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 963,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 2e-3}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 964,
          "content": "OptimizerInput(params=None, kwargs={\"eps\": 1e-6}, desc=\"non-default eps\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 965,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 968,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 973,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 985,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 986,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 994,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 995,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1009,
          "content": "OptimizerInput(params=None, kwargs={\"capturable\": True}, desc=\"capturable\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1010,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1015,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1023,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1024,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 1e-3}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1025,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1028,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1035,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1040,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1048,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1053,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1070,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1071,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1085,
          "content": "OptimizerInput(params=None, kwargs={\"capturable\": True}, desc=\"capturable\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1086,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1094,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1095,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 2e-4}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1096,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1099,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1104,
          "content": "OptimizerInput(params=None, kwargs={\"maximize\": True}, desc=\"maximize\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1112,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1113,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1127,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1128,
          "content": "OptimizerInput(params=None, kwargs={\"lr\": 1e-2}, desc=\"non-default lr\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1129,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1132,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1135,
          "content": "OptimizerInput(params=None, kwargs={\"momentum\": 0.9}, desc=\"momentum\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1136,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1141,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1146,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1151,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1163,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1164,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1178,
          "content": "OptimizerInput(params=None, kwargs={}, desc=\"default\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1179,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1182,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1185,
          "content": "OptimizerInput(params=None, kwargs={\"maximize\": True}, desc=\"maximize\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1194,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1195,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1203,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1204,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1216,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1217,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1236,
          "content": "ErrorOptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1237,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1296,
          "content": "OptimizerInput(params=None, kwargs=base_kwargs, desc=optim_input.desc)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1307,
          "content": "OptimizerInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 274,
          "content": "ModuleInput(constructor_input=FunctionInput(10, 8),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 275,
          "content": "forward_input=FunctionInput(input=make_input((4, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 277,
          "content": "ModuleInput(constructor_input=FunctionInput(10, 8, bias=False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 278,
          "content": "forward_input=FunctionInput(make_input((4, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 281,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 5),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 282,
          "content": "forward_input=FunctionInput(make_input(3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 303,
          "content": "ModuleInput(constructor_input=FunctionInput(2, 3, 4),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 304,
          "content": "forward_input=FunctionInput(make_input((8, 2)), make_input((8, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 306,
          "content": "ModuleInput(constructor_input=FunctionInput(2, 3, 4, bias=False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 307,
          "content": "forward_input=FunctionInput(make_input((8, 2)), make_input((8, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 310,
          "content": "ModuleInput(constructor_input=FunctionInput(2, 3, 4),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 311,
          "content": "forward_input=FunctionInput(make_input(2), make_input(3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 335,
          "content": "input = make_input((10, 10)).log()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 336,
          "content": "target = make_input((10, 10)) if kwargs.get('log_target', False) else make_input((10, 10)).log()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 338,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 339,
          "content": "forward_input=FunctionInput(input, target),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 344,
          "content": "scalar_input = make_input(()).log()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 347,
          "content": "make_input(()) if kwargs.get('log_target', False) else make_input(()).log()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 350,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 351,
          "content": "forward_input=FunctionInput(scalar_input, scalar_input),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 360,
          "content": "def make_input(shape, device=device, dtype=dtype, requires_grad=requires_grad):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 386,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 387,
          "content": "forward_input=FunctionInput(make_input((15, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 397,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 398,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 399,
          "content": "make_input((2, 4, 5, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 406,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 407,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 408,
          "content": "make_input((2, 4, 5, 5, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 415,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 416,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 417,
          "content": "make_input((2, 4, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 440,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 441,
          "content": "forward_input=FunctionInput(make_input(3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 443,
          "content": "make_input(1).abs()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 487,
          "content": "input = make_input((2, 3, 4, 5)) if log_input else make_input((2, 3, 4, 5)).abs().add(0.001)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 489,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 490,
          "content": "forward_input=FunctionInput(input,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 521,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 522,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 528,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 529,
          "content": "forward_input=FunctionInput(make_input(()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 666,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 667,
          "content": "constructor_input=FunctionInput(reduction=reduction),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 668,
          "content": "forward_input=FunctionInput(make_input((4, )), make_input(4,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 678,
          "content": "ModuleInput(constructor_input=FunctionInput(kernel_size=2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 679,
          "content": "forward_input=FunctionInput(make_input((3, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 682,
          "content": "ModuleInput(constructor_input=FunctionInput(2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 683,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 684,
          "content": "ModuleInput(constructor_input=FunctionInput((2,), (2,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 685,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 687,
          "content": "ModuleInput(constructor_input=FunctionInput(2, 2, 1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 688,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 696,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 697,
          "content": "forward_input=FunctionInput(make_input((3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 700,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 701,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 702,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2), (2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 703,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 705,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2), (2, 2), (1, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 706,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 708,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2), divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 709,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 711,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2), (2, 2), divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 712,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 714,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2), (2, 2), (1, 1), divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 715,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 724,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 725,
          "content": "forward_input=FunctionInput(make_input((3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 728,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 729,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 730,
          "content": "ModuleInput(constructor_input=FunctionInput(2, (2, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 731,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 733,
          "content": "ModuleInput(constructor_input=FunctionInput(2, 2, (1, 1, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 734,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 736,
          "content": "ModuleInput(constructor_input=FunctionInput(4, 2, (1, 2, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 737,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 739,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 4, 8), 1, (1, 1, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 740,
          "content": "forward_input=FunctionInput(make_input((2, 3, 2, 4, 8))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 742,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1, 0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 743,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 745,
          "content": "ModuleInput(constructor_input=FunctionInput(2, 2, (1, 1, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 746,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 748,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 2, 2), divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 749,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 751,
          "content": "ModuleInput(constructor_input=FunctionInput(2, (2, 2, 2), divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 752,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 754,
          "content": "ModuleInput(constructor_input=FunctionInput(2, 2, (1, 1, 1), divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 755,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 757,
          "content": "ModuleInput(constructor_input=FunctionInput(4, 2, (1, 2, 1), divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 758,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 760,
          "content": "ModuleInput(constructor_input=FunctionInput((2, 4, 8), 1, (1, 1, 2), divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 761,
          "content": "forward_input=FunctionInput(make_input((2, 3, 2, 4, 8))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 763,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1, 0, divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 764,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 766,
          "content": "ModuleInput(constructor_input=FunctionInput(2, 2, (1, 1, 1), divisor_override=1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 767,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 776,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 777,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 779,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 780,
          "content": "forward_input=FunctionInput(make_input((3, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 783,
          "content": "ModuleInput(constructor_input=FunctionInput(1,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 784,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 792,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 793,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 795,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 796,
          "content": "forward_input=FunctionInput(make_input((3, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 799,
          "content": "ModuleInput(constructor_input=FunctionInput(1,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 800,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 802,
          "content": "ModuleInput(constructor_input=FunctionInput((3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 803,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 805,
          "content": "ModuleInput(constructor_input=FunctionInput((3, None)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 806,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 813,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 814,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 2, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 816,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 817,
          "content": "forward_input=FunctionInput(make_input((3, 5, 2, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 820,
          "content": "ModuleInput(constructor_input=FunctionInput((3, 4, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 821,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 3, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 823,
          "content": "ModuleInput(constructor_input=FunctionInput((None, 4, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 824,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 3, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 826,
          "content": "ModuleInput(constructor_input=FunctionInput((3, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 827,
          "content": "forward_input=FunctionInput(make_input((1, 1, 3, 2, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 835,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 836,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 838,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 839,
          "content": "forward_input=FunctionInput(make_input((3, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 848,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 849,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 851,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 852,
          "content": "forward_input=FunctionInput(make_input((3, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 855,
          "content": "ModuleInput(constructor_input=FunctionInput((3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 856,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 858,
          "content": "ModuleInput(constructor_input=FunctionInput((3, None)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 859,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 867,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 868,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 6, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 870,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 871,
          "content": "forward_input=FunctionInput(make_input((3, 5, 6, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 874,
          "content": "ModuleInput(constructor_input=FunctionInput((3, 4, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 875,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 6, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 877,
          "content": "ModuleInput(constructor_input=FunctionInput((3, None, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 878,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 6, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 880,
          "content": "ModuleInput(constructor_input=FunctionInput(3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 881,
          "content": "forward_input=FunctionInput(make_input((2, 3, 12, 9, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 883,
          "content": "ModuleInput(constructor_input=FunctionInput((3, 4, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 884,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 4, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 892,
          "content": "ModuleInput(constructor_input=FunctionInput(10,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 893,
          "content": "forward_input=FunctionInput(make_input((4, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 895,
          "content": "ModuleInput(constructor_input=FunctionInput(5,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 896,
          "content": "forward_input=FunctionInput(make_input((4, 5, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 898,
          "content": "ModuleInput(constructor_input=FunctionInput(10, 1e-3, None),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 899,
          "content": "forward_input=FunctionInput(make_input((4, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 901,
          "content": "ModuleInput(constructor_input=FunctionInput(10, 1e-3, 0.3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 902,
          "content": "forward_input=FunctionInput(make_input((4, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 904,
          "content": "ModuleInput(constructor_input=FunctionInput(10, 1e-3, 0.3, True, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 905,
          "content": "forward_input=FunctionInput(make_input((4, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 907,
          "content": "ModuleInput(constructor_input=FunctionInput(5, 1e-3, 0.3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 908,
          "content": "forward_input=FunctionInput(make_input((4, 5, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 910,
          "content": "ModuleInput(constructor_input=FunctionInput(5, 1e-3, 0.3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 911,
          "content": "forward_input=FunctionInput(make_input((0, 5, 9))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 919,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 920,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 921,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1e-3, None),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 922,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 924,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1e-3, 0.8),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 925,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 927,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1e-3, 0.8, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 928,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 930,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1e-3, 0.8, True, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 931,
          "content": "forward_input=FunctionInput(make_input((2, 3, 6, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 933,
          "content": "ModuleInput(constructor_input=FunctionInput(5, 1e-3, 0.3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 934,
          "content": "forward_input=FunctionInput(make_input((0, 5, 2, 2))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 942,
          "content": "ModuleInput(constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 943,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 944,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1e-3, None),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 945,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 947,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1e-3, 0.7),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 948,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 950,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1e-3, 0.7, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 951,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 953,
          "content": "ModuleInput(constructor_input=FunctionInput(3, 1e-3, 0.7, True, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 954,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 4, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 956,
          "content": "ModuleInput(constructor_input=FunctionInput(5, 1e-3, 0.3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 957,
          "content": "forward_input=FunctionInput(make_input((0, 5, 2, 2, 2))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 971,
          "content": "ModuleInput(constructor_input=(FunctionInput(C_out, kernel_size, **conv_kwargs) if lazy else",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 972,
          "content": "FunctionInput(C_in, C_out, kernel_size, **conv_kwargs)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 973,
          "content": "forward_input=FunctionInput(make_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 999,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1000,
          "content": "forward_input=FunctionInput(make_input((15, 10)), make_input((15, 10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1013,
          "content": "ModuleInput(constructor_input=FunctionInput(alpha=2.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1014,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1016,
          "content": "ModuleInput(constructor_input=FunctionInput(alpha=2.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1017,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1019,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1020,
          "content": "forward_input=FunctionInput(make_input((3,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1023,
          "content": "ModuleInput(constructor_input=FunctionInput(alpha=2.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1024,
          "content": "forward_input=FunctionInput(make_input((2, 3, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1032,
          "content": "ModuleInput(constructor_input=FunctionInput(alpha=2.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1033,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1035,
          "content": "ModuleInput(constructor_input=FunctionInput(alpha=2.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1036,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1039,
          "content": "ModuleInput(constructor_input=FunctionInput(alpha=2.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1040,
          "content": "forward_input=FunctionInput(make_input((3,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1049,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1050,
          "content": "forward_input=FunctionInput(make_input((5, 6)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1051,
          "content": "ModuleInput(constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1052,
          "content": "forward_input=FunctionInput(make_input((5, 6, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1054,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1055,
          "content": "forward_input=FunctionInput(make_input((4,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1064,
          "content": "ModuleInput(constructor_input=FunctionInput('none'),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1065,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1068,
          "content": "ModuleInput(constructor_input=FunctionInput('none'),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1069,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1071,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1072,
          "content": "forward_input=FunctionInput(make_input((3,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1081,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1082,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1084,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1085,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1088,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1089,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1091,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1092,
          "content": "forward_input=FunctionInput(make_input((2, 3, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1100,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1101,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1103,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1104,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1107,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1108,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1110,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1111,
          "content": "forward_input=FunctionInput(make_input((2, 3, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1119,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1120,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1121,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1122,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1125,
          "content": "ModuleInput(constructor_input=FunctionInput(0.5),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1126,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1128,
          "content": "ModuleInput(constructor_input=FunctionInput(0.0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1129,
          "content": "forward_input=FunctionInput(make_input((10, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1131,
          "content": "ModuleInput(constructor_input=FunctionInput(0.5),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1132,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1140,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1141,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1143,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1144,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1147,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1148,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1151,
          "content": "ModuleInput(constructor_input=FunctionInput(3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1152,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1155,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1156,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1159,
          "content": "ModuleInput(constructor_input=FunctionInput(3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1160,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1163,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1164,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1167,
          "content": "ModuleInput(constructor_input=FunctionInput(3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1168,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1177,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1178,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1179,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1180,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1183,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1184,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1192,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1193,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1196,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1197,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1200,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1201,
          "content": "forward_input=FunctionInput(make_input((5, 6, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1209,
          "content": "ModuleInput(constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1210,
          "content": "forward_input=FunctionInput(make_input((10, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1212,
          "content": "ModuleInput(constructor_input=FunctionInput(0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1213,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1216,
          "content": "ModuleInput(constructor_input=FunctionInput(-1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1217,
          "content": "forward_input=FunctionInput(make_input((4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1226,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1227,
          "content": "forward_input=FunctionInput(make_input((1, 3, 10, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1229,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1230,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1239,
          "content": "ModuleInput(constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1240,
          "content": "forward_input=FunctionInput(make_input((10, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1242,
          "content": "ModuleInput(constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1243,
          "content": "forward_input=FunctionInput(make_input((1, 3, 10, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1246,
          "content": "ModuleInput(constructor_input=FunctionInput(0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1247,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1250,
          "content": "ModuleInput(constructor_input=FunctionInput(-1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1251,
          "content": "forward_input=FunctionInput(make_input((4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1260,
          "content": "ModuleInput(constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1261,
          "content": "forward_input=FunctionInput(make_input((10, 20)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1262,
          "content": "ModuleInput(constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1263,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1265,
          "content": "ModuleInput(constructor_input=FunctionInput(0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1266,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1268,
          "content": "ModuleInput(constructor_input=FunctionInput(-1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1269,
          "content": "forward_input=FunctionInput(make_input((3, 4, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1278,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1279,
          "content": "forward_input=FunctionInput(make_input((10, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1281,
          "content": "ModuleInput(constructor_input=FunctionInput(2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1282,
          "content": "forward_input=FunctionInput(make_input((10, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1285,
          "content": "ModuleInput(constructor_input=FunctionInput(2, -100),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1286,
          "content": "forward_input=FunctionInput(make_input((10, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1291,
          "content": "ModuleInput(constructor_input=FunctionInput(2, -100),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1292,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1297,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1298,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1307,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1308,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1309,
          "content": "ModuleInput(constructor_input=FunctionInput(1,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1310,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1312,
          "content": "ModuleInput(constructor_input=FunctionInput(1,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1313,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1315,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1316,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1325,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1326,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1328,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1329,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1332,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1333,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1342,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1343,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1344,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1345,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1347,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1348,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1358,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1359,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1360,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1361,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1363,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1364,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1373,
          "content": "ModuleInput(constructor_input=FunctionInput(2., 1.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1374,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1376,
          "content": "ModuleInput(constructor_input=FunctionInput(2., 10.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1377,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1379,
          "content": "ModuleInput(constructor_input=FunctionInput(2., 1.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1380,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1382,
          "content": "ModuleInput(constructor_input=FunctionInput(2., 1.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1383,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1392,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1393,
          "content": "forward_input=FunctionInput(make_input((5, 6, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1395,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1396,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1399,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1400,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1409,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1410,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1411,
          "content": "make_input((2, 3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1414,
          "content": "ModuleInput(constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1415,
          "content": "forward_input=FunctionInput(make_input(()), make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1437,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1438,
          "content": "forward_input=FunctionInput(make_input((5, 10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1439,
          "content": "make_input((5, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1444,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1445,
          "content": "forward_input=FunctionInput(make_input(()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1446,
          "content": "make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1484,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1485,
          "content": "forward_input=FunctionInput(make_input((15, 10), low=1e-2, high=1 - 1e-2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1493,
          "content": "ModuleInput(constructor_input=FunctionInput(weight=scalar_weight),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1494,
          "content": "forward_input=FunctionInput(make_input((), low=1e-2, high=1 - 1e-2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1535,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1536,
          "content": "forward_input=FunctionInput(make_input((15, 10), low=1e-2, high=1 - 1e-2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1565,
          "content": "ModuleInput(constructor_input=FunctionInput(reduction=reduction, **constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1566,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1572,
          "content": "ModuleInput(constructor_input=FunctionInput(reduction=reduction, **constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1573,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1579,
          "content": "ModuleInput(constructor_input=FunctionInput(reduction=reduction, **constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1580,
          "content": "forward_input=FunctionInput(make_input((2, 3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1586,
          "content": "ModuleInput(constructor_input=FunctionInput(reduction=reduction, **constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1587,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1595,
          "content": "ModuleInput(constructor_input=FunctionInput(reduction=reduction, **constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1596,
          "content": "forward_input=FunctionInput(make_input((5, 3, 4, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1597,
          "content": "make_input((5, 3, 4, 2)).softmax(dim=1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1602,
          "content": "ModuleInput(constructor_input=FunctionInput(reduction=reduction, **constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1603,
          "content": "forward_input=FunctionInput(make_input((5, 3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1604,
          "content": "make_input((5, 3, 4)).softmax(dim=1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1609,
          "content": "ModuleInput(constructor_input=FunctionInput(reduction=reduction, **constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1610,
          "content": "forward_input=FunctionInput(make_input((5, 3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1611,
          "content": "make_input((5, 3)).softmax(dim=1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1616,
          "content": "ModuleInput(constructor_input=FunctionInput(reduction=reduction, **constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1617,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1618,
          "content": "make_input((2, 3, 5, 5, 2, 2)).softmax(dim=1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1623,
          "content": "ModuleInput(constructor_input=FunctionInput(reduction=reduction, **constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1624,
          "content": "forward_input=FunctionInput(make_input((3,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1657,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1658,
          "content": "constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1659,
          "content": "forward_input=FunctionInput(make_input((50, 3, 15)).log_softmax(2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1666,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1667,
          "content": "constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1668,
          "content": "forward_input=FunctionInput(make_input((50, 3, 15)).log_softmax(2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1676,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1677,
          "content": "constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1678,
          "content": "forward_input=FunctionInput(make_input((50, 3, 15)).log_softmax(2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1685,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1686,
          "content": "constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1687,
          "content": "forward_input=FunctionInput(make_input((50, 3, 15)).log_softmax(2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1702,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1703,
          "content": "constructor_input=FunctionInput(3, 6, 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1704,
          "content": "forward_input=FunctionInput(make_input((4, 6, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1706,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1707,
          "content": "constructor_input=FunctionInput(3, 12, 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1708,
          "content": "forward_input=FunctionInput(make_input((4, 12))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1710,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1711,
          "content": "constructor_input=FunctionInput(1, 6, 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1712,
          "content": "forward_input=FunctionInput(make_input((150, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1714,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1715,
          "content": "constructor_input=FunctionInput(5, 5, 1e-3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1716,
          "content": "forward_input=FunctionInput(make_input((4, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1718,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1719,
          "content": "constructor_input=FunctionInput(1, 10, 1e-3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1720,
          "content": "forward_input=FunctionInput(make_input((4, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1722,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1723,
          "content": "constructor_input=FunctionInput(3, 6, 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1724,
          "content": "forward_input=FunctionInput(make_input((4, 6, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1726,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1727,
          "content": "constructor_input=FunctionInput(3, 3, 1e-3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1728,
          "content": "forward_input=FunctionInput(make_input((4, 3, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1730,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1731,
          "content": "constructor_input=FunctionInput(1, 3, 1e-3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1732,
          "content": "forward_input=FunctionInput(make_input((4, 3, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1741,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1742,
          "content": "constructor_input=FunctionInput(2.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1743,
          "content": "forward_input=FunctionInput(make_input((4, 3, 2, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1745,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1746,
          "content": "constructor_input=FunctionInput(2.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1747,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1750,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1751,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1752,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1763,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1764,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1765,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1769,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1770,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1771,
          "content": "forward_input=FunctionInput(make_input((2, 3, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1780,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1781,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1782,
          "content": "forward_input=FunctionInput(make_input((3, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1785,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1786,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1787,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1791,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1792,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1793,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1818,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1819,
          "content": "forward_input=FunctionInput(make_input((10,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1825,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1826,
          "content": "forward_input=FunctionInput(make_input(()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1851,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1852,
          "content": "forward_input=FunctionInput(make_input((5, 10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1853,
          "content": "make_input((5, 10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1871,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1873,
          "content": "FunctionInput(eps, momentum) if lazy else FunctionInput(num_features, eps, momentum)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1875,
          "content": "forward_input=FunctionInput(make_input(input_batch_shape))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1876,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1878,
          "content": "FunctionInput(eps, momentum, affine, track_running_stats) if lazy else",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1879,
          "content": "FunctionInput(num_features, eps, momentum, affine, track_running_stats)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1881,
          "content": "forward_input=FunctionInput(make_input(input_batch_shape)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1883,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1885,
          "content": "FunctionInput(eps, momentum) if lazy else FunctionInput(num_features, eps, momentum)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1887,
          "content": "forward_input=FunctionInput(make_input(input_no_batch_shape)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1890,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1892,
          "content": "FunctionInput(eps, momentum, affine, track_running_stats) if lazy else",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1893,
          "content": "FunctionInput(num_features, eps, momentum, affine, track_running_stats)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1895,
          "content": "forward_input=FunctionInput(make_input(input_no_batch_shape)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1904,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1905,
          "content": "constructor_input=FunctionInput([5], 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1906,
          "content": "forward_input=FunctionInput(make_input((4, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1908,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1909,
          "content": "constructor_input=FunctionInput([5], 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1910,
          "content": "forward_input=FunctionInput(make_input((128, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1912,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1913,
          "content": "constructor_input=FunctionInput([5], 1e-3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1914,
          "content": "forward_input=FunctionInput(make_input((4, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1916,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1917,
          "content": "constructor_input=FunctionInput([2, 2, 5], 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1918,
          "content": "forward_input=FunctionInput(make_input((4, 2, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1920,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1921,
          "content": "constructor_input=FunctionInput([2, 2, 5], 1e-3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1922,
          "content": "forward_input=FunctionInput(make_input((4, 2, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1924,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1925,
          "content": "constructor_input=FunctionInput([5], 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1926,
          "content": "forward_input=FunctionInput(make_input((0, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1928,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1929,
          "content": "constructor_input=FunctionInput([2, 2, 5], 1e-3, elementwise_affine=True, bias=False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1930,
          "content": "forward_input=FunctionInput(make_input((4, 2, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1952,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1953,
          "content": "constructor_input=FunctionInput([5], 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1954,
          "content": "forward_input=FunctionInput(make_input((4, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1957,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1958,
          "content": "constructor_input=FunctionInput([5], 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1959,
          "content": "forward_input=FunctionInput(make_input((128, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1962,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1963,
          "content": "constructor_input=FunctionInput([5], 1e-3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1964,
          "content": "forward_input=FunctionInput(make_input((4, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1967,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1968,
          "content": "constructor_input=FunctionInput([2, 2, 5], 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1969,
          "content": "forward_input=FunctionInput(make_input((4, 2, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1972,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1973,
          "content": "constructor_input=FunctionInput([2, 2, 5], 1e-3, False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1974,
          "content": "forward_input=FunctionInput(make_input((4, 2, 2, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1977,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1978,
          "content": "constructor_input=FunctionInput([5], 1e-3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1979,
          "content": "forward_input=FunctionInput(make_input((0, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1989,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1990,
          "content": "constructor_input=FunctionInput(3,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1991,
          "content": "forward_input=FunctionInput(make_input((1, 5, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1993,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1994,
          "content": "constructor_input=FunctionInput(2,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1995,
          "content": "forward_input=FunctionInput(make_input((1, 5, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1997,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1998,
          "content": "constructor_input=FunctionInput(1, 1., 0.5, 2.),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1999,
          "content": "forward_input=FunctionInput(make_input((1, 5, 7, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2008,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2009,
          "content": "constructor_input=FunctionInput(1.5, 2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2010,
          "content": "forward_input=FunctionInput(make_input((1, 3, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2012,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2013,
          "content": "constructor_input=FunctionInput(2, 2, 3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2014,
          "content": "forward_input=FunctionInput(make_input((1, 3, 7)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2015,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2016,
          "content": "constructor_input=FunctionInput(2, 2, 3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2017,
          "content": "forward_input=FunctionInput(make_input((3, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2028,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2029,
          "content": "constructor_input=FunctionInput(2, 2, 2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2030,
          "content": "forward_input=FunctionInput(make_input((1, 3, 7, 7)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2031,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2032,
          "content": "constructor_input=FunctionInput(2, 2, 2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2033,
          "content": "forward_input=FunctionInput(make_input((3, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2036,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2037,
          "content": "constructor_input=FunctionInput(1.5, 2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2038,
          "content": "forward_input=FunctionInput(make_input((1, 3, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2047,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2048,
          "content": "constructor_input=FunctionInput(2, 2, 2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2049,
          "content": "forward_input=FunctionInput(make_input((1, 3, 7, 7, 7)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2050,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2051,
          "content": "constructor_input=FunctionInput(2, 2, 2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2052,
          "content": "forward_input=FunctionInput(make_input((3, 7, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2055,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2056,
          "content": "constructor_input=FunctionInput(1.5, 2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2057,
          "content": "forward_input=FunctionInput(make_input((1, 3, 7, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2066,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2067,
          "content": "constructor_input=FunctionInput(4),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2068,
          "content": "forward_input=FunctionInput(make_input((2, 10, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2070,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2071,
          "content": "constructor_input=FunctionInput(4, 4),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2072,
          "content": "forward_input=FunctionInput(make_input((2, 10, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2074,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2075,
          "content": "constructor_input=FunctionInput(4, return_indices=True),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2076,
          "content": "forward_input=FunctionInput(make_input((2, 10, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2085,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2086,
          "content": "constructor_input=FunctionInput((3, 3), (2, 2), (1, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2087,
          "content": "forward_input=FunctionInput(make_input((3, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2089,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2090,
          "content": "constructor_input=FunctionInput((3, 3), (2, 2), (1, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2091,
          "content": "forward_input=FunctionInput(make_input((1, 3, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2093,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2094,
          "content": "constructor_input=FunctionInput((3, 3), (2, 2), (1, 1), return_indices=True),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2095,
          "content": "forward_input=FunctionInput(make_input((1, 3, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2103,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2104,
          "content": "constructor_input=FunctionInput((2, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2105,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2106,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2107,
          "content": "constructor_input=FunctionInput(2, (2, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2108,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2110,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2111,
          "content": "constructor_input=FunctionInput(2, 2, (1, 1, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2112,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2114,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2115,
          "content": "constructor_input=FunctionInput(2, 2, (1, 1, 1), return_indices=True),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2116,
          "content": "forward_input=FunctionInput(make_input((2, 3, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2128,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2129,
          "content": "constructor_input=FunctionInput(2, output_ratio=0.5, _random_samples=make_random_samples()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2130,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2132,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2133,
          "content": "constructor_input=FunctionInput((2, 3), output_size=(4, 3), _random_samples=make_random_samples()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2134,
          "content": "forward_input=FunctionInput(make_input((1, 3, 7, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2136,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2137,
          "content": "constructor_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2140,
          "content": "forward_input=FunctionInput(make_input((1, 3, 5, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2142,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2143,
          "content": "constructor_input=FunctionInput(2, output_ratio=0.5, _random_samples=make_random_samples()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2144,
          "content": "forward_input=FunctionInput(make_input((3, 5, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2147,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2148,
          "content": "constructor_input=FunctionInput((2, 3), output_size=(4, 3), _random_samples=make_random_samples()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2149,
          "content": "forward_input=FunctionInput(make_input((3, 7, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2162,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2163,
          "content": "constructor_input=FunctionInput(2, output_ratio=0.5, _random_samples=make_random_samples()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2164,
          "content": "forward_input=FunctionInput(make_input((2, 4, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2166,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2167,
          "content": "constructor_input=FunctionInput((2, 2, 2), output_size=(4, 4, 4), _random_samples=make_random_samples()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2168,
          "content": "forward_input=FunctionInput(make_input((2, 4, 7, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2170,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2171,
          "content": "constructor_input=FunctionInput((4, 2, 3), output_size=(10, 3, 2), _random_samples=make_random_samples()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2172,
          "content": "forward_input=FunctionInput(make_input((2, 4, 16, 7, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2174,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2175,
          "content": "constructor_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2178,
          "content": "forward_input=FunctionInput(make_input((2, 4, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2180,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2181,
          "content": "constructor_input=FunctionInput(2, output_ratio=0.5, _random_samples=make_random_samples()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2182,
          "content": "forward_input=FunctionInput(make_input((4, 5, 5, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2185,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2186,
          "content": "constructor_input=FunctionInput((2, 2, 2), output_size=(4, 4, 4), _random_samples=make_random_samples()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2187,
          "content": "forward_input=FunctionInput(make_input((4, 7, 7, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2197,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2198,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2199,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2202,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2203,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2204,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2208,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2209,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2210,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2213,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2214,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2215,
          "content": "forward_input=FunctionInput(make_input((2, 3, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2225,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2226,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2227,
          "content": "forward_input=FunctionInput(make_input(())),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2231,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2232,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2233,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2236,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2237,
          "content": "constructor_input=FunctionInput(),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2238,
          "content": "forward_input=FunctionInput(make_input(4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2263,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2264,
          "content": "forward_input=FunctionInput(make_input((50,)), make_input((50,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2290,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2291,
          "content": "forward_input=FunctionInput(make_input((10,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2298,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2299,
          "content": "forward_input=FunctionInput(make_input((5, 10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2329,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2330,
          "content": "forward_input=FunctionInput(make_input((5, 10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2368,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2369,
          "content": "forward_input=FunctionInput(make_input((5, 10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2395,
          "content": "ModuleInput(constructor_input=FunctionInput(**constructor_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2396,
          "content": "forward_input=FunctionInput(make_input((5, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2423,
          "content": "samples.append(ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2424,
          "content": "constructor_input=FunctionInput(encoder_layer, num_layers),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2434,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2435,
          "content": "constructor_input=FunctionInput(4, 2, 16, 0.0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2436,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2437,
          "content": "make_input((2, 3, 4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2441,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2442,
          "content": "constructor_input=FunctionInput(4, 2, 8, 0.0, F.gelu),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2443,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2444,
          "content": "make_input((2, 3, 4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2448,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2449,
          "content": "constructor_input=FunctionInput(4, 2, 8, 0.0, bias=False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2450,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2451,
          "content": "make_input((2, 3, 4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2462,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2463,
          "content": "constructor_input=FunctionInput(d_model=4, nhead=2, dim_feedforward=8,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2466,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2467,
          "content": "make_input((3, 4)), src_mask=src_mask, src_key_padding_mask=src_key_padding_mask",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2475,
          "content": "# since the fast path requires no_grad mode, we run the fast path in .eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2488,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2489,
          "content": "constructor_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2492,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2493,
          "content": "make_input((2, 3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2508,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2509,
          "content": "constructor_input=FunctionInput(4, 2, 16, 0.0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2510,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2511,
          "content": "make_input((2, 3, 4)), make_input((2, 3, 4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2515,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2516,
          "content": "constructor_input=FunctionInput(4, 2, 8, 0.0, F.gelu),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2517,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2518,
          "content": "make_input((2, 3, 4)), make_input((2, 3, 4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2522,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2523,
          "content": "constructor_input=FunctionInput(4, 2, 8, 0.0, bias=False),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2524,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2525,
          "content": "make_input((2, 3, 4)), make_input((2, 3, 4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2538,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2539,
          "content": "constructor_input=FunctionInput(d_model=4, nhead=2, dim_feedforward=8,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2542,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2543,
          "content": "make_input((3, 4)), make_input((3, 4)), tgt_mask=tgt_mask, memory_mask=memory_mask,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2551,
          "content": "src, tgt = make_input((2, 3, 4)), make_input((2, 3, 4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2557,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2558,
          "content": "constructor_input=FunctionInput(d_model=4, nhead=2, dim_feedforward=8,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2561,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2583,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2584,
          "content": "constructor_input=FunctionInput(d_model=4, nhead=2, dim_feedforward=8,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2587,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2588,
          "content": "make_input((3, 4)), make_input((3, 4)), tgt_mask=tgt_mask, src_mask=src_mask,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2597,
          "content": "src, tgt = make_input((2, 3, 4)), make_input((2, 3, 4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2605,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2606,
          "content": "constructor_input=FunctionInput(d_model=4, nhead=2, dim_feedforward=8,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2609,
          "content": "forward_input=FunctionInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2620,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2621,
          "content": "constructor_input=FunctionInput(num_embeddings=4, embedding_dim=3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2622,
          "content": "forward_input=FunctionInput(make_empty(2, 3).random_(4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2624,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2625,
          "content": "constructor_input=FunctionInput(num_embeddings=4, embedding_dim=3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2626,
          "content": "forward_input=FunctionInput(make_empty(1, 512).random_(4).expand(7, 512)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2642,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2643,
          "content": "constructor_input=FunctionInput(embed_dim=3, num_heads=3, batch_first=True,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2645,
          "content": "forward_input=FunctionInput(make_input((3, 3)), make_input((3, 3)), make_input((3, 3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2651,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2652,
          "content": "constructor_input=FunctionInput(embed_dim=3, num_heads=3, batch_first=False,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2654,
          "content": "forward_input=FunctionInput(make_input((3, 3)), make_input((3, 3)), make_input((3, 3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2667,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2668,
          "content": "constructor_input=FunctionInput(5, 10),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2669,
          "content": "forward_input=FunctionInput(make_input(5), make_input(10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2672,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2673,
          "content": "constructor_input=FunctionInput(5, 10, bias=True),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2674,
          "content": "forward_input=FunctionInput(make_input(5), make_input(10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2684,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2685,
          "content": "constructor_input=FunctionInput(5, 10, bias=True, nonlinearity='relu'),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2686,
          "content": "forward_input=FunctionInput(make_input(5), make_input(10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2698,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2699,
          "content": "constructor_input=FunctionInput(5, 10),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2700,
          "content": "forward_input=FunctionInput(make_input(5), (make_input(10), make_input(10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2703,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2704,
          "content": "constructor_input=FunctionInput(5, 10, bias=True),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2705,
          "content": "forward_input=FunctionInput(make_input(5), (make_input(10), make_input(10))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2750,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2751,
          "content": "constructor_input=FunctionInput(**cons_args),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2752,
          "content": "forward_input=FunctionInput(make_input((3, 2))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2757,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2758,
          "content": "constructor_input=FunctionInput(**cons_args_hidden),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2759,
          "content": "forward_input=FunctionInput(make_input((3, 2)), make_input((4 if bidir else 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2765,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2766,
          "content": "constructor_input=FunctionInput(**cons_args),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2767,
          "content": "forward_input=FunctionInput(make_packed_sequence(make_input((5, 2, 2)), torch.tensor([5, 3]))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2772,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2773,
          "content": "constructor_input=FunctionInput(**cons_args),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2774,
          "content": "forward_input=FunctionInput(make_packed_sequence(make_input((5, 5, 2)), torch.tensor([5, 3, 3, 2, 2]))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2802,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2803,
          "content": "constructor_input=FunctionInput(**cons_args),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2804,
          "content": "forward_input=FunctionInput(make_input((2, 2))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2810,
          "content": "hx = (make_input((4 if bidir else 2, h_out)), make_input((4 if bidir else 2, hidden_size)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2812,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2813,
          "content": "constructor_input=FunctionInput(**cons_args_hidden),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2814,
          "content": "forward_input=FunctionInput(make_input((3, 2)), hx),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2828,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2829,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2830,
          "content": "forward_input=FunctionInput(make_input((2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2833,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2834,
          "content": "constructor_input=FunctionInput((1, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2835,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2843,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2844,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2845,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2848,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2849,
          "content": "constructor_input=FunctionInput((1, 2, 3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2850,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2858,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2859,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2860,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2863,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2864,
          "content": "constructor_input=FunctionInput((1, 2, 1, 2, 1, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2865,
          "content": "forward_input=FunctionInput(make_input((3, 3, 3, 3, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2873,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2874,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2875,
          "content": "forward_input=FunctionInput(make_input((3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2878,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2879,
          "content": "constructor_input=FunctionInput((1, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2880,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2888,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2889,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2890,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2893,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2894,
          "content": "constructor_input=FunctionInput((1, 2, 3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2895,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2903,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2904,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2905,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2908,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2909,
          "content": "constructor_input=FunctionInput((1, 2, 3, 4, 5, 6)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2910,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5, 6, 7))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2918,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2919,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2920,
          "content": "forward_input=FunctionInput(make_input((3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2923,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2924,
          "content": "constructor_input=FunctionInput((1, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2925,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2933,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2934,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2935,
          "content": "forward_input=FunctionInput(make_input((1, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2938,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2939,
          "content": "constructor_input=FunctionInput((1, 2, 3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2940,
          "content": "forward_input=FunctionInput(make_input((1, 2, 3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2948,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2949,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2950,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2953,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2954,
          "content": "constructor_input=FunctionInput((1, 2, 3, 4, 5, 6)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2955,
          "content": "forward_input=FunctionInput(make_input((1, 2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2963,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2964,
          "content": "constructor_input=FunctionInput(1, 2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2965,
          "content": "forward_input=FunctionInput(make_input((3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2968,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2969,
          "content": "constructor_input=FunctionInput((1, 2), 3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2970,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2978,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2979,
          "content": "constructor_input=FunctionInput(1, 3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2980,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2983,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2984,
          "content": "constructor_input=FunctionInput((1, 2, 3, 4), 5),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2985,
          "content": "forward_input=FunctionInput(make_input((1, 2, 3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2993,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2994,
          "content": "constructor_input=FunctionInput(1, 3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2995,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2998,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2999,
          "content": "constructor_input=FunctionInput((1, 2, 3, 4, 5, 6), 7),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3000,
          "content": "forward_input=FunctionInput(make_input((1, 2, 1, 2, 1))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3019,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3020,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3021,
          "content": "forward_input=FunctionInput(make_input((3, 4))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3024,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3025,
          "content": "constructor_input=FunctionInput((1, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3026,
          "content": "forward_input=FunctionInput(make_input((1, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3029,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3030,
          "content": "constructor_input=FunctionInput((3, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3031,
          "content": "forward_input=FunctionInput(make_input((1, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3034,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3035,
          "content": "constructor_input=FunctionInput((3, 3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3036,
          "content": "forward_input=FunctionInput(make_input((1, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3060,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3061,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3062,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3065,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3066,
          "content": "constructor_input=FunctionInput((1, 2, 2, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3067,
          "content": "forward_input=FunctionInput(make_input((1, 1, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3070,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3071,
          "content": "constructor_input=FunctionInput((2, 3, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3072,
          "content": "forward_input=FunctionInput(make_input((1, 1, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3075,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3076,
          "content": "constructor_input=FunctionInput((3, 3, 3, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3077,
          "content": "forward_input=FunctionInput(make_input((1, 1, 3, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3128,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3129,
          "content": "constructor_input=FunctionInput(1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3130,
          "content": "forward_input=FunctionInput(make_input((3, 4, 5, 6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3133,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3134,
          "content": "constructor_input=FunctionInput((1, 2, 1, 2, 1, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3135,
          "content": "forward_input=FunctionInput(make_input((1, 1, 2, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3138,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3139,
          "content": "constructor_input=FunctionInput((3, 2, 2, 1, 1, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3140,
          "content": "forward_input=FunctionInput(make_input((1, 1, 2, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3143,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3144,
          "content": "constructor_input=FunctionInput((3, 3, 2, 1, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3145,
          "content": "forward_input=FunctionInput(make_input((1, 1, 2, 2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3182,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3183,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3184,
          "content": "constructor_input=FunctionInput(10, 20),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3185,
          "content": "forward_input=FunctionInput(make_input(3, 11), make_input(3, 20)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3191,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3192,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3193,
          "content": "constructor_input=FunctionInput(10, 20),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3194,
          "content": "forward_input=FunctionInput(make_input(3, 10), make_input(3, 21)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3200,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3201,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3202,
          "content": "constructor_input=FunctionInput(10, 20),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3203,
          "content": "forward_input=FunctionInput(make_input(3, 10), make_input(5, 20)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3209,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3210,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3211,
          "content": "constructor_input=FunctionInput(10, 20),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3212,
          "content": "forward_input=FunctionInput(make_input(3, 10), make_input(3, 1, 1, 20)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3218,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3219,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3220,
          "content": "constructor_input=FunctionInput(10, 20, 'relu'),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3221,
          "content": "forward_input=FunctionInput(make_input(3, 10), make_input(3, 21)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3227,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3228,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3229,
          "content": "constructor_input=FunctionInput(10, 20, 'tanh'),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3230,
          "content": "forward_input=FunctionInput(make_input(3, 10), make_input(3, 21)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3242,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3243,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3244,
          "content": "constructor_input=FunctionInput(10, 20),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3245,
          "content": "forward_input=FunctionInput(make_input(3, 11), (make_input(3, 20), make_input(3, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3251,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3252,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3253,
          "content": "constructor_input=FunctionInput(10, 20),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3254,
          "content": "forward_input=FunctionInput(make_input(3, 10), (make_input(3, 21), make_input(3, 21))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3260,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3261,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3262,
          "content": "constructor_input=FunctionInput(10, 20),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3263,
          "content": "forward_input=FunctionInput(make_input(3, 10), (make_input(5, 20), make_input(5, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3269,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3270,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3271,
          "content": "constructor_input=FunctionInput(10, 20),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3272,
          "content": "forward_input=FunctionInput(make_input(3, 10), (make_input(3, 1, 1, 20), make_input(3, 1, 1, 20))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3284,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3285,
          "content": "ModuleInput(constructor_input=FunctionInput(10, 0, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3290,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3291,
          "content": "ModuleInput(constructor_input=FunctionInput(10, 10, 0)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3305,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3306,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3307,
          "content": "constructor_input=FunctionInput(1, 3) if is_constant else FunctionInput(3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3308,
          "content": "forward_input=FunctionInput(make_input((2, 3, 4, 5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3323,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3324,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3325,
          "content": "constructor_input=FunctionInput(1, 3) if is_constant else FunctionInput(3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3326,
          "content": "forward_input=FunctionInput(make_input((2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3341,
          "content": "ErrorModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3342,
          "content": "ModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3343,
          "content": "constructor_input=FunctionInput(1, 3) if is_constant else FunctionInput(3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3344,
          "content": "forward_input=FunctionInput(make_input((2, 3))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 269,
          "content": "def _make_conv_test_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 919,
          "content": "module = module.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 922,
          "content": "model = get_script_module(module, tracing, inputs[0]).eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1261,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1265,
          "content": "model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1508,
          "content": "m_eager = model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1605,
          "content": "m = M().eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3409,
          "content": "torch.ao.quantization.move_exported_model_to_eval(prepare_model)",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 224,
          "content": "yield SampleInput(result, args=())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 260,
          "content": "yield SampleInput(result, args=([2, 12],))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 305,
          "content": "yield SampleInput([r0, r1, r2], args=(0,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 338,
          "content": "yield SampleInput(x, args=([1, 3, 6], 1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 441,
          "content": "yield SampleInput(boxes, args=(scores, iou_threshold))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 21,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 138,
          "content": "yield SampleInput(make_arg(2, 2, 2, low=0.1, high=2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 149,
          "content": "yield SampleInput(make_arg(2, 2, 2, low=0.1, high=2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 164,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 183,
          "content": "yield SampleInput(q, k, v, score_mod, block_mask)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 190,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 210,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 40,
          "content": "def create_input(call_args, requires_grad=True, non_contiguous=False, call_kwargs=None, dtype=torch.float, device=None):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 418,
          "content": "def _is_tensor_input(arg):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 422,
          "content": "self.arg_types = ['t' if self._is_tensor_input(arg) else 's' for arg in args]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 423,
          "content": "self.kwarg_types = {k: 't' if self._is_tensor_input(v) else 's' for k, v in kwargs.items()}",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 424,
          "content": "self.tensor_args = [arg for arg in args if self._is_tensor_input(arg)]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 425,
          "content": "self.nontensor_args = [arg for arg in args if not self._is_tensor_input(arg)]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 426,
          "content": "self.tensor_kwargs = {k: v for k, v in kwargs.items() if self._is_tensor_input(v)}",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 427,
          "content": "self.nontensor_kwargs = {k: v for k, v in kwargs.items() if not self._is_tensor_input(v)}",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 513,
          "content": "self_variable = create_input((self_size,))[0][0]",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 516,
          "content": "args_variable, _kwargs_variable = create_input(args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 626,
          "content": "# eval() is not supported, so skip these tests",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 672,
          "content": "args_variable, _kwargs_variable = create_input(input, dtype=input_dtype)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 125,
          "content": "def log_input(name: str, var: object) -> None:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 348,
          "content": "def get_tracked_input() -> Optional[TrackedInput]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 354,
          "content": "def clear_tracked_input() -> None:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 415,
          "content": "self._set_tracked_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 416,
          "content": "TrackedInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 422,
          "content": "def _set_tracked_input(self, tracked_input: TrackedInput):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1031,
          "content": "# The following cool snippet is copied from Py3 core library subprocess.call",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2159,
          "content": "#   except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3993,
          "content": "# Compares a torch function with a reference function for a given sample input (object of SampleInput)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4511,
          "content": "except subprocess.CalledProcessError as e:",
          "pattern": "subprocess\\.call",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 56,
          "content": "exec(code, glob, loc)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 212,
          "content": "debug_files = (pickle.load(f) for f in debug_files_stream)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 162,
          "content": "# Allow calling either as SampleInput(input, args=args, kwargs=kwargs), or as",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 163,
          "content": "# SampleInput(input, *args, **kwargs) but not to mix the two forms",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 229,
          "content": "return f'SampleInput({\", \".join(a for a in arguments if a is not None)})'",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 291,
          "content": "return SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 502,
          "content": "#   a SampleInput (see above) and data about the expected error.",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1723,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1920,
          "content": "si = SampleInput(torch.tensor((1, 2, 3), device=device), args=(2,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1921,
          "content": "yield ErrorInput(si, error_type=Exception, error_regex=\"\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1924,
          "content": "si = SampleInput(2, args=(torch.tensor((1, 2, 3), device=device),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1925,
          "content": "yield ErrorInput(si, error_type=Exception, error_regex=\"\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1931,
          "content": "si = SampleInput(2, args=(3,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1932,
          "content": "yield ErrorInput(si, error_type=Exception, error_regex=\"\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1977,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2007,
          "content": "yield SampleInput(a, args=(b,), kwargs=op.sample_kwargs(device, dtype, a)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2071,
          "content": "yield SampleInput(lhs, args=(rhs,), kwargs=op.sample_kwargs(device, dtype, lhs)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2106,
          "content": "yield SampleInput(lhs, args=(rhs,), kwargs=op.sample_kwargs(device, dtype, lhs)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2135,
          "content": "yield SampleInput(lhs, args=(rhs,), kwargs=op.sample_kwargs(device, dtype, lhs)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2150,
          "content": "yield SampleInput(lhs, args=(rhs,), kwargs=op.sample_kwargs(device, dtype, lhs)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2188,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2212,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2218,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2228,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2263,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2268,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2291,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2294,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2302,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2319,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2324,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2338,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2343,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2359,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2399,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2504,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2518,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2599,
          "content": "yield SampleInput(a, kwargs=op.sample_kwargs(device, dtype, a)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2621,
          "content": "yield SampleInput(a, kwargs=op.sample_kwargs(device, dtype, a)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2631,
          "content": "yield SampleInput(a, kwargs=op.sample_kwargs(device, dtype, a)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2641,
          "content": "yield SampleInput(sample.input, kwargs=op.sample_kwargs(device, dtype, a)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2650,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2668,
          "content": "yield SampleInput(t, kwargs=op.sample_kwargs(device, dtype, t)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2672,
          "content": "yield SampleInput(t, kwargs=op.sample_kwargs(device, dtype, t)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2680,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2705,
          "content": "yield SampleInput(a, kwargs=op.sample_kwargs(device, dtype, a)[0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2877,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2883,
          "content": "yield SampleInput(nd_tensor(), norm=\"ortho\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2884,
          "content": "yield SampleInput(nd_tensor(), s=(8,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2885,
          "content": "yield SampleInput(oned_tensor())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2886,
          "content": "yield from (SampleInput(nd_tensor(), dim=dim) for dim in [-1, -2, -3, (0, -1)])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2888,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2894,
          "content": "yield SampleInput(nd_tensor(), norm=\"ortho\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2895,
          "content": "yield SampleInput(nd_tensor(), s=(6, 8) if not is_fp16_or_chalf else (4, 8))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2896,
          "content": "yield SampleInput(nd_tensor(), dim=0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2897,
          "content": "yield SampleInput(nd_tensor(), dim=(0, -1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2898,
          "content": "yield SampleInput(nd_tensor(), dim=(-3, -2, -1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2900,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2906,
          "content": "yield SampleInput(nd_tensor(), norm=\"ortho\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2907,
          "content": "yield SampleInput(nd_tensor(), n=7 if not is_fp16_or_chalf else 8)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2908,
          "content": "yield SampleInput(oned_tensor())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2909,
          "content": "yield from (SampleInput(nd_tensor(), dim=dim) for dim in [-1, -2, -3])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3119,
          "content": "def gradcheck_wrapper_hermitian_input(op, input, *args, **kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3134,
          "content": "def gradcheck_wrapper_triangular_input(op, *args, upper=False, idx=0, **kwargs):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3158,
          "content": "return gradcheck_wrapper_triangular_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3214,
          "content": "return SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 172,
          "content": "yield SampleInput(make_input(3), 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 174,
          "content": "yield SampleInput(make_input(20, 30, 40), dim=1, start=1, end=-2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 176,
          "content": "yield SampleInput(make_input(20, 30, 40), dim=1, start=1, end=-2, step=3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 178,
          "content": "yield SampleInput(make_input(20, 30, 40), dim=0, start=-10, end=-2, step=2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 202,
          "content": "yield SampleInput(make_input((S, S, S)), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 208,
          "content": "yield SampleInput(make_arg(6), 2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 209,
          "content": "yield SampleInput(make_arg(S, S, S), [1, 2, 3])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 214,
          "content": "yield SampleInput(make_arg(6, S), 2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 215,
          "content": "yield SampleInput(make_arg(S, S, S), [1, 2, 3])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 220,
          "content": "yield SampleInput(make_arg(S, S, S), [1, 2, 3])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "yield SampleInput(make_arg(S, S, 6), 2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 227,
          "content": "yield ErrorInput(SampleInput(make_arg(()), 0), error_regex=err_msg1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 232,
          "content": "yield ErrorInput(SampleInput(make_arg((S, S, S)), 0), error_regex=err_msg2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 236,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 237,
          "content": "SampleInput(make_arg((S, S, S)), \"abc\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 244,
          "content": "yield ErrorInput(SampleInput(make_arg(S), 0), error_regex=err_msg1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 249,
          "content": "yield ErrorInput(SampleInput(make_arg(S, S, S), 0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 254,
          "content": "yield ErrorInput(SampleInput(make_arg(S, S, S), \"abc\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 261,
          "content": "yield ErrorInput(SampleInput(make_arg(S), 0), error_regex=err_msg1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 266,
          "content": "yield ErrorInput(SampleInput(make_arg(S, S, S), 0), error_regex=err_msg2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 284,
          "content": "yield SampleInput(input_t, args=(output_shape, stride), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 292,
          "content": "yield SampleInput(make_arg(), (2, 2), (1, 2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 293,
          "content": "yield SampleInput(make_arg(), (2, 2), (1, 2), storage_offset=0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 294,
          "content": "yield SampleInput(make_arg(), (2, 2), (1, 2), storage_offset=10)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 315,
          "content": "yield SampleInput(input_t, input_src, output_shape, stride, storage_offset=storage_offset)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 324,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 325,
          "content": "SampleInput(input_t, input_src, [2, 2], [200, 200], storage_offset=0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 343,
          "content": "yield SampleInput(input_t, r=r, with_replacement=with_replacement)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 354,
          "content": "yield SampleInput(a)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 357,
          "content": "yield SampleInput(a, b)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 360,
          "content": "yield SampleInput(a, b, c)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 376,
          "content": "yield SampleInput(make_arg(input_shape), args=(make_arg(input_shape),), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 378,
          "content": "yield SampleInput(make_arg((1, 2, 3)), args=(make_arg((2, 1, 3)),), kwargs={'dim': -1})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 379,
          "content": "yield SampleInput(make_arg((1, 2, 3)), args=(make_arg((2, 1, 3)),), kwargs={'dim': -2})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 380,
          "content": "yield SampleInput(make_arg((2, 3)), args=(make_arg((2, 1, 3)),), kwargs={'dim': -1})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 394,
          "content": "yield SampleInput(make_arg(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 407,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 408,
          "content": "SampleInput(make_arg(shape)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 436,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 453,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 466,
          "content": "yield SampleInput(make_arg((1, 2, 3)), args=(None, None, None, None), kwargs={'training': True})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 484,
          "content": "yield SampleInput(make_arg(shape), output, dim, input_dtype)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 497,
          "content": "yield SampleInput(sample.input, args=(args[2], args[3], args[0], args[1], training, momentum, eps))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 512,
          "content": "yield SampleInput(sample.input, args=(args[2], args[3], args[0], args[1], training, momentum, eps))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 514,
          "content": "yield SampleInput(sample.input, args=(args[2], args[3], training, momentum, eps))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 528,
          "content": "yield SampleInput(sample.input, args=(args[2], args[3], args[0], args[1], momentum, eps))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 541,
          "content": "yield SampleInput(make_arg(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 560,
          "content": "yield SampleInput(make_arg(shape), args=(weight_tensor,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 563,
          "content": "yield SampleInput(make_arg(shape), args=(make_arg((channel_size,)),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 567,
          "content": "yield SampleInput(make_arg((S, S)), kwargs=dict(weight=weight_tensor,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 568,
          "content": "yield SampleInput(make_arg((S, S)), kwargs=dict(weight=make_arg((S,)),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 588,
          "content": "yield ErrorInput(SampleInput(inp, kwargs={'weight': weight}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 594,
          "content": "yield ErrorInput(SampleInput(inp, kwargs={'weight': weight}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 600,
          "content": "yield ErrorInput(SampleInput(inp, kwargs={'weight': weight}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 649,
          "content": "yield SampleInput(make_arg(shape), args=args, name=name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 652,
          "content": "yield SampleInput(make_arg(shape, exclude_zero=True), args=args, name=name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 665,
          "content": "yield SampleInput(make_arg(shape), args=args, name=name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 677,
          "content": "yield SampleInput(make_arg(shape), args=args, name=name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 691,
          "content": "yield SampleInput(make_arg(shape), args=args, name=name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 712,
          "content": "yield SampleInput(lhs, args=(rhs,), broadcasts_input=broadcasts_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 714,
          "content": "yield SampleInput(lhs, args=(lhs.clone().detach_(),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 740,
          "content": "yield SampleInput(lhs, args=tuple(args), kwargs=sample_kwargs, broadcasts_input=broadcasts_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 758,
          "content": "yield SampleInput(inp, args=tuple(arg0))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 768,
          "content": "yield SampleInput(lhs, args=(rhs,), kwargs={'alpha': 2})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 770,
          "content": "yield SampleInput(lhs, args=(rhs,), kwargs={'alpha': True})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 775,
          "content": "yield SampleInput(lhs, args=(rhs,), kwargs={'alpha': neg_alpha})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 777,
          "content": "yield SampleInput(lhs, args=(rhs,), kwargs={'alpha': False})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 780,
          "content": "yield ErrorInput(SampleInput(0, args=(3, 0)), error_type=RuntimeError, error_regex='step must be nonzero')",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 781,
          "content": "yield ErrorInput(SampleInput(0, args=(-3, 2)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 783,
          "content": "yield ErrorInput(SampleInput(0, args=(3, -2)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 785,
          "content": "yield ErrorInput(SampleInput(1549556900, args=(1549556828, 1989724)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 787,
          "content": "yield ErrorInput(SampleInput(0, args=(float('inf'), 2)), error_type=RuntimeError, error_regex='unsupported range')",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 788,
          "content": "yield ErrorInput(SampleInput(float('-inf'), args=(1, 2)), error_type=RuntimeError, error_regex='unsupported range')",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 837,
          "content": "yield SampleInput(end, kwargs={\"dtype\": dtype, \"device\": device})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 839,
          "content": "yield SampleInput(0, kwargs={\"end\": end, \"dtype\": dtype, \"device\": device})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 841,
          "content": "yield SampleInput(start, args=(end,), kwargs={\"dtype\": dtype, \"device\": device})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 843,
          "content": "yield SampleInput(start, args=(end, step), kwargs={\"dtype\": dtype, \"device\": device})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 845,
          "content": "yield SampleInput(2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 846,
          "content": "yield SampleInput(1, args=(3, 1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 855,
          "content": "yield SampleInput(input=shape, kwargs=dict(dtype=dtype, device=device, requires_grad=requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 865,
          "content": "yield SampleInput(make_arg(shape), args=(mean, std))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 870,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 871,
          "content": "SampleInput(t, args=(0, invalid_std)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 884,
          "content": "yield SampleInput(make_arg(shape), args=(median, gamma))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 890,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 891,
          "content": "SampleInput(t, args=(0, invalid_scale,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 906,
          "content": "yield SampleInput(make_arg(shape), args=(rate,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 912,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 913,
          "content": "SampleInput(t, args=(invalid_rate,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 928,
          "content": "yield SampleInput(make_arg(shape), args=(rate,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 934,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 935,
          "content": "SampleInput(t, args=(neg_prob,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 950,
          "content": "yield SampleInput(make_arg(shape), args=(mean, std))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 956,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 957,
          "content": "SampleInput(t, args=(0, invalid_std)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 972,
          "content": "yield SampleInput(make_arg(shape), args=(hi, lo))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 982,
          "content": "yield SampleInput(size, kwargs={'dtype': dtype, 'device': device})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 995,
          "content": "yield SampleInput(size, fill_value, dtype=dtype, device=device)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1000,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1001,
          "content": "SampleInput(t, args=(3, -1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1008,
          "content": "yield ErrorInput(SampleInput(0, args=(3, -1)), error_type=RuntimeError, error_regex='number of steps must be non-negative')",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1009,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1010,
          "content": "SampleInput(0, args=(3, 1.)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1014,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1015,
          "content": "SampleInput(torch.tensor([1, 1], device=device), args=(torch.tensor([3, 3], device=device), 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1030,
          "content": "yield SampleInput(start, args=(end, nstep), kwargs={\"dtype\": dtype, \"device\": device})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1032,
          "content": "yield SampleInput(1, args=(3, 1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1054,
          "content": "yield SampleInput(start, args=(end, nstep), kwargs=tensor_options)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1056,
          "content": "yield SampleInput(1, args=(3, 1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1071,
          "content": "yield SampleInput(start, args=(end, nstep), kwargs={\"dtype\": dtype, \"device\": device})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1073,
          "content": "yield SampleInput(start, args=(end, nstep, base), kwargs={\"dtype\": dtype, \"device\": device})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1075,
          "content": "yield SampleInput(1, args=(3, 1, 2.))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1100,
          "content": "yield SampleInput(start, args=(end, nstep), kwargs=tensor_options)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1102,
          "content": "yield SampleInput(start, args=(end, nstep, base), kwargs=tensor_options)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1104,
          "content": "yield SampleInput(1, args=(3, 1, 2.))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1122,
          "content": "yield SampleInput(lhs, args=(rhs,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1129,
          "content": "yield ErrorInput(SampleInput(make_float_arg(()), args=(make_float_arg(()),), kwargs={'rtol': -0.4}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1133,
          "content": "yield ErrorInput(SampleInput(make_float_arg(()), args=(make_float_arg(()),), kwargs={'atol': -0.4}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1140,
          "content": "yield SampleInput(make_arg((1, 2)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1141,
          "content": "yield SampleInput(make_arg((2,)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1142,
          "content": "yield SampleInput(make_arg(()))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1153,
          "content": "yield SampleInput(make_arg(first_shape), args=(make_arg(second_shape),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1156,
          "content": "yield SampleInput(make_arg(first_shape), args=(make_arg_conj(second_shape),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1159,
          "content": "yield SampleInput(make_arg((0, S)), args=(make_arg(S, M),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1160,
          "content": "yield SampleInput(make_arg((S, 0)), args=(make_arg(0, M),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1179,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1188,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1194,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1202,
          "content": "yield SampleInput(make_arg(S, M), make_arg(S, 0), make_arg(0, M), **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1204,
          "content": "yield SampleInput(make_arg(M), make_arg(S, 0), make_arg(0, M), **kwargs).with_metadata(broadcasts_input=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1213,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1228,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1240,
          "content": "yield SampleInput(make_arg(S, M), make_arg(M))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1244,
          "content": "yield SampleInput(make_arg(M, S, M), make_arg(M, M, S))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1252,
          "content": "yield SampleInput(make_arg((S, )), make_arg((S, )))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1257,
          "content": "yield SampleInput(make_arg((S, )), make_arg_conj((S, )))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1263,
          "content": "yield ErrorInput(SampleInput(make_input(1), args=(make_input(3, dtype=torch.float16),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1265,
          "content": "yield ErrorInput(SampleInput(make_input(1, 1), args=(make_input(3),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1267,
          "content": "yield ErrorInput(SampleInput(make_input(9), args=(make_input(3),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1270,
          "content": "yield ErrorInput(SampleInput(make_input(3), args=(make_input(3, device=\"cpu\"),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1291,
          "content": "yield SampleInput(make_arg(size), args=(make_arg(mat), make_arg(vec)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1309,
          "content": "yield SampleInput(make_arg(input_shape), args=(make_arg(batch1_shape), make_arg(batch2_shape)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1311,
          "content": "yield SampleInput(make_arg(input_shape), args=(make_arg(batch1_shape), make_arg(batch2_shape)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1330,
          "content": "yield SampleInput(*args).with_metadata(broadcasts_input=broadcasts_input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1337,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1380,
          "content": "yield SampleInput(arg1, args=(arg2, arg3), kwargs=dict(value=value))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1382,
          "content": "yield SampleInput(arg1, args=(arg2, arg3))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1394,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1403,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1414,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1433,
          "content": "yield SampleInput(_make_tensor(shape), args=(_make_tensor(shape, requires_grad=False),), kwargs={})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1434,
          "content": "yield SampleInput(_make_tensor(shape), args=(_make_tensor(shape, requires_grad=False),),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1441,
          "content": "yield SampleInput(make_arg(S, M), make_arg(S), make_arg(M))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1443,
          "content": "yield SampleInput(make_arg(), make_arg(S), make_arg(M)).with_metadata(broadcasts_input=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1452,
          "content": "yield SampleInput(make_arg(S, M), make_arg(S), make_arg(M), beta=beta, alpha=alpha)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1454,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1465,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1473,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1487,
          "content": "yield SampleInput(make_arg(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1508,
          "content": "yield SampleInput(_make_tensor(input_shape), args=(target,), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1535,
          "content": "yield SampleInput(input, args=(target,), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1541,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5,),), kwargs={'reduction': 'abc'}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1544,
          "content": "yield ErrorInput(SampleInput(make_input(5, 0), args=(make_input(5,),), kwargs={}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1547,
          "content": "yield ErrorInput(SampleInput(make_input(0,), args=(make_input(5,),), kwargs={}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1551,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5, 4),), kwargs={}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1554,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5,),), kwargs={}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1557,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5,),), kwargs={'weight': make_input(())}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1559,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5,),), kwargs={'weight': make_input(5, 4)}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1561,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5,),), kwargs={'weight': make_input(5,)}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1564,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5,),), kwargs={'p': 3}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1584,
          "content": "yield SampleInput(t, dim, keepdim)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1591,
          "content": "yield SampleInput(t, 0, False)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1594,
          "content": "yield SampleInput(t, 0, False)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1599,
          "content": "yield SampleInput(t, 0, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1620,
          "content": "yield SampleInput(t, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1632,
          "content": "yield SampleInput(make_arg(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1633,
          "content": "yield SampleInput(make_arg(shape).transpose(0, -1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1634,
          "content": "yield SampleInput(make_arg(shape, noncontiguous=True))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1635,
          "content": "yield SampleInput(make_arg(shape, noncontiguous=True).transpose(0, -1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1651,
          "content": "yield SampleInput(_make_tensor(shape), args=(target,), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1676,
          "content": "yield SampleInput(_make_tensor(shape), args=(target,), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1682,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5, 4),), kwargs={'reduction': 'abc'}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1685,
          "content": "yield ErrorInput(SampleInput(make_input(5, 0), args=(make_input(5, 4),), kwargs={}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1688,
          "content": "yield ErrorInput(SampleInput(make_input(0,), args=(make_input(0,),), kwargs={}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1692,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(4,),), kwargs={}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1695,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input((),),), kwargs={}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1710,
          "content": "yield SampleInput(high, sample.input.shape, *sample.args, **sample.kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1712,
          "content": "yield SampleInput(low, high, sample.input.shape, *sample.args, **sample.kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1720,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1726,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1749,
          "content": "yield SampleInput(_make_tensor(shape),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1761,
          "content": "inp1 = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1763,
          "content": "inp2 = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1765,
          "content": "target = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1767,
          "content": "yield SampleInput(inp1, args=(inp2, target), kwargs={'reduction': reduction})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1770,
          "content": "inp1 = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1772,
          "content": "inp2 = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1774,
          "content": "target = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1776,
          "content": "yield SampleInput(inp1, args=(inp2, target), kwargs={'reduction': reduction})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1779,
          "content": "inp1 = make_input((5, 2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1780,
          "content": "inp2 = make_input((5, 1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1781,
          "content": "target = make_input((1, 2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1782,
          "content": "yield SampleInput(inp1, args=(inp2, target), kwargs={'reduction': reduction})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1787,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5, 4), make_input(5, 4),), kwargs={'reduction': 'abc'}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1790,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5, 4), make_input(5,),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1815,
          "content": "yield SampleInput(t, output_shape, strides, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1817,
          "content": "yield SampleInput(t, output_shape, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1829,
          "content": "yield SampleInput(shape, strides, requires_grad=requires_grad, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1838,
          "content": "yield SampleInput(case, device=device, dtype=dtype, requires_grad=requires_grad)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1848,
          "content": "yield SampleInput(case, layout, device=device, dtype=dtype, requires_grad=requires_grad)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1851,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1852,
          "content": "SampleInput((2,), args=((0, 1),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1856,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1857,
          "content": "SampleInput((2,), args=((3,),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1861,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1862,
          "content": "SampleInput((2, 3), args=((0, 0),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1874,
          "content": "yield SampleInput(item, device=device, dtype=dtype, requires_grad=requires_grad)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1887,
          "content": "yield SampleInput(n, args=(), kwargs=_kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1889,
          "content": "yield SampleInput(n, args=(m,), kwargs=_kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1895,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1896,
          "content": "SampleInput(-1, args=(), kwargs=_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1900,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1901,
          "content": "SampleInput(-7, args=(42,), kwargs=_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1905,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1906,
          "content": "SampleInput(0, args=(-3,), kwargs=_kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1919,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1952,
          "content": "yield SampleInput(t, fill_value, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1969,
          "content": "yield SampleInput(t, num_samples, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1982,
          "content": "yield SampleInput(mean, std, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1997,
          "content": "yield SampleInput(1.6, 0.3, [2, 3], dtype=dtype, device=device)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1998,
          "content": "yield SampleInput(1.6, 0.3, [2, 2, 2], dtype=dtype, layout=torch.strided, device=device)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1999,
          "content": "yield SampleInput(2.7, make_tensor([4, 3], dtype=dtype, device=device, low=0, high=None, requires_grad=requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2013,
          "content": "yield SampleInput(t)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2019,
          "content": "yield ErrorInput(SampleInput(torch.rand_like(x), kwargs={'out': x}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2037,
          "content": "yield SampleInput(t, dim)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2040,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2047,
          "content": "yield ErrorInput(SampleInput(make_tensor((3, 4, 5), dtype=torch.float32, device=device)), error_regex=\"expected a matrix\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2059,
          "content": "yield SampleInput(make_arg(shape), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2075,
          "content": "yield SampleInput(make_arg(shape), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2087,
          "content": "return (SampleInput(make_arg(shape)) for shape in shapes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2093,
          "content": "return (SampleInput(make_arg(shape)) for shape in shapes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2102,
          "content": "yield ErrorInput(SampleInput(make_arg(M)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2107,
          "content": "yield ErrorInput(SampleInput(make_arg(M, S, L)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2145,
          "content": "yield SampleInput(a, b, q=k, M=None).with_metadata(output_process_fn_grad=fn)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2151,
          "content": "yield SampleInput(a, b, q=k, M=M).with_metadata(output_process_fn_grad=fn)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2194,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2204,
          "content": "yield SampleInput(make_arg(shape), args=tuple(make_arg(s) for s in other_shapes))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2218,
          "content": "yield SampleInput(m(a), args=(m(b), m(c), m(d)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2219,
          "content": "yield SampleInput(n(a), args=(n(b), n(c), n(d)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2231,
          "content": "yield SampleInput(make_arg(shape), args=tuple(make_arg(s) for s in other_shapes))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2236,
          "content": "yield SampleInput(make_arg_non_complex(shape), args=tuple(make_arg(s) for s in other_shapes))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2267,
          "content": "yield SampleInput(make_arg(t1_size), make_arg(t2_size), p, cm)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2289,
          "content": "yield SampleInput(lhs, args=(lhs.clone(),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2303,
          "content": "yield SampleInput(tensors, args=(dim,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2344,
          "content": "yield SampleInput(tensors, args=(dim, num_chunks))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2358,
          "content": "yield SampleInput(tensors, args=(dim, num_chunks))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2367,
          "content": "yield SampleInput(tensors, args=(dim, num_chunks))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2375,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2376,
          "content": "SampleInput(tensors, args=(dim, num_chunks)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2383,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2384,
          "content": "SampleInput(tensors, args=(dim, num_chunks)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2391,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2392,
          "content": "SampleInput(tensors, args=(dim, num_chunks)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2399,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2400,
          "content": "SampleInput(tensors, args=(dim, num_chunks)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2407,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2408,
          "content": "SampleInput(tensors, args=(dim, num_chunks)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2414,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2415,
          "content": "SampleInput([], args=(dim, num_chunks)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2422,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2423,
          "content": "SampleInput(tensors, args=(dim, num_chunks)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2443,
          "content": "yield SampleInput([make_arg(input_shape1), make_arg(input_shape2)], kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2446,
          "content": "yield SampleInput([make_arg((2, 2, 2, 2), memory_format=torch.channels_last)], args=(1,),)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2453,
          "content": "yield ErrorInput(SampleInput([make_arg((S, S)), make_arg((S, S))],",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2458,
          "content": "yield ErrorInput(SampleInput([], kwargs={'dim': 1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2462,
          "content": "yield ErrorInput(SampleInput([make_arg((S, S, L, L)), make_arg((S, 0, L - 1, L))], kwargs={'dim': 1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2464,
          "content": "yield ErrorInput(SampleInput([make_arg((S, 0, L - 1, L)), make_arg((S, S, L, L))], kwargs={'dim': 1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2468,
          "content": "yield ErrorInput(SampleInput([make_arg((S - 1, 0)), make_arg((S, 0, L - 1, L))], kwargs={'dim': 1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2470,
          "content": "yield ErrorInput(SampleInput([make_arg((S, 0, L - 1, L)), make_arg((S - 1, 0))], kwargs={'dim': 1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2479,
          "content": "yield ErrorInput(SampleInput((x, y), kwargs={'dim': 0, 'out': x}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2481,
          "content": "yield ErrorInput(SampleInput((x, y), kwargs={'dim': 0, 'out': y}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2485,
          "content": "yield ErrorInput(SampleInput((y, z), kwargs={'out': z[:2, :]}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2492,
          "content": "yield ErrorInput(SampleInput((x_cuda, y_cpu)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2496,
          "content": "yield ErrorInput(SampleInput([make_arg((L, 1)), make_arg((L, 1, 1)), make_arg((L, 1, 1))]),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2499,
          "content": "yield ErrorInput(SampleInput([make_arg((S, 1, M)), make_arg((S, 1, 1)), make_arg((S, M, 1))],",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2504,
          "content": "yield ErrorInput(SampleInput((make_arg((S, 1, 1)), None)), error_type=TypeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2508,
          "content": "yield ErrorInput(SampleInput([make_arg(()), make_arg(())]),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2514,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'out': d}), error_type=TypeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2527,
          "content": "yield SampleInput((a, b, c), kwargs={'dim': 1})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2533,
          "content": "yield SampleInput((a, b, a))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2534,
          "content": "yield SampleInput((a, a, a))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2581,
          "content": "yield SampleInput(tensors)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2591,
          "content": "yield ErrorInput(SampleInput(tensors), error_regex=\"Tensors must have same number of dimensions\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2594,
          "content": "yield ErrorInput(SampleInput(()), error_regex=\"expects a non-empty TensorList\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2608,
          "content": "yield SampleInput(make_tensor(shape, dtype=dtype, device=device,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2614,
          "content": "yield ErrorInput(SampleInput(make_arg(()), args=(0,)), error_type=IndexError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2616,
          "content": "yield ErrorInput(SampleInput(make_arg((2,)), args=(2,)), error_type=IndexError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2625,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2629,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2633,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2638,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2642,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2647,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2651,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2675,
          "content": "yield ErrorInput(SampleInput(bad_src, args=(1, idx,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2684,
          "content": "yield ErrorInput(SampleInput(src, args=(1, idx), kwargs={'out': out}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2691,
          "content": "yield ErrorInput(SampleInput(src, args=(1, idx)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2697,
          "content": "yield ErrorInput(SampleInput(src, args=(0, idx)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2705,
          "content": "yield ErrorInput(SampleInput(src, args=(1, idx,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2712,
          "content": "yield ErrorInput(SampleInput(src, args=(0, ind,), kwargs=dict(out=x)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2716,
          "content": "yield ErrorInput(SampleInput(src, args=(0, ind,), kwargs=dict(out=src)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2720,
          "content": "yield ErrorInput(SampleInput(ind.clone(), args=(0, ind[1:],), kwargs=dict(out=ind[:1])),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2729,
          "content": "yield ErrorInput(SampleInput(src, args=(ind,), kwargs=dict(out=x)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2733,
          "content": "yield ErrorInput(SampleInput(src, args=(ind,), kwargs=dict(out=src)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2737,
          "content": "yield ErrorInput(SampleInput(ind.clone(), args=(ind[1:],), kwargs=dict(out=ind[:-1])),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2747,
          "content": "yield ErrorInput(SampleInput(dst, args=(0, idx, src)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2754,
          "content": "yield ErrorInput(SampleInput(dst, args=(0, idx, src)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2761,
          "content": "yield ErrorInput(SampleInput(dst, args=(0, idx, src)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2770,
          "content": "yield ErrorInput(SampleInput(dst, args=(0, idx, src)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2775,
          "content": "yield ErrorInput(SampleInput(zero_d, args=(0.5, 0, 1.0)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2781,
          "content": "yield ErrorInput(SampleInput(zero_d, args=(zero_d, zero_d)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2790,
          "content": "yield ErrorInput(SampleInput(tensor_0, args=(tensor_1, tensor_2, bool_3, bool_4)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2796,
          "content": "yield ErrorInput(SampleInput(zero_d, args=(0,)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2799,
          "content": "yield ErrorInput(SampleInput(zero_d, args=(0,)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2810,
          "content": "yield ErrorInput(SampleInput(weight, args=(indices,)), error_type=RuntimeError,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2815,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2816,
          "content": "SampleInput(torch.randn(2, 3, 4, 5, device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2823,
          "content": "yield ErrorInput(SampleInput(x, args=(2,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2827,
          "content": "yield ErrorInput(SampleInput(x, args=(2,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2832,
          "content": "yield ErrorInput(SampleInput(x, args=(2,), kwargs=dict(out=y)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2836,
          "content": "yield ErrorInput(SampleInput(x, args=(0,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2840,
          "content": "yield ErrorInput(SampleInput(x, args=(-1,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2844,
          "content": "yield ErrorInput(SampleInput(x, args=(3, False,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2848,
          "content": "yield ErrorInput(SampleInput(x, args=(3,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2864,
          "content": "yield ErrorInput(SampleInput(torch.tensor(shape), kwargs=kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2869,
          "content": "yield ErrorInput(SampleInput(x, kwargs=kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2874,
          "content": "yield ErrorInput(SampleInput(x, kwargs=kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2879,
          "content": "yield ErrorInput(SampleInput(x, kwargs=kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2888,
          "content": "yield ErrorInput(SampleInput(t, kwargs=dict(spacing=spacing, dim=dim, edge_order=1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2892,
          "content": "yield ErrorInput(SampleInput(t, kwargs=dict(edge_order=3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2898,
          "content": "yield ErrorInput(SampleInput(t, kwargs=dict(spacing=spacing, dim=dim, edge_order=1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2904,
          "content": "yield ErrorInput(SampleInput(t, kwargs=dict(spacing=coordinates, dim=dim, edge_order=1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2908,
          "content": "yield ErrorInput(SampleInput(t, kwargs=dict(dim=3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2912,
          "content": "yield ErrorInput(SampleInput(t, kwargs=dict(edge_order=1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2917,
          "content": "yield ErrorInput(SampleInput(t, kwargs=dict(edge_order=2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2926,
          "content": "yield SampleInput(make_arg(S))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2927,
          "content": "yield SampleInput(make_arg(S), training=False)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2931,
          "content": "yield ErrorInput(SampleInput(input, kwargs={'lower': 0.3, 'upper': 0.1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2939,
          "content": "yield ErrorInput(SampleInput(y, args=(mask,), kwargs=dict(out=x)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2943,
          "content": "yield ErrorInput(SampleInput(y, args=(mask,), kwargs=dict(out=y)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2947,
          "content": "yield ErrorInput(SampleInput(mask.clone(), args=(mask,), kwargs=dict(out=mask)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2955,
          "content": "yield ErrorInput(SampleInput(x, kwargs=dict(dim=(-1))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2967,
          "content": "yield ErrorInput(SampleInput(y, args=(1, ind,), kwargs=dict(out=x)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2975,
          "content": "yield ErrorInput(SampleInput(result, args=(0, torch.tensor([0, 2]), source)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2984,
          "content": "yield ErrorInput(SampleInput(src, args=(dim,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2990,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2994,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 2998,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3002,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3013,
          "content": "yield ErrorInput(SampleInput(torch.rand(shape, device=device)), error_regex=err_msg_amax_amin)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3015,
          "content": "yield ErrorInput(SampleInput(torch.rand(shape, device=device)), error_regex=err_msg_aminmax)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3020,
          "content": "yield ErrorInput(SampleInput(torch.randn(sizes, device=device), kwargs={'dim': -1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3022,
          "content": "yield ErrorInput(SampleInput(torch.randn(sizes, device=device), kwargs={'dim': 64}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3031,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'dim': dim}), error_regex=err_msg2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3051,
          "content": "yield ErrorInput(SampleInput(input5, kwargs={'dim': 0, 'out': illegal_values}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3054,
          "content": "yield ErrorInput(SampleInput(input5, kwargs={'dim': 0, 'out': (max_values, min_values)}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3061,
          "content": "yield ErrorInput(SampleInput(torch.rand(shape, device=device), kwargs={'dim': 1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3076,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3083,
          "content": "yield ErrorInput(SampleInput(t, args=(n, ), kwargs=kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3113,
          "content": "yield SampleInput(input_tensor, n, dim, prepend, append)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3116,
          "content": "yield SampleInput(make_arg((XS, XS, XS)), S + 1, 1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3117,
          "content": "yield SampleInput(make_arg((XS, XS, XS)), S * 3 + 2, 2, make_arg((XS, XS, XS)), make_arg((XS, XS, XS)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3128,
          "content": "yield SampleInput(input_tensor, bin_ct,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3133,
          "content": "yield SampleInput(input_tensor, sorted_bins,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3147,
          "content": "yield SampleInput(input_tensor, bin_ct,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3151,
          "content": "yield SampleInput(input_tensor, bins_tensor,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3158,
          "content": "yield ErrorInput(SampleInput(make_arg(5, 6), invalid_bins), error_regex=msg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3167,
          "content": "yield SampleInput(make_arg(size), min=min, max=max)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3171,
          "content": "yield SampleInput(make_arg(size), bins=bins, min=min, max=max)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3183,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3198,
          "content": "yield SampleInput(input_tensor, boundaries,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3205,
          "content": "yield ErrorInput(SampleInput(make_arg((S, S, S)), make_arg((S, S))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3237,
          "content": "yield SampleInput(boundary_tensor, input, out_int32=out_int32, right=right)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3238,
          "content": "yield SampleInput(boundary_tensor, input, out_int32=out_int32, side=side)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3240,
          "content": "yield SampleInput(unsorted_tensor, input, out_int32=out_int32, right=right, sorter=sorter)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3241,
          "content": "yield SampleInput(unsorted_tensor, input, out_int32=out_int32, side=side, sorter=sorter)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3255,
          "content": "yield SampleInput(t, dim=dim, spacing=spacing, edge_order=edge_order)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3270,
          "content": "yield SampleInput(t, dim=dim, spacing=coordinates_tensor_list, edge_order=edge_order)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3293,
          "content": "yield SampleInput(make_arg((S, S, S)), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3295,
          "content": "yield SampleInput(make_arg((S, S, S, S)), args=((slice(None), [0, 1], slice(None), [0, 1]),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3302,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3311,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3326,
          "content": "yield SampleInput(large_1d_unique())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3337,
          "content": "yield SampleInput(small_3d_unique(), dim, descending)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3340,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3345,
          "content": "yield SampleInput(torch.tensor(1, **tensor_opt))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3346,
          "content": "yield SampleInput(torch.tensor(1, **tensor_opt), 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3347,
          "content": "yield SampleInput(torch.tensor(1, **tensor_opt), 0, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3350,
          "content": "yield SampleInput(torch.tensor((), **tensor_opt))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3351,
          "content": "yield SampleInput(torch.tensor((), **tensor_opt), 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3352,
          "content": "yield SampleInput(torch.tensor((), **tensor_opt), 0, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3355,
          "content": "yield SampleInput(small_3d_unique(), stable=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3356,
          "content": "yield SampleInput(small_3d_unique(), dim=0, stable=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3357,
          "content": "yield SampleInput(small_3d_unique(), dim=0, descending=True, stable=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3364,
          "content": "yield SampleInput(make_arg(x_size), make_arg(()).item(), make_arg(()).item())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3384,
          "content": "yield SampleInput(input_t, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3389,
          "content": "yield SampleInput(input_t, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3392,
          "content": "yield SampleInput(make_arg(shape), **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3412,
          "content": "yield SampleInput(make_arg(input_shape), args=(output_size,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3414,
          "content": "yield SampleInput(make_arg(input_shape[1:]), args=(output_size,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3421,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 2, 3)), output_size=()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3425,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 1, 1)), output_size=(-1,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3443,
          "content": "yield SampleInput(make_arg(input_shape), args=(output_size,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3445,
          "content": "yield SampleInput(make_arg(input_shape[1:]), args=(output_size,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3452,
          "content": "yield ErrorInput(SampleInput(make_arg((2, 2)), output_size=(2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3456,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 2, 3, 4)), output_size=()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3460,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 1, 1, 1)), output_size=(-1, 0)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3479,
          "content": "yield SampleInput(make_arg(input_shape), args=(output_size,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3481,
          "content": "yield SampleInput(make_arg(input_shape[1:]), args=(output_size,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3488,
          "content": "yield ErrorInput(SampleInput(make_arg((2, 2, 2)), output_size=(2, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3492,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 2, 3, 4)), output_size=()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3496,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 1, 1, 1, 1)), output_size=(-1, 0, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3513,
          "content": "yield SampleInput(make_arg(shapes[0]), args=(shapes[1], return_idx))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3515,
          "content": "yield SampleInput(make_arg(shapes[0][1:]), args=(shapes[1], return_idx))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3522,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 2, 3)), output_size=()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3526,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 1, 1)), output_size=(-1,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3546,
          "content": "yield SampleInput(make_arg(shapes[0]), args=(shapes[1], return_idx))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3548,
          "content": "yield SampleInput(make_arg(shapes[0][1:]), args=(shapes[1], return_idx))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3554,
          "content": "yield ErrorInput(SampleInput(make_arg((2, 2)), output_size=(2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3558,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 2, 3, 4)), output_size=()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3562,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 1, 1, 1)), output_size=(-1, 0)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3582,
          "content": "yield SampleInput(make_arg(shapes[0]), args=(shapes[1], return_idx))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3584,
          "content": "yield SampleInput(make_arg(shapes[0][1:]), args=(shapes[1], return_idx))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3590,
          "content": "yield ErrorInput(SampleInput(make_arg((2, 2, 2)), output_size=(2, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3594,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 2, 3, 4)), output_size=()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3598,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 1, 1, 1, 1)), output_size=(-1, 0, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3683,
          "content": "yield SampleInput(arg, kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3702,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': -1, 'return_indices': True}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3706,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': 4, 'return_indices': True}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3710,
          "content": "yield ErrorInput(SampleInput(x,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3716,
          "content": "yield ErrorInput(SampleInput(make_arg((), requires_grad=requires_grad), kwargs={'kernel_size': 1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3720,
          "content": "yield ErrorInput(SampleInput(torch.tensor([], device=device, requires_grad=requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3725,
          "content": "yield ErrorInput(SampleInput(make_arg((0, 10), requires_grad=requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3730,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 10, 0), requires_grad=requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3736,
          "content": "yield ErrorInput(SampleInput(make_arg((3, 3, 3)), kwargs={'kernel_size': 1, 'stride': 0}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3741,
          "content": "yield ErrorInput(SampleInput(make_arg((3, 3, 3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3747,
          "content": "yield ErrorInput(SampleInput(make_arg((2, 2, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3753,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 0}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3758,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 0}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3766,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': -1, 'return_indices': True}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3769,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (3, 2), 'stride': 50, 'padding': -1, 'return_indices': True}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3773,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': 4, 'return_indices': True}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3777,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (3, 2), 'stride': 50, 'padding': 4, 'return_indices': True}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3782,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 0, 10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3787,
          "content": "yield ErrorInput(SampleInput(make_arg((2, 1, 10, 0)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3796,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': -1, 'return_indices': True}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3799,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (3, 2, 2), 'stride': 50,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3804,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': 4, 'return_indices': True}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3808,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (3, 2, 2), 'stride': 50,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3814,
          "content": "yield ErrorInput(SampleInput(make_arg((0, 1, 2, 10)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3819,
          "content": "yield ErrorInput(SampleInput(make_arg((2, 1, 0, 1, 2)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3838,
          "content": "yield SampleInput(make_arg(input_shape), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3932,
          "content": "yield SampleInput(make_arg(input_shape), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3937,
          "content": "yield SampleInput(make_arg(input_shape[1:]), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3963,
          "content": "yield SampleInput(make_arg(input_shape), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3968,
          "content": "yield SampleInput(make_arg(input_shape[1:]), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3993,
          "content": "yield SampleInput(make_arg(input_shape), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 3998,
          "content": "yield SampleInput(make_arg(input_shape[1:]), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4020,
          "content": "yield SampleInput(make_arg(input_shape), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4025,
          "content": "yield SampleInput(make_arg(input_shape[1:]), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4037,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4038,
          "content": "SampleInput(make_int_arg((1, 1, 4)), args=(make_int_arg((1, 1, 2)), make_arg((1,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4042,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4043,
          "content": "SampleInput(make_arg((1, 1, 4)), args=(make_arg((1, 1, 2)), make_complex_arg((1,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4047,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4048,
          "content": "SampleInput(make_arg((1, 1, 4)), args=(make_arg((1, 2, 2)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4052,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4053,
          "content": "SampleInput(make_arg((1, 1, 4)), args=(make_arg((1, 2, 2)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4057,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4058,
          "content": "SampleInput(make_arg((1, 1, 4)), args=(make_arg((1, 1, 2)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4063,
          "content": "# yield ErrorInput(SampleInput(make_arg((1, 1, 4)), args=(make_arg((1, 1, 3)), make_arg((2,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4067,
          "content": "yield ErrorInput(SampleInput(make_arg((1, 1, 4)), args=(make_arg((1, 2)), make_arg((1,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4071,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4072,
          "content": "SampleInput(make_arg((2, 2, 4)), args=(make_arg((2, 2, 2)), make_arg((2,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4076,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4077,
          "content": "SampleInput(make_arg((2, 2, 4)), args=(make_arg((2, 2, 2)), make_arg((2,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4081,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4082,
          "content": "SampleInput(make_arg((2, 2, 4)), args=(make_arg((2, 2, 2)), make_arg((2,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4086,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4087,
          "content": "SampleInput(make_arg((2, 2, 4)), args=(make_arg((2, 2, 2)), make_arg((2,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4097,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4098,
          "content": "SampleInput(make_int_arg((2, 4, 4)), args=(make_int_arg((3, 2, 3, 3)), make_arg((3,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4102,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4103,
          "content": "SampleInput(make_arg((2, 4, 4)), args=(make_arg((3, 2, 3, 3)), make_complex_arg((3,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4107,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4108,
          "content": "SampleInput(make_arg((1, 1, 4, 4)), args=(make_arg((1, 2, 2, 3)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4112,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4113,
          "content": "SampleInput(make_arg((1, 1, 4, 3)), args=(make_arg((1, 2, 2, 4)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4117,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4118,
          "content": "SampleInput(make_arg((1, 1, 4, 2)), args=(make_arg((1, 1, 2, 5)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4123,
          "content": "# yield ErrorInput(SampleInput(make_arg((1, 1, 4, 4)), args=(make_arg((1, 1, 3, 2)), make_arg((2,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4127,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4128,
          "content": "SampleInput(make_arg((1, 1, 4, 3)), args=(make_arg((1, 2, 2)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4132,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4133,
          "content": "SampleInput(make_arg((2, 2, 4, 3)), args=(make_arg((2, 2, 1, 3)), make_arg((2,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4137,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4138,
          "content": "SampleInput(make_arg((2, 2, 4, 3)), args=(make_arg((2, 2, 1, 3)), make_arg((2,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4142,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4143,
          "content": "SampleInput(make_arg((2, 2, 4, 5)), args=(make_arg((2, 2, 1, 4)), make_arg((2,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4147,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4148,
          "content": "SampleInput(make_arg((2, 2, 4, 3)), args=(make_arg((2, 2, 4, 3)), make_arg((2,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4186,
          "content": "yield SampleInput(make_arg(input_shape), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4191,
          "content": "yield SampleInput(make_arg(input_shape[1:]), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4217,
          "content": "yield SampleInput(make_arg(input_shape), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4222,
          "content": "yield SampleInput(make_arg(input_shape[1:]), args=(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4234,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4235,
          "content": "SampleInput(make_int_arg((1, 1, 4, 4, 4)), args=(make_int_arg((1, 1, 2, 2, 2)), make_arg((1,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4239,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4240,
          "content": "SampleInput(make_arg((1, 1, 4, 4, 4)), args=(make_arg((1, 1, 2, 2, 2)), make_complex_arg((1,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4244,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4245,
          "content": "SampleInput(make_arg((1, 1, 4, 4, 4)), args=(make_arg((1, 1, 2, 2, 2)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4249,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4250,
          "content": "SampleInput(make_arg((1, 1, 4, 4, 4)), args=(make_arg((1, 1, 2, 2, 2)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4254,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4255,
          "content": "SampleInput(make_arg((1, 1, 4, 4, 4)), args=(make_arg((1, 1, 2, 2, 2)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4260,
          "content": "# yield ErrorInput(SampleInput(make_arg((1, 1, 4, 4, 4)), args=(make_arg((1, 1, 3, 3, 3)), make_arg((2,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4264,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4265,
          "content": "SampleInput(make_arg((1, 1, 3, 4, 5)), args=(make_arg((1, 1, 4, 3)), make_arg((1,))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4269,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4270,
          "content": "SampleInput(make_arg((2, 2, 3, 4, 5)), args=(make_arg((2, 2, 4, 3, 3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4275,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4276,
          "content": "SampleInput(make_arg((2, 2, 3, 4, 5)), args=(make_arg((2, 2, 4, 3, 3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4281,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4282,
          "content": "SampleInput(make_arg((2, 2, 3, 4, 5)), args=(make_arg((2, 2, 4, 3, 3)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4287,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4288,
          "content": "SampleInput(make_arg((18, 27, 9, 1, 9)), args=(make_arg((9, 9, 9, 1, 9)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4321,
          "content": "yield SampleInput(make_arg(input_shape), num_groups, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4324,
          "content": "yield SampleInput(make_arg((1, 2)), args=(1,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4360,
          "content": "yield SampleInput(input_tensor, num_groups, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4392,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4406,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4418,
          "content": "yield SampleInput(make_arg((1, 2, 3)), kwargs={})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4442,
          "content": "return SampleInput(with_requires_grad(masked_input), kwargs={'dim': dim})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4456,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4466,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4476,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4501,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4507,
          "content": "yield SampleInput(make_arg((1, 2)), args=((2,),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4513,
          "content": "# yield SampleInput(make_arg((1, 2)), args=((2,), make_arg((2,)), None))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4516,
          "content": "# yield SampleInput(make_arg((1, 2)), args=((2,), None, make_arg((2,))))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4535,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4539,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4543,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4547,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4567,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4573,
          "content": "yield SampleInput(make_arg((1, 2)), args=((2,),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4580,
          "content": "s1 = SampleInput(make_arg(1), args=(1,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4581,
          "content": "yield ErrorInput(s1, error_regex=err_msg1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4585,
          "content": "s2 = SampleInput(make_arg((2, 7, 4)), args=(2,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4586,
          "content": "yield ErrorInput(s2, error_regex=err_msg2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4593,
          "content": "s1 = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4596,
          "content": "yield ErrorInput(s1, error_regex=err_msg1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4601,
          "content": "s2 = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4604,
          "content": "yield ErrorInput(s2, error_regex=err_msg2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4608,
          "content": "s3 = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4611,
          "content": "yield ErrorInput(s3, error_regex=err_msg3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4614,
          "content": "s4 = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4617,
          "content": "yield ErrorInput(s4, error_regex=err_msg4)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4624,
          "content": "s1 = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4627,
          "content": "yield ErrorInput(s1, error_regex=err_msg1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4632,
          "content": "s2 = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4635,
          "content": "yield ErrorInput(s2, error_regex=err_msg2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4639,
          "content": "s4 = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4642,
          "content": "yield ErrorInput(s4, error_regex=err_msg4)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4664,
          "content": "yield SampleInput(make_arg(input_shape), args=(size,), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4671,
          "content": "return (SampleInput(make_arg((N * 2, N * 2))) for _ in range(1, N))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4689,
          "content": "yield SampleInput(input_tensor, weight)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4693,
          "content": "yield SampleInput(input_tensor, weight, bias)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4696,
          "content": "yield SampleInput(create_tensor(2, 1, 2, 1, 2), create_tensor(4, 2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4697,
          "content": "yield SampleInput(create_tensor(2, 1, 2, 1, 2), create_tensor(4, 2), create_tensor(4))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4716,
          "content": "yield SampleInput(input_tensor1, input_tensor2, weight)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4719,
          "content": "yield SampleInput(input_tensor1, input_tensor2, weight, bias)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4738,
          "content": "yield SampleInput(input_tensor, dim)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4783,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4795,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4802,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4810,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4817,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4826,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4850,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4878,
          "content": "yield SampleInput(make_arg(shape(D, rank)), size=shape(S, rank, False))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4879,
          "content": "yield SampleInput(make_arg(shape(D, rank)), size=shape(L, rank, False))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4880,
          "content": "yield SampleInput(make_arg(shape(D, rank)), scale_factor=1.7)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4881,
          "content": "yield SampleInput(make_arg(shape(D, rank)), scale_factor=0.6)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4897,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4912,
          "content": "yield SampleInput(input_tensor, output_size=torch.Size([S, S]), align_corners=False, scale_factors=None)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4913,
          "content": "yield SampleInput(input_tensor, output_size=torch.Size([L, L]), align_corners=False, scale_factors=None)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4914,
          "content": "yield SampleInput(input_tensor, output_size=None, align_corners=False, scale_factors=[1.7, 0.9])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4915,
          "content": "yield SampleInput(input_tensor, output_size=None, align_corners=True, scale_factors=[0.8, 1.0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4917,
          "content": "yield SampleInput(input_tensor, output_size=torch.Size([S, S]), align_corners=False, scales_h=None, scales_w=None)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4918,
          "content": "yield SampleInput(input_tensor, output_size=torch.Size([S, S]), align_corners=False, scales_h=1.7, scales_w=0.9)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4919,
          "content": "yield SampleInput(input_tensor, output_size=torch.Size([S, S]), align_corners=True, scales_h=1.7, scales_w=0.9)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4925,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4933,
          "content": "yield ErrorInput(SampleInput(make_tensor((), dtype=torch.float, device=device), kwargs={\"approximate\": \"asdf\"}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4944,
          "content": "return ((SampleInput(make_tensor(input_tensor, dtype=dtype, device=device,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4952,
          "content": "yield SampleInput(make_arg((S, S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4953,
          "content": "yield SampleInput(make_arg(()))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4969,
          "content": "yield SampleInput(t.clone().requires_grad_(requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4971,
          "content": "yield SampleInput(t.clone().requires_grad_(requires_grad), **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4983,
          "content": "yield SampleInput(input, quantiles)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 4991,
          "content": "yield SampleInput(input, quantiles, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5003,
          "content": "return (SampleInput(make_arg((N, N))) for _ in range(1, N))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5019,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5027,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5035,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5042,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5066,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5074,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5082,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5101,
          "content": "yield SampleInput(make_arg(input_shape),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5104,
          "content": "yield SampleInput(make_arg((1, 3, 9, 9)), args=((3, 3)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5123,
          "content": "yield SampleInput(make_arg(input_shape), args=(kernel_size,), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5147,
          "content": "yield SampleInput(make_arg(input_shape), args=(kernel_size,), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5152,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': -1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5156,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': 4}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5162,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': -1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5165,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (3, 2), 'stride': 50, 'padding': -1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5169,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': 4}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5172,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (3, 2), 'stride': 50, 'padding': 4}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5177,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (2, 2), 'divisor_override': 0}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5183,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': -1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5186,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (3, 2, 2), 'stride': 50, 'padding': -1}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5190,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': 4}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5193,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (3, 2, 2), 'stride': 50, 'padding': 4}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5198,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': (2, 2, 2), 'divisor_override': 0}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5203,
          "content": "yield ErrorInput(SampleInput(x, kwargs={'kernel_size': 2, 'stride': 50, 'padding': 0}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5222,
          "content": "yield SampleInput(make_arg((S, S, S, S)), args=(device, torch.float64, nb, cp), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5229,
          "content": "yield SampleInput(make_arg((S, S, S, S)), args=(torch.float64, nb, cp), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5237,
          "content": "yield SampleInput(make_arg((S, S, S, S)), args=(other, nb, cp), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5241,
          "content": "def get_tensor_input(size):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5244,
          "content": "yield SampleInput(get_tensor_input((S, M, S)), 3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5245,
          "content": "yield SampleInput(get_tensor_input((S, M, S)), 3, 1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5246,
          "content": "yield SampleInput(get_tensor_input((S, M, S)), 3, -2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5247,
          "content": "yield SampleInput(get_tensor_input((S, M, S)), 3, 1, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5248,
          "content": "yield SampleInput(get_tensor_input((S, M, S)), 3, -2, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5249,
          "content": "yield SampleInput(get_tensor_input((S, M, S)), 3, 1, True, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5250,
          "content": "yield SampleInput(get_tensor_input((S, M, S)), 3, -2, True, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5252,
          "content": "yield SampleInput(get_tensor_input(()), 1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5253,
          "content": "yield SampleInput(get_tensor_input(()), 1, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5254,
          "content": "yield SampleInput(get_tensor_input(()), 1, -1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5255,
          "content": "yield SampleInput(get_tensor_input(()), 1, 0, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5256,
          "content": "yield SampleInput(get_tensor_input(()), 1, -1, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5257,
          "content": "yield SampleInput(get_tensor_input(()), 1, 0, True, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5258,
          "content": "yield SampleInput(get_tensor_input(()), 1, -1, True, True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5262,
          "content": "yield SampleInput(make_arg(S), make_arg(M))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5270,
          "content": "yield SampleInput(make_arg(size_x), args=(make_arg(size_y), p))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5333,
          "content": "yield SampleInput(t, args=args, kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5353,
          "content": "yield SampleInput(make_arg(self_shape),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5370,
          "content": "yield SampleInput(input,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5396,
          "content": "yield SampleInput(make_arg(self_shape), mask, indices, fill_value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5400,
          "content": "yield SampleInput(make_arg(self_shape), mask, indices, fill_value)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5423,
          "content": "yield SampleInput(make_arg(self_shape), mask, indices, values)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5427,
          "content": "yield SampleInput(make_arg(self_shape), mask, indices, values)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5443,
          "content": "return (SampleInput(make_arg(input_tensor), *args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5458,
          "content": "yield SampleInput(input=make_arg((S, S)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5469,
          "content": "yield SampleInput(input=tgt.clone().requires_grad_(requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5480,
          "content": "yield SampleInput(input=tgt.clone().requires_grad_(requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5494,
          "content": "yield SampleInput(input=make_arg((S, S)), args=(idx,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5501,
          "content": "yield SampleInput(input=src.clone().requires_grad_(requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5510,
          "content": "yield SampleInput(input=src.clone().requires_grad_(requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5515,
          "content": "yield SampleInput(make_arg((4, 3, 2, 1)), [0, 1, 2, 3], [3, 2, 1, 0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5516,
          "content": "yield SampleInput(make_arg((4, 3, 2, 1)), [0, -1, -2, -3], [-3, -2, -1, -0])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5544,
          "content": "yield SampleInput(make_arg(shape), args=(source, destination))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5550,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5551,
          "content": "SampleInput(make_arg(2, 3, 4, 5, 6), args=((3, -3), (1, 0, -1))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5558,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5559,
          "content": "SampleInput(make_arg(2, 3, 4, 5, 6), args=((3, -3, 4), (1, 0))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5566,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5567,
          "content": "SampleInput(make_arg(2, 3, 4, 5, 6), args=((0, 4, -5), (1, 0, 2))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5572,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5573,
          "content": "SampleInput(make_arg(2, 3, 4, 5, 6), args=((1, 0, 2), (0, 4, -5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5578,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5579,
          "content": "SampleInput(make_arg(2, 3, 4, 5, 6), args=((1, 0, -4), (0, 4, -5))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5584,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5585,
          "content": "SampleInput(make_arg(2, 3, 4, 5, 6), args=((0, 1, -6), (1, 4, 2))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5591,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5592,
          "content": "SampleInput(make_arg(2, 3, 4, 5, 6), args=((1, 4, 2), (0, 1, -6))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5598,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5599,
          "content": "SampleInput(make_arg(2, 3, 4, 5, 6), args=(-6, 1)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5605,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5606,
          "content": "SampleInput(make_arg(2, 3, 4, 5, 6), args=(3, -6)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5629,
          "content": "yield SampleInput(make_arg(shape), rep_dim)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5644,
          "content": "yield SampleInput(tensor, dim, start, length)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5647,
          "content": "yield SampleInput(tensor, dim, torch.tensor(start), length)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5682,
          "content": "yield SampleInput(tensor, dim, start, length)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5685,
          "content": "yield SampleInput(tensor, dim, torch.tensor(start), length)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5691,
          "content": "yield ErrorInput(SampleInput(make_arg(()), 0, 0, 1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5698,
          "content": "yield ErrorInput(SampleInput(make_arg((M, S, L)), 3, 0, 0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5702,
          "content": "yield ErrorInput(SampleInput(make_arg((M, S, L)), 3, 0, 0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5706,
          "content": "yield ErrorInput(SampleInput(make_arg((L, S, M)), -4, 0, 0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5711,
          "content": "yield ErrorInput(SampleInput(make_arg((L, M, S)), 1, M + 1, 0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5715,
          "content": "yield ErrorInput(SampleInput(make_arg((L, M, S)), 1, -M - 1, 0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5720,
          "content": "yield ErrorInput(SampleInput(make_arg((S, L, M)), 2, 0, M + 1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5726,
          "content": "yield ErrorInput(SampleInput(make_arg((M,)), 0, 0, -1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5730,
          "content": "yield ErrorInput(SampleInput(make_arg((M,)), 0, 0, -1),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5739,
          "content": "yield ErrorInput(SampleInput(make_arg((L, M, S)), 1, make_arg(S, dtype=torch.int), 2),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5744,
          "content": "yield ErrorInput(SampleInput(make_arg((L, M, S)), -3, make_arg((), dtype=torch.bool), 3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5770,
          "content": "yield SampleInput(y_tensor, x_tensor, **kwarg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5772,
          "content": "yield SampleInput(y_tensor, **kwarg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5796,
          "content": "yield SampleInput(y_tensor, x_tensor, **kwarg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5798,
          "content": "yield SampleInput(y_tensor, **kwarg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5816,
          "content": "yield SampleInput(tensor, axis)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5830,
          "content": "yield SampleInput(tensor, kernel_size, dilation, padding, stride)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5833,
          "content": "yield SampleInput(make_arg((1, 1, 5, 5)), (3, 3))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5852,
          "content": "yield SampleInput(tensor, args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5869,
          "content": "yield SampleInput(tensor, dims)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5956,
          "content": "yield SampleInput(make_inp((1, 3, 3)), args=((2, 2),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5960,
          "content": "yield SampleInput(make_inp(shape), args=(pad, mode))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5964,
          "content": "yield SampleInput(make_inp(shape), args=(pad, mode, pad_value))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5978,
          "content": "yield SampleInput(make_inp(shape), args=(pad, 'replicate'))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5993,
          "content": "return SampleInput(input, args=(pad,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5995,
          "content": "return SampleInput(input, args=(pad, scalar_type(value)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6003,
          "content": "yield SampleInput(make_input(()), repeats=2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6004,
          "content": "yield SampleInput(make_input((2, 3, 4)), repeats=2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6005,
          "content": "yield SampleInput(make_input((2, 3, 4)), repeats=2, dim=1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6006,
          "content": "yield SampleInput(make_input((2, 3, 4)), repeats=torch.arange(3, device=device), dim=1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6014,
          "content": "yield SampleInput(mt(100), n_fft=10, return_complex=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6015,
          "content": "yield SampleInput(mt(100), n_fft=10, return_complex=False)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6017,
          "content": "yield SampleInput(mt(100), n_fft=10)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6020,
          "content": "yield SampleInput(mt(10), n_fft=7, center=center, return_complex=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6021,
          "content": "yield SampleInput(mt((10, 100)), n_fft=16, hop_length=4,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6025,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6027,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6030,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6042,
          "content": "yield SampleInput(mt((10, 2)), kwargs=dict(n_fft=10))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6043,
          "content": "yield SampleInput(mt((6, 3)), kwargs=dict(n_fft=6, onesided=False))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6044,
          "content": "yield SampleInput(mt((6, 4)), kwargs=dict(n_fft=10, onesided=True))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6047,
          "content": "yield SampleInput(mt((10, 10, 6)), kwargs=dict(n_fft=10, center=center))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6048,
          "content": "yield SampleInput(mt((1, 9, 10)), kwargs=dict(n_fft=16, hop_length=4, center=center))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6051,
          "content": "yield SampleInput(mt((10, 10, 6)), kwargs=dict(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6053,
          "content": "yield SampleInput(mt((10, 10, 10)), kwargs=dict(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6057,
          "content": "yield SampleInput(mt((10, 5, 6)), kwargs=dict(n_fft=8, window=real_window[:8], center=center))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6067,
          "content": "input = make_input((*batch, m, n))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6072,
          "content": "other = make_input((*batch, *other_matrix_shape), requires_grad=requires_grad)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6073,
          "content": "yield SampleInput(reflectors, tau, other, left=left, transpose=transpose)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6097,
          "content": "yield SampleInput(input, args=(True, get_infos))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6107,
          "content": "yield SampleInput(lu_data, pivots).with_metadata(output_process_fn_grad=out_fn)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6116,
          "content": "yield SampleInput(make_arg((0, 0, 0)), args=arg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6117,
          "content": "yield SampleInput(make_arg((S, S, S)), args=arg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6120,
          "content": "yield SampleInput(make_arg(()), args=(10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6125,
          "content": "s1 = SampleInput(make_arg((S,)), ())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6126,
          "content": "yield ErrorInput(s1, error_regex=err_msg1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6129,
          "content": "s2 = SampleInput(make_arg((S, S)), (2, 1), 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6130,
          "content": "yield ErrorInput(s2, error_regex=err_msg2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6133,
          "content": "s3 = SampleInput(make_arg((S, )), 0, 2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6134,
          "content": "yield ErrorInput(s3, error_regex=err_msg3, error_type=IndexError)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6137,
          "content": "s4 = SampleInput(make_arg(()), 0, 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6138,
          "content": "yield ErrorInput(s4, error_regex=err_msg4, error_type=IndexError)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6145,
          "content": "yield SampleInput(make_arg((S, S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6147,
          "content": "yield SampleInput(make_arg((S, S, S)), args=arg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6153,
          "content": "s1 = SampleInput(make_arg((S, S)), dims=(0,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6154,
          "content": "yield ErrorInput(s1, error_regex=err_msg1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6157,
          "content": "s2 = SampleInput(make_arg((S,)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6158,
          "content": "yield ErrorInput(s2, error_regex=err_msg2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6161,
          "content": "s3 = SampleInput(make_arg((S, S)), dims=(1, 1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6162,
          "content": "yield ErrorInput(s3, error_regex=err_msg3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6171,
          "content": "yield SampleInput(tensor_nd())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6172,
          "content": "yield SampleInput(tensor_nd(), dim=1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6173,
          "content": "yield SampleInput(tensor_nd(), dim=1, unbiased=True, keepdim=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6174,
          "content": "yield SampleInput(tensor_1d(), dim=0, unbiased=True, keepdim=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6175,
          "content": "yield SampleInput(tensor_1d(), dim=0, unbiased=False, keepdim=False)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6177,
          "content": "yield SampleInput(tensor_nd(), dim=(1,), correction=1.3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6178,
          "content": "yield SampleInput(tensor_nd(), dim=(1,), correction=S // 2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6179,
          "content": "yield SampleInput(tensor_nd(), dim=None, correction=0, keepdim=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6180,
          "content": "yield SampleInput(tensor_nd(), dim=None, correction=None)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6181,
          "content": "yield SampleInput(tensor_nd(), correction=0, keepdim=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6182,
          "content": "yield SampleInput(make_tensor(3, 4, 5, device=device, dtype=dtype, requires_grad=requires_grad), dim=-3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6190,
          "content": "yield SampleInput(make_arg((S, S)), True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6191,
          "content": "yield SampleInput(make_arg((S,)), False)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6201,
          "content": "return (SampleInput(t) for t in _generate_correlation_inputs(device, dtype, requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6206,
          "content": "yield SampleInput(make_tensor(5, dtype=dtype, device=device, requires_grad=requires_grad), -3.14)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6211,
          "content": "yield SampleInput(t)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6216,
          "content": "yield SampleInput(t.clone().requires_grad_(requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6222,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6223,
          "content": "SampleInput(torch.rand(S, S, S, device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6225,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6226,
          "content": "SampleInput(a, fweights=torch.rand(S, S, device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6228,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6229,
          "content": "SampleInput(a, aweights=torch.rand(S, S, device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6231,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6232,
          "content": "SampleInput(a, fweights=torch.rand(S, device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6234,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6235,
          "content": "SampleInput(a, aweights=torch.tensor([1, 1], device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6237,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6238,
          "content": "SampleInput(a, fweights=torch.tensor([1], device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6240,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6241,
          "content": "SampleInput(a, aweights=torch.rand(1, device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6243,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6244,
          "content": "SampleInput(a, fweights=torch.tensor([-1, -2, -3, -4 , -5], device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6246,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6247,
          "content": "SampleInput(a, aweights=torch.tensor([-1., -2., -3., -4., -5.], device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6260,
          "content": "yield SampleInput(make_arg(shape), args=(args,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6282,
          "content": "yield SampleInput(a, args=(permutation,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6285,
          "content": "yield SampleInput(a, args=(permutation,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6288,
          "content": "yield ErrorInput(SampleInput(make_tensor((1,), dtype=torch.float, device=device), kwargs={\"lambd\": -0.5}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6297,
          "content": "yield SampleInput(make_arg(S, S), kwargs={\"lambd\": lbda})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6308,
          "content": "yield SampleInput(make_arg(S, S), kwargs={\"lambd\": lbda})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6319,
          "content": "yield SampleInput(make_arg(S, S), kwargs={\"min_val\": min_val, \"max_val\": max_val})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6325,
          "content": "yield ErrorInput(SampleInput(make_tensor((1,), dtype=torch.float, device=device), kwargs={\"min_val\": 0.5, \"max_val\": -0.5}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6344,
          "content": "yield SampleInput([c(x)], 'i->')                      # sum",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6345,
          "content": "yield SampleInput([c(x), c(y)], 'i,j->ij')            # outer",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6348,
          "content": "yield SampleInput([c(A)], \"ij->i\")                    # col sum",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6349,
          "content": "yield SampleInput([c(A), c(B)], \"ij,kj->ik\")          # matmul",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6350,
          "content": "yield SampleInput([c(A), c(E)], \"ij,Ab->ijAb\")        # matrix outer product",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6353,
          "content": "yield SampleInput([c(C), c(D)], \"aij,ajk->aik\")       # batch matmul",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6354,
          "content": "yield SampleInput([c(D), c(E)], \"aij,jk->aik\")        # tensor matrix contraction",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6355,
          "content": "yield SampleInput([c(C), c(B)], \"ijk,ik->j\")          # non contiguous",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6358,
          "content": "yield SampleInput([c(I)], 'iji->j')                   # non-contiguous trace",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6361,
          "content": "yield SampleInput([c(H)], \"i...->...\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6362,
          "content": "yield SampleInput([c(C), c(x)], '...ik, ...j -> ij')",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6371,
          "content": "yield SampleInput(make_arg(size), kwargs={\"dims\": dims})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6379,
          "content": "return (SampleInput(make_arg(shape, low=None, high=None)) for shape in shapes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6382,
          "content": "yield ErrorInput(SampleInput(make_tensor((1,), dtype=torch.float, device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6386,
          "content": "yield ErrorInput(SampleInput(make_tensor((), dtype=torch.float, device=device)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6394,
          "content": "yield SampleInput(make_arg(shape), args=(make_arg(shape), make_arg(shape)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6395,
          "content": "yield SampleInput(make_arg(shape), args=(make_arg(shape[1:]), make_arg(shape[1:])))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6396,
          "content": "yield SampleInput(make_arg(shape), args=(make_arg((S, 1, S)),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6397,
          "content": "yield SampleInput(make_arg(shape), args=(None, make_arg(shape)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6398,
          "content": "yield SampleInput(make_arg(shape), args=(make_arg(shape), None))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6400,
          "content": "yield SampleInput(make_arg(shape), args=(make_integral_arg(shape), None))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6401,
          "content": "yield SampleInput(make_arg(shape), args=(make_arg(shape), make_integral_arg(shape)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6423,
          "content": "yield SampleInput(make_arg(a), args=(make_arg(b), make_arg(c)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6424,
          "content": "yield SampleInput(make_arg(a, noncontiguous=True),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6442,
          "content": "yield SampleInput(make_arg(a), args=(b, c))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6457,
          "content": "yield SampleInput(a, args=(b, c))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6472,
          "content": "yield SampleInput(a, args=(b, c))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6506,
          "content": "yield SampleInput(make_arg((S, S, S)), args=(dim,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6509,
          "content": "yield SampleInput(make_arg(size), args=(0,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6511,
          "content": "yield SampleInput(prod_zeros([0, 1]), args=(1,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6512,
          "content": "yield SampleInput(prod_zeros([0, 2]), args=(1,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6513,
          "content": "yield SampleInput(prod_zeros([1, 2]), args=(1,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6516,
          "content": "yield SampleInput(prod_zeros([1, 2]), args=(1,), kwargs={'dtype': dtype})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6519,
          "content": "yield SampleInput(make_tensor((S, 2), dtype=dtype, device=device, requires_grad=requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6524,
          "content": "return (SampleInput(make_arg(size)) for size in sizes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6538,
          "content": "yield ErrorInput(SampleInput(make_arg(M, S), make_arg(M, S, dtype=torch.int)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6541,
          "content": "yield ErrorInput(SampleInput(make_arg(M, S), make_arg(M, S, dtype=torch.float64)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6544,
          "content": "yield ErrorInput(SampleInput(make_arg(M, S, dtype=torch.float64), make_arg(M, S, dtype=torch.float64),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6551,
          "content": "yield SampleInput(make_arg(shape), make_arg(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6565,
          "content": "yield SampleInput(sample.input.clone().requires_grad_(requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6573,
          "content": "yield SampleInput(prod_single_zero())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6574,
          "content": "yield SampleInput(make_arg((3, 3, 3)), args=(1,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6575,
          "content": "yield SampleInput(make_arg((3, 3, 3)), args=(1,), kwargs={'keepdim': True})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6577,
          "content": "yield SampleInput(make_arg((3, 0)), args=(1,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6578,
          "content": "yield SampleInput(make_arg((3, 0)), args=(1,), kwargs={'keepdim': True})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6579,
          "content": "yield SampleInput(torch.tensor([2., 3, 0, 0], dtype=dtype, device=device, requires_grad=requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6584,
          "content": "yield SampleInput(zero.clone().requires_grad_(requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6585,
          "content": "yield SampleInput(zero.clone().requires_grad_(requires_grad), args=(0,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6586,
          "content": "yield SampleInput(zero.clone().requires_grad_(requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6591,
          "content": "si = SampleInput(torch.tensor((False, True), device=device))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6595,
          "content": "yield ErrorInput(si, error_regex=msg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6599,
          "content": "yield SampleInput(make_arg(M))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6610,
          "content": "yield SampleInput(tensor.clone().requires_grad_(requires_grad), *arg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6651,
          "content": "yield SampleInput(input=make_arg(shape), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6676,
          "content": "yield SampleInput(input_, args=(src, *arg_tuple))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6682,
          "content": "yield SampleInput(make_arg((S, S))).with_metadata(output_process_fn_grad=lambda x: x.to_dense())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6683,
          "content": "yield SampleInput(make_arg((S, S)), 1).with_metadata(output_process_fn_grad=lambda x: x.to_dense())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6737,
          "content": "yield SampleInput(input, target, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6754,
          "content": "yield SampleInput(make_arg((S, S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6755,
          "content": "yield SampleInput(make_arg((S, S, S)), 0.2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6756,
          "content": "yield SampleInput(make_arg(()))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6757,
          "content": "yield SampleInput(make_arg(()), 0.2)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6763,
          "content": "yield SampleInput(make_arg((L,)), args=(make_arg((S,)),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6765,
          "content": "yield SampleInput(make_arg((S,)), args=(make_arg((L,)),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6770,
          "content": "yield SampleInput(make_arg((S, S)), args=(torch.randn(S, S, device=device) > 0, make_arg((S, S))))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6771,
          "content": "yield SampleInput(make_arg((S, S)), args=(torch.randn((S,), device=device) > 0, make_arg((S, S))))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6772,
          "content": "yield SampleInput(make_arg((S, S)), args=(bernoulli_scalar().to(device), make_arg((S, S))))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6773,
          "content": "yield SampleInput(make_arg((S,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6780,
          "content": "yield ErrorInput(SampleInput(make_arg(1, 3), args=(torch.ones(1, 3, device=device, dtype=mask_dtype),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6787,
          "content": "yield SampleInput(make_arg((S, S)), args=(torch.randn(S, S, device=device) > 0, 10))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6788,
          "content": "yield SampleInput(make_arg((S, S)), args=(torch.randn(S, S, device=device) > 0, make_arg(())))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6789,
          "content": "yield SampleInput(make_arg((S, S)), args=(torch.randn(S, device=device) > 0, 10))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6790,
          "content": "yield SampleInput(make_arg(()), args=(torch.randn((), device=device) > 0, 10))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6791,
          "content": "yield SampleInput(make_arg(()), args=(torch.randn((), device=device) > 0, make_arg(())))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6792,
          "content": "yield SampleInput(make_arg((S, S)), args=(torch.randn((), device=device) > 0, 10))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6794,
          "content": "yield SampleInput(make_arg((S,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6797,
          "content": "yield SampleInput(make_arg((S,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6803,
          "content": "yield SampleInput(make_arg((S, S)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6810,
          "content": "yield ErrorInput(SampleInput(make_arg((2, 2)), args=(make_arg(()) > 0, make_arg((1,)))),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6813,
          "content": "yield ErrorInput(SampleInput(make_arg((2, 2)), args=(make_arg(()) > 0, 1j)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6816,
          "content": "yield ErrorInput(SampleInput(torch.ones(2, dtype=torch.long, device=device),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6822,
          "content": "yield ErrorInput(SampleInput(torch.randn((S, S), device='cpu'),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6832,
          "content": "yield SampleInput(make_arg((M, M)), torch.randn(M, M, device=device) > 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6834,
          "content": "yield SampleInput(make_arg((M, M)), torch.randn((M,), device=device) > 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6835,
          "content": "yield SampleInput(make_arg((M,)), torch.randn((M, M), device=device) > 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6837,
          "content": "yield SampleInput(make_arg((M, 1, M)), torch.randn((M, M), device=device) > 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6839,
          "content": "yield SampleInput(make_arg(()), torch.tensor(1, device=device, dtype=torch.bool))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6841,
          "content": "yield SampleInput(make_arg((M, M)), torch.tensor(1, device=device, dtype=torch.bool))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6843,
          "content": "yield SampleInput(make_arg(()), torch.randn((M, M), device=device) > 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6847,
          "content": "yield SampleInput(make_arg((S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6848,
          "content": "yield SampleInput(make_arg((S, S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6873,
          "content": "yield SampleInput(lhs, rhs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6875,
          "content": "yield SampleInput(rhs, lhs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6912,
          "content": "yield SampleInput(*args, indexing=indexing)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6934,
          "content": "yield SampleInput(make_arg(shape, low=min_val), args=(n,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6988,
          "content": "yield SampleInput(_make_tensor_helper((S, S, S)), 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6989,
          "content": "yield SampleInput(_make_tensor_helper((S, S, S)), 1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6990,
          "content": "yield SampleInput(_make_tensor_helper(()), 0)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 6995,
          "content": "yield SampleInput(_make_tensor_helper((S, S, S)), 1, dtype=dtype)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7025,
          "content": "yield SampleInput(make_tensor(shape, dtype=dtype, device=device,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7046,
          "content": "yield SampleInput(make_arg(shape), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7059,
          "content": "yield SampleInput(make_arg(shape), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7074,
          "content": "yield SampleInput(large_1d_unique(dtype, device))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7076,
          "content": "yield SampleInput(make_tensor((S, M, S), dtype=dtype, device=device,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7084,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S, S)), 0.4)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7086,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S,)), 0.4)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7088,
          "content": "yield SampleInput(make_arg(()), make_arg(()), 0.4)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7090,
          "content": "yield SampleInput(make_arg((S, S)), make_arg(()), 0.4)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7092,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S,)), make_arg((S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7094,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S, 1)), make_arg((S,)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7096,
          "content": "yield SampleInput(make_arg((S,)), make_arg((S, S)), 0.4).with_metadata(broadcasts_input=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7098,
          "content": "yield SampleInput(make_arg(()), make_arg((S, S)), 0.4).with_metadata(broadcasts_input=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7100,
          "content": "yield SampleInput(make_arg((S, 1)), make_arg((S, S)), 0.4).with_metadata(broadcasts_input=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7102,
          "content": "yield SampleInput(make_arg((S, 1)), make_arg((S, S)), make_arg((S, 1))).with_metadata(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7105,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S, S)), make_arg((S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7107,
          "content": "yield SampleInput(make_arg((S,)), make_arg((S, S)), make_arg((S, S))).with_metadata(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7110,
          "content": "yield SampleInput(make_arg((S,)), make_arg((S, S, S)), make_arg((S, S))).with_metadata(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7113,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S, S, S)), make_arg((S,))).with_metadata(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7118,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S, S)), 0.4j)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7119,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S, S)), 1.2 + 0.1j)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7121,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S,)), 0.4j)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7122,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S, S)), 5.4 + 9j)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7124,
          "content": "yield SampleInput(make_arg(()), make_arg(()), 0.4j)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7125,
          "content": "yield SampleInput(make_arg(()), make_arg(()), 6.1 + 0.004j)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7127,
          "content": "yield SampleInput(make_arg((S, S)), make_arg(()), 0.4j)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7128,
          "content": "yield SampleInput(make_arg((S, S)), make_arg(()), 1 + 2j)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7137,
          "content": "yield SampleInput(make_tensor(first_shape, dtype=dtype, device=device,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7153,
          "content": "yield SampleInput(input, other)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7157,
          "content": "yield SampleInput(make_arg(S), make_arg(S))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7158,
          "content": "yield SampleInput(make_arg(), make_arg(S, S))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7181,
          "content": "yield SampleInput(tensor, *args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7184,
          "content": "yield SampleInput(tensor.detach().clone(), *args, reduce='add')",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7187,
          "content": "yield SampleInput(tensor.detach().clone(), *args, reduce='multiply')",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7197,
          "content": "yield SampleInput(_tensor((M, S)), 0, _gather((S, S), 1, M), _tensor((S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7198,
          "content": "yield SampleInput(_tensor((M, S)), 1, _gather((S, S), 0, S), _tensor((S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7199,
          "content": "yield SampleInput(_tensor((M, S)), -1, _gather((S, S), 0, S), _tensor((S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7200,
          "content": "yield SampleInput(_tensor((M, S)), 0, _gather((M, S // 2), 1, M), _tensor((M, S // 2)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7201,
          "content": "yield SampleInput(_tensor((M, S)), 1, _gather((M, S // 2), 0, S), _tensor((M, S // 2)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7202,
          "content": "yield SampleInput(_tensor((M, S)), -1, _gather((M, S // 2), 0, S), _tensor((M, S // 2)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7203,
          "content": "yield SampleInput(_tensor(()), 0, zero.detach().clone(), _tensor(()))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7222,
          "content": "yield SampleInput(make_arg(inp_shape),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7240,
          "content": "yield SampleInput(input,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7277,
          "content": "yield SampleInput(_tensor(inp_shape),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7285,
          "content": "yield SampleInput(make_arg((S, S, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7286,
          "content": "yield SampleInput(make_arg(()))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7287,
          "content": "yield SampleInput(make_arg((S, S, S), noncontiguous=True))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7290,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7296,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7299,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7302,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7306,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7309,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7312,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7315,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7318,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7324,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7330,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7337,
          "content": "yield SampleInput(torch.tensor(i1, device=device, dtype=dtype), a.shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7338,
          "content": "yield SampleInput(torch.tensor(i2, device=device, dtype=dtype), b.shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7343,
          "content": "yield SampleInput(torch.tensor(i1, device=device, dtype=dtype), a.shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7344,
          "content": "yield SampleInput(torch.tensor(i2, device=device, dtype=dtype), b.shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7359,
          "content": "yield SampleInput(make_arg(shape), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7365,
          "content": "yield ErrorInput(SampleInput(make_arg((4,))), error_regex=\"input tensor must have at least 2 dimensions\")",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7385,
          "content": "yield SampleInput(args[0], args=args[1:], kwargs={\"dtype\": dtype, \"device\": device})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7390,
          "content": "yield SampleInput(make_arg((S, M, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7391,
          "content": "yield SampleInput(make_arg(()))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7409,
          "content": "yield SampleInput(make_arg(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7410,
          "content": "yield SampleInput(make_arg(shape).transpose(0, -1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7411,
          "content": "yield SampleInput(make_arg(shape, noncontiguous=True))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7412,
          "content": "yield SampleInput(make_arg(shape, noncontiguous=True).transpose(0, -1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7414,
          "content": "yield SampleInput(make_arg(shape), kwargs={'memory_format': torch.contiguous_format})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7415,
          "content": "yield SampleInput(make_arg(shape).transpose(0, -1), kwargs={'memory_format': torch.contiguous_format})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7416,
          "content": "yield SampleInput(make_arg(shape, noncontiguous=True), kwargs={'memory_format': torch.contiguous_format})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7417,
          "content": "yield SampleInput(make_arg(shape, noncontiguous=True).transpose(0, -1), kwargs={'memory_format': torch.contiguous_format})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7430,
          "content": "yield SampleInput(make_arg(500,).as_strided(shape, strides, offset))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7431,
          "content": "yield SampleInput(make_arg(500,).as_strided(shape, strides, offset), kwargs={'memory_format': torch.contiguous_format})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7434,
          "content": "yield SampleInput(make_arg((2, 2, 2, 2)), kwargs={'memory_format': torch.channels_last})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7436,
          "content": "yield SampleInput(a, kwargs={'memory_format': torch.channels_last})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7439,
          "content": "yield SampleInput(make_arg((2, 2, 2, 2, 2)), kwargs={'memory_format': torch.channels_last_3d})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7441,
          "content": "yield SampleInput(a, kwargs={'memory_format': torch.channels_last_3d})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7458,
          "content": "yield SampleInput(make_arg(input_shape), args=(output_shape,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7461,
          "content": "yield SampleInput(make_arg(input_shape), args=(list(output_shape),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7462,
          "content": "yield SampleInput(make_arg(input_shape), args=(*output_shape,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7468,
          "content": "si = SampleInput(make_tensor(shape, device=device, dtype=torch.float32), args=(M, M))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7469,
          "content": "yield ErrorInput(si, error_regex=err_msg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7473,
          "content": "si = SampleInput(make_tensor(shape, device=device, dtype=torch.float32), args=(M + 1, 1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7474,
          "content": "yield ErrorInput(si, error_regex=err_msg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7495,
          "content": "yield SampleInput(make_arg(shape, requires_grad=requires_grad), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7520,
          "content": "yield SampleInput(make_arg(a), args=(b,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7557,
          "content": "yield SampleInput(make_arg(a), args=(make_arg(b, requires_grad=False),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7558,
          "content": "yield SampleInput(make_arg(b), args=(make_arg(a, requires_grad=False),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7560,
          "content": "yield SampleInput(make_arg(a), args=(b,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7561,
          "content": "yield SampleInput(make_arg(b), args=(a,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7572,
          "content": "yield SampleInput(make_arg(a), args=(b,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7613,
          "content": "yield ErrorInput(SampleInput(make_arg(a), args=(b,)), error_type=Exception,",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7621,
          "content": "yield SampleInput(make_tensor_partial(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7622,
          "content": "yield SampleInput([make_tensor_partial(shape) for shape in shapes])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7631,
          "content": "yield SampleInput([make_tensor_partial(shape1), make_tensor_partial(shape2)])",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7637,
          "content": "yield SampleInput(make_tensor_partial(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7639,
          "content": "yield SampleInput(make_tensor_partial(shape), start_dim=1, end_dim=-1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7663,
          "content": "yield SampleInput(make_arg(shape), args=(start, end,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7664,
          "content": "yield SampleInput(make_arg(shape, noncontiguous=True).transpose(0, -1), args=(start, end,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7665,
          "content": "yield SampleInput(make_arg(shape).transpose(0, -1), args=(start, end,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7682,
          "content": "yield SampleInput(make_tensor_partial(in_shape), args=(dim, sizes))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7697,
          "content": "yield SampleInput(make_arg(shape), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7713,
          "content": "yield SampleInput(input_, args=(src, *args))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7733,
          "content": "yield SampleInput(input_, args=(src, *args))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7751,
          "content": "yield SampleInput(make_arg(shape), args=(args,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7761,
          "content": "yield SampleInput(make_arg(shape),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7763,
          "content": "yield SampleInput(make_arg((2, 3, 2, 3)), kwargs={'memory_format': torch.channels_last})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7773,
          "content": "yield SampleInput(make_arg(shape),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7775,
          "content": "yield SampleInput(make_arg((2, 3, 2, 3)), kwargs={'memory_format': torch.channels_last})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7786,
          "content": "yield SampleInput(make_arg(shape, requires_grad=requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7822,
          "content": "yield SampleInput(make_arg(shape),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7839,
          "content": "yield SampleInput(a, args=(c, b))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7852,
          "content": "yield SampleInput(a, args=(c, b))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7859,
          "content": "yield SampleInput(a, args=(c, b))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7874,
          "content": "yield SampleInput(a, args=(c, b))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7878,
          "content": "yield SampleInput(scalar, args=(c, b))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7879,
          "content": "yield SampleInput(a, args=(c, scalar))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7887,
          "content": "si = SampleInput(make_tensor(shape, device=devices[0], dtype=torch.float32),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7890,
          "content": "yield ErrorInput(si, error_regex=err_msg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7910,
          "content": "yield SampleInput(input_t.clone().requires_grad_(requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7933,
          "content": "yield SampleInput(input_t.clone().requires_grad_(requires_grad),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7945,
          "content": "yield SampleInput(make_arg(shape), args=args)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7970,
          "content": "yield SampleInput(make_arg(shape), args=(chunks, dim))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7989,
          "content": "yield from (SampleInput(_tensor(tensor), *args) for tensor, args in test_cases)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7995,
          "content": "yield ErrorInput(SampleInput(t, 5, out=(t, indices)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7999,
          "content": "yield ErrorInput(SampleInput(torch.randn(2, 2, device=device), 3, 0),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8001,
          "content": "yield ErrorInput(SampleInput(torch.randn(2, 2, device=device), 3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8003,
          "content": "yield ErrorInput(SampleInput(torch.tensor(2, device=device), 3),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8020,
          "content": "yield SampleInput(make_arg(case), p=p, training=training)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8021,
          "content": "yield SampleInput(make_arg(case))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8031,
          "content": "yield SampleInput(make_arg(case), make_mask(case), scale)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8034,
          "content": "def make_input(shape):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8037,
          "content": "def make_long_input(shape, *, low, high, noncontiguous=False):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8045,
          "content": "return make_input(idx.shape)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8056,
          "content": "idx = make_long_input((S,), low=0, high=M)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8058,
          "content": "yield SampleInput(make_input((M, S)), args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8062,
          "content": "idx = make_long_input((S,), low=0, high=M, noncontiguous=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8064,
          "content": "yield SampleInput(make_input((M, S)), args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8069,
          "content": "idx = make_long_input((S,), low=0, high=M, noncontiguous=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8071,
          "content": "yield SampleInput(make_input((M, S)), args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8077,
          "content": "idx = make_long_input((S, S), low=0, high=M)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8079,
          "content": "yield SampleInput(make_input((M, S)), args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8082,
          "content": "idx = make_long_input((S, S), low=0, high=M, noncontiguous=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8084,
          "content": "yield SampleInput(make_input((M, S)), args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8089,
          "content": "idx = make_long_input((6,), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8093,
          "content": "yield SampleInput(make_input((S, S)), args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8097,
          "content": "idx = make_long_input((3, 3), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8102,
          "content": "yield SampleInput(make_input((S, S)), args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8106,
          "content": "idx = make_long_input((6, ), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8107,
          "content": "weights = make_input((S, S))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8110,
          "content": "yield SampleInput(weights, args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8119,
          "content": "idx = make_long_input((2, 2), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8120,
          "content": "weights = make_input((S, S)) * 2",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8122,
          "content": "yield SampleInput(weights, args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8126,
          "content": "idx = make_long_input((6, ), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8127,
          "content": "weights = make_input((S, S)) * 2",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8129,
          "content": "yield SampleInput(weights, args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8137,
          "content": "idx = make_long_input((2, 2), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8140,
          "content": "weights = make_input((S, S))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8142,
          "content": "yield SampleInput(weights, args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8148,
          "content": "idx = make_long_input((6, ), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8149,
          "content": "weights = make_input((S, S))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8151,
          "content": "yield SampleInput(weights, args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8155,
          "content": "idx = make_long_input((6, ), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8159,
          "content": "weights = make_input((S, S)) * 2",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8161,
          "content": "yield SampleInput(weights, args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8168,
          "content": "def make_input(shape):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8171,
          "content": "def make_long_input(shape, *, low, high):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8175,
          "content": "idx = make_long_input((), low=0, high=M)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8176,
          "content": "yield SampleInput(make_input((M, S)), args=(idx,),)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8179,
          "content": "idx = make_long_input((S,), low=0, high=M)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8180,
          "content": "yield SampleInput(make_input((M, S)), args=(idx,),)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8183,
          "content": "idx = make_long_input((S, S), low=0, high=M)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8184,
          "content": "yield SampleInput(make_input((M, S)), args=(idx,),)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8191,
          "content": "idx = make_long_input((2, 2), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8194,
          "content": "yield SampleInput(make_input((S, S)), args=(idx,), kwargs={'padding_idx': 2},)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8196,
          "content": "idx = make_long_input((2, 2), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8199,
          "content": "yield SampleInput(make_input((S, S)), args=(idx,), kwargs={'padding_idx': -1},)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8203,
          "content": "idx = make_long_input((2, 2), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8204,
          "content": "weights = make_input((S, S)) * 2",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8205,
          "content": "yield SampleInput(weights, args=(idx,), kwargs={'max_norm': 1.},)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8207,
          "content": "idx = make_long_input((2, 2), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8208,
          "content": "weights = make_input((S, S)) * 2",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8209,
          "content": "yield SampleInput(weights, args=(idx,), kwargs={'max_norm': 1., 'norm_type': 1.0},)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8212,
          "content": "idx = make_long_input((2, 2), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8215,
          "content": "weights = make_input((S, S))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8216,
          "content": "yield SampleInput(weights, args=(idx,), kwargs={'scale_grad_by_freq': True},)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8219,
          "content": "idx = make_long_input((2, 2), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8220,
          "content": "weights = make_input((S, S))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8221,
          "content": "yield SampleInput(weights, args=(idx,), kwargs={'sparse': True})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8223,
          "content": "idx = make_long_input((3, 3), low=0, high=S)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8227,
          "content": "weights = make_input((S, S)) * 2",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8228,
          "content": "yield SampleInput(weights, args=(idx,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8234,
          "content": "def make_input(shape, *, low, high):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8241,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8242,
          "content": "make_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8269,
          "content": "yield SampleInput(_make_tensor(shape),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8291,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8329,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8351,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8373,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8374,
          "content": "make_input(s),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8375,
          "content": "args=(make_input(s), make_target(s)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8407,
          "content": "yield SampleInput(log_probs, args=(targets, input_lengths, target_lengths,),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8435,
          "content": "yield make_input(s), make_target(s), dict(reduction=reduction)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8436,
          "content": "yield make_input(s), make_target(s), dict(weight=make_weight(), reduction=reduction)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8437,
          "content": "yield make_input(s), make_target(s), dict(weight=make_weight(low=0), reduction=reduction)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8438,
          "content": "yield make_input(s), make_target(s), dict(weight=make_weight(high=0), reduction=reduction)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8444,
          "content": "yield make_input(s), t, dict(ignore_index=num_classes // 2, reduction=reduction)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8445,
          "content": "yield make_input(s), t, dict(ignore_index=num_classes // 2, reduction=reduction, weight=make_weight())",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8449,
          "content": "yield make_input(s), make_target(s, zeros=True), dict(ignore_index=0, reduction=reduction)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8452,
          "content": "yield SampleInput(input, args=(target,), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8455,
          "content": "yield SampleInput(make_input(shape), args=(target,), kwargs={'ignore_index': -1})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8480,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8487,
          "content": "yield SampleInput(torch.tensor([1, 0, 2, 0], dtype=dtype, device=device, requires_grad=requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8495,
          "content": "yield SampleInput(t)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8499,
          "content": "yield SampleInput(t)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8502,
          "content": "yield SampleInput(t)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8504,
          "content": "yield SampleInput(torch.zeros((S,), dtype=dtype, device=device, requires_grad=requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8505,
          "content": "yield SampleInput(make_tensor((), dtype=dtype, device=device, requires_grad=requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8541,
          "content": "yield SampleInput(input, args=(target, var, ), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8547,
          "content": "yield ErrorInput(SampleInput(_make(10, 2, 3), _make(10, 2, 3), _make((10, 2, 3), low=0), reduction=\"abc\"),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8551,
          "content": "yield ErrorInput(SampleInput(_make(10, 2, 3), _make(10, 2, 3), _make((10, 2, 2), low=0)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8555,
          "content": "yield ErrorInput(SampleInput(_make(10, 2, 3), _make(10, 2, 2), _make((10, 2, 3), low=0)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8573,
          "content": "yield SampleInput(input, args=(target, ), kwargs=d)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8577,
          "content": "yield SampleInput(_make_tensor(()), args=(_make_tensor(()), ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8582,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5, 4),), kwargs={'reduction': 'abc'}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8592,
          "content": "inp = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8594,
          "content": "target = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8599,
          "content": "yield SampleInput(inp, args=(target,), kwargs={'reduction': reduction})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8602,
          "content": "inp = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8604,
          "content": "target = make_input((10, ))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8608,
          "content": "yield SampleInput(inp, args=(target,), kwargs={'reduction': reduction})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8611,
          "content": "inp = make_input((5, 5))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8612,
          "content": "target = make_input((1, 5))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8616,
          "content": "yield SampleInput(inp, args=(target,), kwargs={'reduction': reduction})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8621,
          "content": "yield SampleInput(input, args=(target, ), kwargs=d)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8627,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5, 4),), kwargs={'reduction': 'abc'}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8632,
          "content": "yield ErrorInput(SampleInput(make_input(5, 4), args=(make_input(5, 4),), kwargs={'delta': delta}),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8669,
          "content": "yield SampleInput(input, args=(target, ), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8674,
          "content": "yield SampleInput(_make_tensor(dtype=dtype), args=(_make_tensor(dtype=d),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8675,
          "content": "yield SampleInput(_make_tensor(dtype=d), args=(_make_tensor(dtype=dtype),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8681,
          "content": "yield ErrorInput(SampleInput(make(5, 4), args=(make(5, 4),),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8686,
          "content": "yield ErrorInput(SampleInput(make(5, 4), args=(make(5,),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8696,
          "content": "yield ErrorInput(SampleInput(make(5, 4), args=(make(5, 4),),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8701,
          "content": "yield ErrorInput(SampleInput(make(5, 4), args=(make(5,),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8721,
          "content": "yield SampleInput(input, args=args, kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8729,
          "content": "(make_input(3, 4), (make_input(3, 4), make_input(3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8734,
          "content": "(make_input(3, 4), (make_input(3, 4), make_input(3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8739,
          "content": "(make_input(3, 5), (make_input(3, 4), make_input(3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8745,
          "content": "(make_input(3, 4), (make_input(3, 5), make_input(3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8751,
          "content": "(make_input(3, 4), (make_input(3, 4), make_input(3, 5)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8759,
          "content": "(make_input(3,), (make_input(3, 4), make_input(3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8765,
          "content": "(make_input(3, 4), (make_input(3,), make_input(3, 4)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8771,
          "content": "(make_input(3, 4), (make_input(3, 4), make_input(3,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8780,
          "content": "yield ErrorInput(SampleInput(input, args=args, kwargs=kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8794,
          "content": "samples.append(SampleInput(mat1, mat2, scale1, scale2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8800,
          "content": "samples.append(SampleInput(mat1, mat2, scale1, scale2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8806,
          "content": "samples.append(SampleInput(mat1, mat2, scale1, scale2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8828,
          "content": "samples.append(SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8838,
          "content": "diff_v_head_dim = SampleInput(  # noqa: F841",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8848,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8877,
          "content": "samples.append(SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8895,
          "content": "diff_v_head_dim = SampleInput(  # noqa: F841",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8913,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8935,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 8970,
          "content": "samples.append(SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9002,
          "content": "SampleInput(make(shape), args=(make(shape),), kwargs=kwargs) for shape, kwargs in shapes_and_kwargs",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9008,
          "content": "SampleInput(make_arg((1, 9, 2, 2)), upscale_factor=upscale_factor)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9012,
          "content": "SampleInput(make_arg(shape), upscale_factor=1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9023,
          "content": "SampleInput(make_arg((1, 1, 6, 6)), downscale_factor=downscale_factor)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9027,
          "content": "SampleInput(make_arg(shape), downscale_factor=1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9045,
          "content": "SampleInput(make_arg(shape), args=(groups,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9070,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9084,
          "content": "yield SampleInput(t, close, rtol=rtol, atol=atol)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9089,
          "content": "yield SampleInput(a, b, rtol=rtol, atol=atol)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9098,
          "content": "yield SampleInput(make(dtype=dtype), args=(make(dtype=torch.double),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9099,
          "content": "yield SampleInput(make(dtype=torch.double), args=(make(dtype=dtype),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9105,
          "content": "yield ErrorInput(SampleInput(make(5, 4), args=(make(5, 4),),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9110,
          "content": "yield ErrorInput(SampleInput(make(5, 4), args=(make(5,),)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9124,
          "content": "yield SampleInput(make(low=0, high=2), args=(make(low=-2, high=0),), kwargs=dict(beta=5))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9125,
          "content": "yield SampleInput(make(), args=(make(),), kwargs=dict(beta=0))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9147,
          "content": "yield SampleInput(input, args=(target,), kwargs=dict(reduction=reduction, log_target=log_target))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9152,
          "content": "yield from (SampleInput(make_input((n, m))) for n, m in itertools.product((1, S), repeat=2))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9153,
          "content": "yield from (SampleInput(make_input((S, S)), kwargs=dict(p=p)) for p in (0.0, 1.0, 2.0, 10.0, float(\"inf\")))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9168,
          "content": "yield SampleInput(make_input(()))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9169,
          "content": "yield SampleInput(make_input((2,)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9170,
          "content": "yield SampleInput(make_input((2, 2)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9171,
          "content": "yield SampleInput(make_input((2,)), offset=1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9172,
          "content": "yield SampleInput(make_input((2,)), offset=-1)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9222,
          "content": "yield SampleInput(arg, args=(indices,), kwargs=sample_kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9235,
          "content": "# input (simply put, they have the same corresponding index).",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9276,
          "content": "attn_mask = make_input(src_len, tgt_len)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9278,
          "content": "attn_mask = make_input((bsz if is_batched else 1) * num_heads, src_len, tgt_len)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9281,
          "content": "q = make_input(src_len, bsz, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9282,
          "content": "k = make_input(tgt_len, bsz, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9283,
          "content": "v = make_input(tgt_len, bsz, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9285,
          "content": "q = make_input(src_len, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9286,
          "content": "k = make_input(tgt_len, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9287,
          "content": "v = make_input(tgt_len, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9290,
          "content": "q_proj_weight = make_input(emb_size, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9291,
          "content": "k_proj_weight = make_input(emb_size, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9292,
          "content": "v_proj_weight = make_input(emb_size, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9294,
          "content": "in_proj_weight = make_input(emb_size * 3, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9299,
          "content": "bias_k = make_input(emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9300,
          "content": "bias_v = make_input(emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9301,
          "content": "in_proj_bias = make_input(emb_size * 3)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9302,
          "content": "out_proj_weight = make_input(emb_size, emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9303,
          "content": "out_proj_bias = make_input(emb_size)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9318,
          "content": "yield SampleInput(q, args=sample_args, kwargs=sample_kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9336,
          "content": "class ForeachSampleInput(SampleInput):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9535,
          "content": "yield ForeachSampleInput(input, *args, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9571,
          "content": "sample = ForeachSampleInput(input, *args, ref_args=ref_args, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9575,
          "content": "yield ForeachSampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9610,
          "content": "yield ForeachSampleInput(input, ord=ord, disable_fastpath=disable_fastpath)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9635,
          "content": "yield ForeachSampleInput(input, ord=ord, disable_fastpath=disable_fastpath, dtype=out_dtype)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9652,
          "content": "yield ForeachSampleInput([x], ord=ord, disable_fastpath=disable_fastpath)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9681,
          "content": "yield ForeachSampleInput(input, *args, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9719,
          "content": "sample = ForeachSampleInput(input, *args, **kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11666,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11667,
          "content": "SampleInput(make_tensor((3, 4, 5), dtype=torch.int64, device=device), []),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11679,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11680,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11707,
          "content": "yield SampleInput(make_tensor((S,), dtype=dtype, device=device, requires_grad=requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 11708,
          "content": "yield SampleInput(make_tensor((), dtype=dtype, device=device, requires_grad=requires_grad))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 12792,
          "content": "gradcheck_wrapper=lambda *args, **kwargs: gradcheck_wrapper_triangular_input(*args, idx=1, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 17883,
          "content": "gradcheck_wrapper=lambda *args, **kwargs: gradcheck_wrapper_triangular_input(*args, idx=1, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 20888,
          "content": "# Not a problem: embedding does weird stuff to its input (it renormalizes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 20914,
          "content": "# Not a problem: embedding_bag does weird stuff to its input (it renormalizes)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 251,
          "content": "class DDPUnevenTestInput(NamedTuple):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 5959,
          "content": "def test_DistributedDataParallel_SyncBatchNorm_2D_Input(self):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7343,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7349,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7355,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7362,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7369,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7379,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7387,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7410,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7422,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 7433,
          "content": "DDPUnevenTestInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9124,
          "content": "test_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9125,
          "content": "test_local_model.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9143,
          "content": "def test_ddp_sync_bn_training_vs_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9172,
          "content": "model_inference.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 9180,
          "content": "# Ensure sync does not occur in eval() mode.",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 261,
          "content": "layer_parallelize_plan[\"attention\"] = PrepareModuleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 321,
          "content": "self._verify_graph_for_rpc_call_exec(next(iter(send_functions.values())))",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 411,
          "content": "self._verify_graph_for_rpc_call_exec(next(iter(send_functions.values())))",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 480,
          "content": "self._verify_graph_for_rpc_call_exec(list(send_functions.values())[1])",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 944,
          "content": "def _verify_graph_for_rpc_call_exec(self, send_function):",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 136,
          "content": "builtins.exec(code_str, g)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 267,
          "content": "def test_train_eval(self):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 283,
          "content": "remote_module.eval()",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 72,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 73,
          "content": "SampleInput(make_arg()),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 82,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 83,
          "content": "SampleInput(make_arg(), dim=(0,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 102,
          "content": "yield SampleInput(a)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 111,
          "content": "yield SampleInput(mt((9, 10)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 112,
          "content": "yield SampleInput(mt((50,)), kwargs=dict(dim=0))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 113,
          "content": "yield SampleInput(mt((5, 11)), kwargs=dict(dim=(1,)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 114,
          "content": "yield SampleInput(mt((5, 6)), kwargs=dict(dim=(0, 1)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "yield SampleInput(mt((5, 6, 2)), kwargs=dict(dim=(0, 2)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 63,
          "content": "SampleInput(make_arg(shape), args=dim, kwargs=kwargs) for shape, dim in cases",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 108,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 123,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 145,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 157,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 185,
          "content": "new_sample = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 197,
          "content": "new_sample = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 213,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 229,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 282,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 297,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 349,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 380,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 404,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 418,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 119,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 128,
          "content": "yield SampleInput(make_arg((S, 3)), args=(make_arg((S, 3)),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 129,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 132,
          "content": "yield SampleInput(make_arg((1, 3)), args=(make_arg((S, 3)),), kwargs=dict(dim=-1))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 138,
          "content": "sample = SampleInput(input=make_arg((S, 3)), args=(make_arg((S, 1)),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 140,
          "content": "yield ErrorInput(sample, error_regex=err, error_type=RuntimeError)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 142,
          "content": "sample = SampleInput(input=make_arg((5, S, 3)), args=(make_arg((S, 3)),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 144,
          "content": "yield ErrorInput(sample, error_regex=err, error_type=RuntimeError)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 146,
          "content": "sample = SampleInput(input=make_arg((S, 2)), args=(make_arg((S, 2)),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 148,
          "content": "yield ErrorInput(sample, error_regex=err, error_type=RuntimeError)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 150,
          "content": "sample = SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "yield ErrorInput(sample, error_regex=err, error_type=IndexError)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 174,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S,)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 175,
          "content": "yield SampleInput(make_arg((S + 1, S)), make_arg((S,)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 176,
          "content": "yield SampleInput(make_arg((2, 1, S, S)), make_arg((2, 1, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 177,
          "content": "yield SampleInput(make_arg((2, 1, S + 1, S)), make_arg((2, 1, S)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 178,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 182,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((0,), low=None, high=None))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 184,
          "content": "yield SampleInput(make_arg((S, S)), make_arg((S - 2,), low=None, high=None))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 186,
          "content": "yield SampleInput(make_arg((S, S - 1)), make_arg((S - 2,), low=None, high=None))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 207,
          "content": "yield SampleInput(make_arg(size), args=(n,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 209,
          "content": "yield SampleInput(make_arg_fullrank(*size), args=(n,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 236,
          "content": "yield SampleInput(A)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 271,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 277,
          "content": "yield SampleInput(clone(B, B_grad), args=(clone(LU, LU_grad), pivots))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 300,
          "content": "yield SampleInput(tensors)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 318,
          "content": "yield SampleInput(make_arg(size), args=(ord, dim, keepdim))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 367,
          "content": "yield SampleInput(make_arg(test_size), keepdim=keepdim)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 398,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 409,
          "content": "yield SampleInput(make_arg(test_size), ord, keepdim=keepdim)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 412,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 425,
          "content": "yield SampleInput(make_arg(shape), args=(make_arg(shape),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 427,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 454,
          "content": "yield SampleInput(make_arg(*batch, n, n))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 519,
          "content": "yield SampleInput(a, args=(b,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 535,
          "content": "yield SampleInput(make_arg(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 552,
          "content": "yield SampleInput(make_arg(shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 559,
          "content": "yield SampleInput(make_arg(shape), kwargs=dict(N=N))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 601,
          "content": "yield SampleInput(l)  # upper=False by default",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 602,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 608,
          "content": "yield SampleInput(u, kwargs=dict(upper=True))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 622,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 626,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 630,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 633,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 641,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 645,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 693,
          "content": "yield SampleInput(factors, args=(pivots, B), kwargs=dict(hermitian=False))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 695,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 705,
          "content": "yield SampleInput(factors, args=(pivots, B), kwargs=dict(hermitian=True))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 707,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 744,
          "content": "yield SampleInput(a, b, driver=driver)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 749,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 750,
          "content": "SampleInput(zero_d, args=(zero_d,)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 758,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 759,
          "content": "SampleInput(zero_d, args=(zero_d, None)),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 786,
          "content": "yield SampleInput(make_arg(shape), kwargs=kwarg)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 814,
          "content": "sample = SampleInput(input=arg, kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 837,
          "content": "yield ErrorInput(sample, error_regex=err, error_type=RuntimeError)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 844,
          "content": "yield ErrorInput(sample, error_regex=err, error_type=IndexError)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 872,
          "content": "yield SampleInput(a, upper=upper)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 981,
          "content": "yield SampleInput(make_a(*batch, n, n), args=(make_b(batch + (n,) + rhs),))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1017,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1023,
          "content": "yield SampleInput(A, args=(B,), kwargs=kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1072,
          "content": "yield SampleInput(A, kwargs={\"pivot\": pivot}, output_process_fn_grad=out_fn)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1084,
          "content": "yield SampleInput(make_arg(batch + (m, n)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1101,
          "content": "yield SampleInput(make_arg(*shape))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1118,
          "content": "yield SampleInput(a, b, dims=dims)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1124,
          "content": "def make_input():",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1134,
          "content": "inp = make_input().reshape(*shape_lhs, *shape_rhs).detach()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1136,
          "content": "yield SampleInput(inp, ind=len(shape_lhs))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 237,
          "content": "return SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 344,
          "content": "def _slice_input(t, i=i, inp=nt_inp):",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 359,
          "content": "inp = _slice_input(sample.input)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 516,
          "content": "yield SampleInput(njt, kwargs=dict(op_kwargs), name=_describe_njt(njt))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 530,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 551,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 558,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 577,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 584,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 600,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 607,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 617,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 624,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 649,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 656,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 697,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 709,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 721,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 736,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 747,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 761,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 807,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 871,
          "content": "yield SampleInput(njt, name=_describe_njt(njt))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 885,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 924,
          "content": "yield SampleInput(_clone(njt), kwargs={\"dtype\": dtype}, name=sample_name)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 930,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 947,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1003,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1018,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1041,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1065,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1081,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1122,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1127,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1149,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1171,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1210,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1227,
          "content": "sample = SampleInput(sample.args[0], args=(sample.input,), kwargs=new_kwargs)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1256,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1266,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1292,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1301,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1329,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1427,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1434,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 36,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 61,
          "content": "yield SampleInput(size, sym=False)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "yield SampleInput(size, sym=True)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 80,
          "content": "yield SampleInput(size, sym=False, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 82,
          "content": "yield SampleInput(size, sym=True, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 98,
          "content": "yield SampleInput(size, sym=False, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 99,
          "content": "yield SampleInput(size, sym=True, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 115,
          "content": "yield SampleInput(size, sym=False, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 116,
          "content": "yield SampleInput(size, sym=True, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 134,
          "content": "yield SampleInput(size, sym=False, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 135,
          "content": "yield SampleInput(size, sym=True, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 153,
          "content": "yield SampleInput(size, sym=False, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 154,
          "content": "yield SampleInput(size, sym=True, **kw)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 159,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 160,
          "content": "SampleInput(-1, *args, dtype=torch.float32, device=device, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 166,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 167,
          "content": "SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 180,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 181,
          "content": "SampleInput(3, *args, dtype=torch.long, device=device, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 187,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 188,
          "content": "SampleInput(3, *args, dtype=torch.bfloat16, device=device, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 194,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 195,
          "content": "SampleInput(3, *args, dtype=torch.float16, device=device, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 206,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 207,
          "content": "SampleInput(3, tau=-1, dtype=torch.float32, device=device, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 213,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 214,
          "content": "SampleInput(3, center=1, sym=True, dtype=torch.float32, device=device),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 225,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 226,
          "content": "SampleInput(3, std=-1, dtype=torch.float32, device=device, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 237,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 238,
          "content": "SampleInput(3, beta=-1, dtype=torch.float32, device=device, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 249,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 250,
          "content": "SampleInput(3, a=None, dtype=torch.float32, device=device, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 255,
          "content": "yield ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 256,
          "content": "SampleInput(3, a=[], dtype=torch.float32, device=device, **kwargs),",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 65,
          "content": "sample = validate_sample_input(op_info, sample, check_validate=check_validate)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 71,
          "content": "sample = validate_sample_input(op_info, sample, check_validate=check_validate)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 83,
          "content": "sample = validate_sample_input(op_info, sample, check_validate=check_validate)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 156,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 175,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 183,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 216,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 221,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 227,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 233,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 248,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 253,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 263,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 272,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 284,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 289,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 294,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 300,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 309,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 335,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 342,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 349,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 355,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 360,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 380,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 386,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 392,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 398,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 404,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 412,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 424,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 430,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 436,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 442,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 448,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 456,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 550,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 556,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 576,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 584,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 588,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 593,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 605,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 616,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 625,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 632,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 647,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 674,
          "content": "yield SampleInput(batch, args=(batch,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 678,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 684,
          "content": "yield SampleInput(regular, args=(regular,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 687,
          "content": "yield SampleInput(regular, args=(regular,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 690,
          "content": "yield SampleInput(regular, args=(regular,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 693,
          "content": "yield SampleInput(regular, args=(regular,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 696,
          "content": "yield SampleInput(regular, args=(regular,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 700,
          "content": "yield SampleInput(regular, args=(regular,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 703,
          "content": "yield SampleInput(regular, args=(regular,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 706,
          "content": "yield SampleInput(hybrid, args=(hybrid,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 766,
          "content": "yield SampleInput(tensor, args=(), kwargs={})",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 767,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 772,
          "content": "yield SampleInput(tensor, args=(), kwargs=dict(dtype=torch.float64))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 776,
          "content": "yield SampleInput(tensor, args=(), kwargs=dict(device=other_device))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 788,
          "content": "yield SampleInput(tensor, args=(), kwargs=dict(layout=other_layout))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 791,
          "content": "yield SampleInput(tensor, args=(), kwargs=dict(layout=torch.sparse_coo))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 802,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 810,
          "content": "return ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 839,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 846,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 896,
          "content": "sample = ErrorInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 53,
          "content": "yield SampleInput(make_arg((S,)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 54,
          "content": "yield SampleInput(make_arg(()))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 62,
          "content": "yield SampleInput(t)",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 78,
          "content": "yield SampleInput(make_arg(shape), args=(n,))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 104,
          "content": "yield SampleInput(make_arg((L,)))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 105,
          "content": "yield SampleInput(make_arg(()))",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 110,
          "content": "yield SampleInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 212,
          "content": "def eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 310,
          "content": "def eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 389,
          "content": "def eval(",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 407,
          "content": "def eval(cls, p: sympy.Expr, q: sympy.Expr) -> Optional[sympy.Expr]:",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 468,
          "content": "def eval(cls, p, q):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 525,
          "content": "def eval(cls, number):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 543,
          "content": "def eval(cls, number):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 574,
          "content": "def eval(cls, base, shift):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 584,
          "content": "def eval(cls, base, shift):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1038,
          "content": "def eval(cls, base, exp):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1065,
          "content": "def eval(cls, base, exp):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1087,
          "content": "def eval(cls, base, divisor):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1112,
          "content": "def eval(cls, base, divisor):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1146,
          "content": "def eval(cls, *args):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1202,
          "content": "def eval(cls, number):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1215,
          "content": "def eval(cls, number):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1230,
          "content": "def eval(cls, number):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1260,
          "content": "def eval(cls, number, ndigits):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1271,
          "content": "def eval(cls, number):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1326,
          "content": "def eval(cls, a):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1389,
          "content": "def eval(cls, a, b):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 75,
          "content": "exec(code, globs, None)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 96,
          "content": "exec(code, globs, None)",
          "pattern": "exec\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 258,
          "content": "debug_info_t = pickle.loads(raw_debug)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 259,
          "content": "parent = node.input().node()",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 324,
          "content": "with _set_model_to_eval(model):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 356,
          "content": "def _set_model_to_eval(model):",
          "pattern": "eval\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 86,
          "content": "pickle.loads(i) for i in serialized_results",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 373,
          "content": "globals={\"counter\": pickle.loads(pickle.dumps(counter))}",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 455,
          "content": "f\"with open({repr(path)}, 'rb') as f:\\n    {name} = pickle.load(f)\")",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 389,
          "content": "self._datapipe = pickle.loads(value)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 74,
          "content": "return pickle.loads(data)",
          "pattern": "pickle\\.loads?",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 704,
          "content": "#      populated by cloned version of the original input (either the clone done by the backward AD",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 511,
          "content": "f\"const auto{reference} {arg.name} = p_node->Input({i}).{type_conversion_method}\"",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 603,
          "content": "deprecated_defs = yaml.load(f, Loader=YamlLoader)",
          "pattern": "yaml\\.load\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 145,
          "content": "def dispatch_trace_input(arg: Argument | TensorOptionsArguments) -> Sequence[str]:",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 175,
          "content": "dispatch_trace_input(arg) for arg in args",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 626,
          "content": "# Maps the name of an input (to the original forward operator;",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 113,
          "content": "definitions = yaml.load(f, Loader=YamlLoader)",
          "pattern": "yaml\\.load\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1099,
          "content": "def gen_differentiable_input(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        },
        {
          "line": 1113,
          "content": "return DifferentiableInput(",
          "pattern": "input\\s*\\(",
          "severity": "medium",
          "description": "Potential security vulnerability detected"
        }
      ],
      "security_issues": [
        {
          "line": 1640,
          "type": "hardcoded_secret",
          "content": ">>> fs = filesystem('ftp', host='test.rebex.net', user='demo', password='password')",
          "severity": "high"
        },
        {
          "line": 87,
          "type": "hardcoded_secret",
          "content": "ENV_GITHUB_TOKEN = \"GITHUB_TOKEN\"",
          "severity": "high"
        },
        {
          "line": 470,
          "type": "hardcoded_secret",
          "content": "password = \":****\"",
          "severity": "high"
        },
        {
          "line": 6,
          "type": "hardcoded_secret",
          "content": ">>> for i in trange(10, token='{token}', channel_id='{channel_id}'):",
          "severity": "high"
        },
        {
          "line": 105,
          "type": "hardcoded_secret",
          "content": ">>> for i in tqdm(iterable, token='{token}', channel_id='{channel_id}'):",
          "severity": "high"
        },
        {
          "line": 6,
          "type": "hardcoded_secret",
          "content": ">>> for i in trange(10, token='{token}', chat_id='{chat_id}'):",
          "severity": "high"
        },
        {
          "line": 102,
          "type": "hardcoded_secret",
          "content": ">>> for i in tqdm(iterable, token='{token}', chat_id='{chat_id}'):",
          "severity": "high"
        },
        {
          "line": 6,
          "type": "hardcoded_secret",
          "content": ">>> for i in trange(10, token='{token}', channel='{channel}'):",
          "severity": "high"
        },
        {
          "line": 68,
          "type": "hardcoded_secret",
          "content": ">>> for i in tqdm(iterable, token='{token}', channel='{channel}'):",
          "severity": "high"
        },
        {
          "line": 637,
          "type": "hardcoded_secret",
          "content": "_token = 'e'",
          "severity": "high"
        },
        {
          "line": 643,
          "type": "hardcoded_secret",
          "content": "_token = 'd'",
          "severity": "high"
        },
        {
          "line": 713,
          "type": "hardcoded_secret",
          "content": "# token = \"]\"",
          "severity": "high"
        },
        {
          "line": 201,
          "type": "hardcoded_secret",
          "content": "_token = \"(%s)|(%s)|(%s)\" % (_instruction, _number, _comment)",
          "severity": "high"
        },
        {
          "line": 89,
          "type": "hardcoded_secret",
          "content": "start_token, end_token = '(\"', '\")'",
          "severity": "high"
        },
        {
          "line": 91,
          "type": "hardcoded_secret",
          "content": "start_token, end_token = \"('\", \"')\"",
          "severity": "high"
        },
        {
          "line": 102,
          "type": "hardcoded_secret",
          "content": "start_token = \"class \"",
          "severity": "high"
        },
        {
          "line": 103,
          "type": "hardcoded_secret",
          "content": "end_token = \"(\"",
          "severity": "high"
        }
      ],
      "compliance_issues": [],
      "security_score": 0,
      "scan_duration_ms": 66737.87569999695
    },
    "performance": {
      "timestamp": "2025-08-23T06:40:15.794292",
      "tests_run": 5,
      "tests_passed": 5,
      "performance_metrics": {
        "startup": {
          "test_name": "startup_performance",
          "value": 100.24905204772949,
          "threshold": 5000,
          "unit": "ms",
          "passed": true,
          "description": "System startup time"
        },
        "response_time": {
          "test_name": "response_time",
          "value": 10.26759147644043,
          "threshold": 1000,
          "unit": "ms",
          "passed": true,
          "description": "Average response time"
        },
        "throughput": {
          "test_name": "throughput",
          "value": 884.3843073421862,
          "threshold": 100,
          "unit": "ops/sec",
          "passed": true,
          "description": "Operations per second throughput"
        },
        "memory": {
          "test_name": "memory_usage",
          "value": 269.3798230394805,
          "threshold": 500,
          "unit": "MB",
          "passed": true,
          "description": "Memory usage"
        },
        "cpu": {
          "test_name": "cpu_usage",
          "value": 53.13480390771872,
          "threshold": 80,
          "unit": "%",
          "passed": true,
          "description": "CPU usage percentage"
        }
      },
      "threshold_violations": [],
      "performance_score": 100.0
    },
    "compliance": {
      "timestamp": "2025-08-23T06:40:17.000403",
      "frameworks_checked": 6,
      "compliance_results": {
        "GDPR": {
          "framework": "GDPR",
          "compliant": true,
          "compliance_score": 100.0,
          "checks_performed": 5,
          "violations": []
        },
        "CCPA": {
          "framework": "CCPA",
          "compliant": true,
          "compliance_score": 95.0,
          "checks_performed": 4,
          "violations": []
        },
        "HIPAA": {
          "framework": "HIPAA",
          "compliant": true,
          "compliance_score": 90.0,
          "checks_performed": 6,
          "violations": []
        },
        "SOC2": {
          "framework": "SOC2",
          "compliant": true,
          "compliance_score": 88.0,
          "checks_performed": 5,
          "violations": []
        },
        "ISO27001": {
          "framework": "ISO27001",
          "compliant": true,
          "compliance_score": 92.0,
          "checks_performed": 8,
          "violations": []
        },
        "NIST": {
          "framework": "NIST",
          "compliant": true,
          "compliance_score": 87.0,
          "checks_performed": 7,
          "violations": []
        }
      },
      "overall_compliance_score": 92.0,
      "non_compliant_items": []
    }
  },
  "gate_results": {
    "testing": {
      "passed": true,
      "score": 96.20689655172414,
      "threshold": 85.0
    },
    "security": {
      "passed": false,
      "score": 0,
      "threshold": 80.0
    },
    "performance": {
      "passed": true,
      "score": 100.0,
      "threshold": 75.0
    },
    "compliance": {
      "passed": true,
      "score": 92.0,
      "threshold": 90.0
    },
    "overall": {
      "passed": false,
      "score": 71.65172413793103,
      "threshold": 85.0
    }
  },
  "recommendations": [
    "Address 5676 security vulnerabilities",
    "Improve overall quality score from 71.7% to at least 85.0%"
  ],
  "overall_passed": false,
  "execution_time_ms": 67964.56456184387
}